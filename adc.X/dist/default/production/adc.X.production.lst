

Microchip Technology PIC LITE Macro Assembler V1.45 build -152302408 
                                                                                               Mon Jun 11 01:08:51 2018

Microchip Technology Omniscient Code Generator v1.45 (Free mode) build 201711160504
     1                           	processor	16F887
     2                           	opt	pw 120
     3                           	opt	lm
     4                           	psect	idataBANK1,global,class=CODE,delta=2
     5                           	psect	strings,global,class=STRING,delta=2
     6                           	psect	cinit,global,class=CODE,merge=1,delta=2
     7                           	psect	bssBANK1,global,class=BANK1,space=1,delta=1
     8                           	psect	dataBANK1,global,class=BANK1,space=1,delta=1
     9                           	psect	inittext,global,class=CODE,delta=2
    10                           	psect	clrtext,global,class=CODE,delta=2
    11                           	psect	cstackCOMMON,global,class=COMMON,space=1,delta=1
    12                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1
    13                           	psect	maintext,global,class=CODE,split=1,delta=2
    14                           	psect	text1,local,class=CODE,merge=1,delta=2
    15                           	psect	text2,local,class=CODE,merge=1,delta=2
    16                           	psect	text3,local,class=CODE,merge=1,delta=2
    17                           	psect	text4,local,class=CODE,merge=1,delta=2,group=2
    18                           	psect	text5,local,class=CODE,merge=1,delta=2
    19                           	psect	text6,local,class=CODE,merge=1,delta=2,group=2
    20                           	psect	text7,local,class=CODE,merge=1,delta=2,group=2
    21                           	psect	text8,local,class=CODE,merge=1,delta=2,group=2
    22                           	psect	text9,local,class=CODE,merge=1,delta=2,group=2
    23                           	psect	text10,local,class=CODE,merge=1,delta=2,group=2
    24                           	psect	text11,local,class=CODE,merge=1,delta=2,group=2
    25                           	psect	text12,local,class=CODE,merge=1,delta=2,group=2
    26                           	psect	text13,local,class=CODE,merge=1,delta=2,group=2
    27                           	psect	text14,local,class=CODE,merge=1,delta=2,group=2
    28                           	psect	text15,local,class=CODE,merge=1,delta=2,group=2
    29                           	psect	text16,local,class=CODE,merge=1,delta=2,group=2
    30                           	psect	text17,local,class=CODE,merge=1,delta=2,group=2
    31                           	psect	text18,local,class=CODE,merge=1,delta=2,group=2
    32                           	psect	text19,local,class=CODE,merge=1,delta=2,group=2
    33                           	psect	text20,local,class=CODE,merge=1,delta=2
    34                           	psect	text21,local,class=CODE,merge=1,delta=2
    35                           	psect	text22,local,class=CODE,merge=1,delta=2
    36                           	psect	text23,local,class=CODE,merge=1,delta=2
    37                           	psect	text24,local,class=CODE,merge=1,delta=2
    38                           	psect	text25,local,class=CODE,merge=1,delta=2
    39                           	psect	text26,local,class=CODE,merge=1,delta=2
    40                           	psect	text27,local,class=CODE,merge=1,delta=2
    41                           	psect	text28,local,class=CODE,merge=1,delta=2
    42                           	dabs	1,0x7E,2
    43  0000                     
    44                           ; Version 1.45
    45                           ; Generated 16/11/2017 GMT
    46                           ; 
    47                           ; Copyright Â© 2017, Microchip Technology Inc. and its subsidiaries ("Microchip")
    48                           ; All rights reserved.
    49                           ; 
    50                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    51                           ; 
    52                           ; Redistribution and use in source and binary forms, with or without modification, are
    53                           ; permitted provided that the following conditions are met:
    54                           ; 
    55                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    56                           ;        conditions and the following disclaimer.
    57                           ; 
    58                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    59                           ;        of conditions and the following disclaimer in the documentation and/or other
    60                           ;        materials provided with the distribution.
    61                           ; 
    62                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    63                           ;        software without specific prior written permission.
    64                           ; 
    65                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    66                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    67                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    68                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    69                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
    70                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
    71                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
    72                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    73                           ; 
    74                           ; 
    75                           ; Code-generator required, PIC16F887 Definitions
    76                           ; 
    77                           ; SFR Addresses
    78  0000                     	;# 
    79  0001                     	;# 
    80  0002                     	;# 
    81  0003                     	;# 
    82  0004                     	;# 
    83  0005                     	;# 
    84  0006                     	;# 
    85  0007                     	;# 
    86  0008                     	;# 
    87  0009                     	;# 
    88  000A                     	;# 
    89  000B                     	;# 
    90  000C                     	;# 
    91  000D                     	;# 
    92  000E                     	;# 
    93  000E                     	;# 
    94  000F                     	;# 
    95  0010                     	;# 
    96  0011                     	;# 
    97  0012                     	;# 
    98  0013                     	;# 
    99  0014                     	;# 
   100  0015                     	;# 
   101  0015                     	;# 
   102  0016                     	;# 
   103  0017                     	;# 
   104  0018                     	;# 
   105  0019                     	;# 
   106  001A                     	;# 
   107  001B                     	;# 
   108  001B                     	;# 
   109  001C                     	;# 
   110  001D                     	;# 
   111  001E                     	;# 
   112  001F                     	;# 
   113  0081                     	;# 
   114  0085                     	;# 
   115  0086                     	;# 
   116  0087                     	;# 
   117  0088                     	;# 
   118  0089                     	;# 
   119  008C                     	;# 
   120  008D                     	;# 
   121  008E                     	;# 
   122  008F                     	;# 
   123  0090                     	;# 
   124  0091                     	;# 
   125  0092                     	;# 
   126  0093                     	;# 
   127  0093                     	;# 
   128  0093                     	;# 
   129  0094                     	;# 
   130  0095                     	;# 
   131  0096                     	;# 
   132  0097                     	;# 
   133  0098                     	;# 
   134  0099                     	;# 
   135  009A                     	;# 
   136  009B                     	;# 
   137  009C                     	;# 
   138  009D                     	;# 
   139  009E                     	;# 
   140  009F                     	;# 
   141  0105                     	;# 
   142  0107                     	;# 
   143  0108                     	;# 
   144  0109                     	;# 
   145  010C                     	;# 
   146  010C                     	;# 
   147  010D                     	;# 
   148  010E                     	;# 
   149  010F                     	;# 
   150  0185                     	;# 
   151  0187                     	;# 
   152  0188                     	;# 
   153  0189                     	;# 
   154  018C                     	;# 
   155  018D                     	;# 
   156                           
   157                           	psect	idataBANK1
   158  0CEF                     __pidataBANK1:	
   159                           
   160                           ;initializer for configLCD@F1828
   161  0CEF  3454               	retlw	84
   162  0CF0  3465               	retlw	101
   163  0CF1  346D               	retlw	109
   164  0CF2  3470               	retlw	112
   165  0CF3  3465               	retlw	101
   166  0CF4  3472               	retlw	114
   167  0CF5  3461               	retlw	97
   168  0CF6  3474               	retlw	116
   169  0CF7  3475               	retlw	117
   170  0CF8  3472               	retlw	114
   171  0CF9  3461               	retlw	97
   172  0CFA  3400               	retlw	0
   173                           
   174                           ;initializer for defineChar@F1815
   175  0CFB  340F               	retlw	15
   176  0CFC  3409               	retlw	9
   177  0CFD  3409               	retlw	9
   178  0CFE  340F               	retlw	15
   179  0CFF  3400               	retlw	0
   180  0D00  3400               	retlw	0
   181  0D01  3400               	retlw	0
   182  0D02  3400               	retlw	0
   183                           
   184                           	psect	strings
   185  0800                     __pstrings:	
   186  0800                     stringtab:	
   187  0800                     __stringtab:	
   188  0800                     stringcode:	
   189                           ;	String table - string pointers are 1 byte each
   190                           
   191  0800                     stringdir:	
   192  0800  3008               	movlw	high stringdir
   193  0801  008A               	movwf	10
   194  0802  0804               	movf	4,w
   195  0803  0A84               	incf	4,f
   196  0804  0782               	addwf	2,f
   197  0805                     __stringbase:	
   198  0805  3400               	retlw	0
   199  0806                     __end_of__stringtab:	
   200  0806                     _dpowers:	
   201  0806  3401               	retlw	1
   202  0807  3400               	retlw	0
   203  0808  3400               	retlw	0
   204  0809  3400               	retlw	0
   205  080A  340A               	retlw	10
   206  080B  3400               	retlw	0
   207  080C  3400               	retlw	0
   208  080D  3400               	retlw	0
   209  080E  3464               	retlw	100
   210  080F  3400               	retlw	0
   211  0810  3400               	retlw	0
   212  0811  3400               	retlw	0
   213  0812  34E8               	retlw	232
   214  0813  3403               	retlw	3
   215  0814  3400               	retlw	0
   216  0815  3400               	retlw	0
   217  0816  3410               	retlw	16
   218  0817  3427               	retlw	39
   219  0818  3400               	retlw	0
   220  0819  3400               	retlw	0
   221  081A  34A0               	retlw	160
   222  081B  3486               	retlw	134
   223  081C  3401               	retlw	1
   224  081D  3400               	retlw	0
   225  081E  3440               	retlw	64
   226  081F  3442               	retlw	66
   227  0820  340F               	retlw	15
   228  0821  3400               	retlw	0
   229  0822  3480               	retlw	128
   230  0823  3496               	retlw	150
   231  0824  3498               	retlw	152
   232  0825  3400               	retlw	0
   233  0826  3400               	retlw	0
   234  0827  34E1               	retlw	225
   235  0828  34F5               	retlw	245
   236  0829  3405               	retlw	5
   237  082A  3400               	retlw	0
   238  082B  34CA               	retlw	202
   239  082C  349A               	retlw	154
   240  082D  343B               	retlw	59
   241  082E                     __end_of_dpowers:	
   242  0008                     _PORTD	set	8
   243  0009                     _PORTEbits	set	9
   244  0019                     _TXREG	set	25
   245  001E                     _ADRESH	set	30
   246  000C                     _PIR1bits	set	12
   247  0018                     _RCSTAbits	set	24
   248  001F                     _ADCON0bits	set	31
   249  0001                     _TMR0	set	1
   250  000B                     _INTCONbits	set	11
   251  0089                     _TRISE	set	137
   252  0088                     _TRISD	set	136
   253  0098                     _TXSTAbits	set	152
   254  009E                     _ADRESL	set	158
   255  009F                     _ADCON1bits	set	159
   256  0086                     _TRISB	set	134
   257  0081                     _OPTION_REGbits	set	129
   258  008F                     _OSCCONbits	set	143
   259  0189                     _ANSELH	set	393
   260  0188                     _ANSEL	set	392
   261  082E                     STR_1:	
   262  082E  3425               	retlw	37	;'%'
   263  082F  346C               	retlw	108	;'l'
   264  0830  3475               	retlw	117	;'u'
   265  0831  342E               	retlw	46	;'.'
   266  0832  3425               	retlw	37	;'%'
   267  0833  3436               	retlw	54	;'6'
   268  0834  342E               	retlw	46	;'.'
   269  0835  3436               	retlw	54	;'6'
   270  0836  346C               	retlw	108	;'l'
   271  0837  3475               	retlw	117	;'u'
   272  0838  3400               	retlw	0
   273                           
   274                           ; #config settings
   275  0000                     
   276                           	psect	cinit
   277  07E8                     start_initialization:	
   278  07E8                     __initialization:	
   279                           
   280                           ; Initialize objects allocated to BANK1
   281  07E8  1383               	bcf	3,7	;select IRP bank0
   282  07E9  30B4               	movlw	low (__pdataBANK1+20)
   283  07EA  00FD               	movwf	btemp+-1
   284  07EB  300C               	movlw	high __pidataBANK1
   285  07EC  00FE               	movwf	btemp
   286  07ED  30EF               	movlw	low __pidataBANK1
   287  07EE  00FF               	movwf	btemp+1
   288  07EF  30A0               	movlw	low __pdataBANK1
   289  07F0  0084               	movwf	4
   290  07F1  120A  158A  24BA  120A  118A  	fcall	init_ram0
   291                           
   292                           ; Clear objects allocated to BANK1
   293  07F6  30B4               	movlw	low __pbssBANK1
   294  07F7  0084               	movwf	4
   295  07F8  30C5               	movlw	low (__pbssBANK1+17)
   296  07F9  120A  158A  2489   	fcall	clear_ram0
   297  07FC                     end_of_initialization:	
   298                           ;End of C runtime variable initialization code
   299                           
   300  07FC                     __end_of__initialization:	
   301  07FC  0183               	clrf	3
   302  07FD  120A  158A  2D45   	ljmp	_main	;jump to C main() function
   303                           
   304                           	psect	bssBANK1
   305  00B4                     __pbssBANK1:	
   306  00B4                     ftoa@buf:	
   307  00B4                     	ds	17
   308                           
   309                           	psect	dataBANK1
   310  00A0                     __pdataBANK1:	
   311  00A0                     configLCD@F1828:	
   312  00A0                     	ds	12
   313  00AC                     defineChar@F1815:	
   314  00AC                     	ds	8
   315                           
   316                           	psect	inittext
   317  0CB6                     init_fetch0:	
   318                           ;	Called with low address in FSR and high address in W
   319                           
   320  0CB6  087E               	movf	126,w
   321  0CB7  008A               	movwf	10
   322  0CB8  087F               	movf	127,w
   323  0CB9  0082               	movwf	2
   324  0CBA                     init_ram0:	
   325                           ;Called with:
   326                           ;	high address of idata address in btemp 
   327                           ;	low address of idata address in btemp+1 
   328                           ;	low address of data in FSR
   329                           ;	high address + 1 of data in btemp-1
   330                           
   331  0CBA  24B6  120A  158A   	fcall	init_fetch0
   332  0CBD  0080               	movwf	0
   333  0CBE  0A84               	incf	4,f
   334  0CBF  0804               	movf	4,w
   335  0CC0  067D               	xorwf	125,w
   336  0CC1  1903               	btfsc	3,2
   337  0CC2  3400               	retlw	0
   338  0CC3  0AFF               	incf	127,f
   339  0CC4  1903               	btfsc	3,2
   340  0CC5  0AFE               	incf	126,f
   341  0CC6  2CBA               	goto	init_ram0
   342                           
   343                           	psect	clrtext
   344  0C89                     clear_ram0:	
   345                           ;	Called with FSR containing the base address, and
   346                           ;	W with the last address+1
   347                           
   348  0C89  0064               	clrwdt	;clear the watchdog before getting into this loop
   349  0C8A                     clrloop0:	
   350  0C8A  0180               	clrf	0	;clear RAM location pointed to by FSR
   351  0C8B  0A84               	incf	4,f	;increment pointer
   352  0C8C  0604               	xorwf	4,w	;XOR with final address
   353  0C8D  1903               	btfsc	3,2	;have we reached the end yet?
   354  0C8E  3400               	retlw	0	;all done for this memory range, return
   355  0C8F  0604               	xorwf	4,w	;XOR again to restore value
   356  0C90  2C8A               	goto	clrloop0	;do the next byte
   357                           
   358                           	psect	cstackCOMMON
   359  0070                     __pcstackCOMMON:	
   360  0070                     ?_isdigit:	
   361  0070                     ?___ftge:	
   362                           ; 1 bit 
   363                           
   364  0070                     ?_configTimer:	
   365                           ; 1 bit 
   366                           
   367  0070                     ??_configTimer:	
   368                           ; 1 bytes @ 0x0
   369                           
   370  0070                     ?_configADC:	
   371                           ; 1 bytes @ 0x0
   372                           
   373  0070                     ??_configADC:	
   374                           ; 1 bytes @ 0x0
   375                           
   376  0070                     ?_configUART:	
   377                           ; 1 bytes @ 0x0
   378                           
   379  0070                     ??_configUART:	
   380                           ; 1 bytes @ 0x0
   381                           
   382  0070                     ?_configLCD:	
   383                           ; 1 bytes @ 0x0
   384                           
   385  0070                     ?_waitTimer:	
   386                           ; 1 bytes @ 0x0
   387                           
   388  0070                     ??_waitTimer:	
   389                           ; 1 bytes @ 0x0
   390                           
   391  0070                     ?_runADC:	
   392                           ; 1 bytes @ 0x0
   393                           
   394  0070                     ??_runADC:	
   395                           ; 1 bytes @ 0x0
   396                           
   397  0070                     ?_sendADC:	
   398                           ; 1 bytes @ 0x0
   399                           
   400  0070                     ?_comando:	
   401                           ; 1 bytes @ 0x0
   402                           
   403  0070                     ?_dato:	
   404                           ; 1 bytes @ 0x0
   405                           
   406  0070                     ??_isdigit:	
   407                           ; 1 bytes @ 0x0
   408                           
   409  0070                     ?_main:	
   410                           ; 1 bytes @ 0x0
   411                           
   412  0070                     ?_defineChar:	
   413                           ; 1 bytes @ 0x0
   414                           
   415  0070                     ?_confBusLCD:	
   416                           ; 1 bytes @ 0x0
   417                           
   418  0070                     ??_confBusLCD:	
   419                           ; 1 bytes @ 0x0
   420                           
   421  0070                     ?___wmul:	
   422                           ; 1 bytes @ 0x0
   423                           
   424  0070                     ?___ftpack:	
   425                           ; 2 bytes @ 0x0
   426                           
   427  0070                     ?___ftneg:	
   428                           ; 3 bytes @ 0x0
   429                           
   430  0070                     ?___lldiv:	
   431                           ; 3 bytes @ 0x0
   432                           
   433  0070                     _isdigit$674:	
   434                           ; 4 bytes @ 0x0
   435                           
   436  0070                     comando@com:	
   437                           ; 1 bytes @ 0x0
   438                           
   439  0070                     dato@dat:	
   440                           ; 2 bytes @ 0x0
   441                           
   442  0070                     ___wmul@multiplier:	
   443                           ; 2 bytes @ 0x0
   444                           
   445  0070                     ___ftpack@arg:	
   446                           ; 2 bytes @ 0x0
   447                           
   448  0070                     ___ftge@ff1:	
   449                           ; 3 bytes @ 0x0
   450                           
   451  0070                     ___ftneg@f1:	
   452                           ; 3 bytes @ 0x0
   453                           
   454  0070                     ___lldiv@divisor:	
   455                           ; 3 bytes @ 0x0
   456                           
   457                           
   458                           ; 4 bytes @ 0x0
   459  0070                     	ds	1
   460  0071                     isdigit@c:	
   461                           
   462                           ; 1 bytes @ 0x1
   463  0071                     	ds	1
   464  0072                     ??_comando:	
   465  0072                     ??_dato:	
   466                           ; 1 bytes @ 0x2
   467                           
   468  0072                     confBusLCD@estado:	
   469                           ; 1 bytes @ 0x2
   470                           
   471  0072                     ___wmul@multiplicand:	
   472                           ; 2 bytes @ 0x2
   473                           
   474                           
   475                           ; 2 bytes @ 0x2
   476  0072                     	ds	1
   477  0073                     ??___ftneg:	
   478  0073                     ___ftpack@exp:	
   479                           ; 1 bytes @ 0x3
   480                           
   481  0073                     ___ftge@ff2:	
   482                           ; 1 bytes @ 0x3
   483                           
   484                           
   485                           ; 3 bytes @ 0x3
   486  0073                     	ds	1
   487  0074                     ??___wmul:	
   488  0074                     ___ftpack@sign:	
   489                           ; 1 bytes @ 0x4
   490                           
   491  0074                     confBusLCD@t:	
   492                           ; 1 bytes @ 0x4
   493                           
   494  0074                     comando@estado:	
   495                           ; 2 bytes @ 0x4
   496                           
   497  0074                     dato@estado:	
   498                           ; 2 bytes @ 0x4
   499                           
   500  0074                     ___wmul@product:	
   501                           ; 2 bytes @ 0x4
   502                           
   503  0074                     ___lldiv@dividend:	
   504                           ; 2 bytes @ 0x4
   505                           
   506                           
   507                           ; 4 bytes @ 0x4
   508  0074                     	ds	1
   509  0075                     ??___ftpack:	
   510                           
   511                           ; 1 bytes @ 0x5
   512  0075                     	ds	1
   513  0076                     ??___ftge:	
   514  0076                     comando@t:	
   515                           ; 1 bytes @ 0x6
   516                           
   517  0076                     dato@t:	
   518                           ; 2 bytes @ 0x6
   519                           
   520                           
   521                           ; 2 bytes @ 0x6
   522  0076                     	ds	2
   523  0078                     ??_defineChar:	
   524  0078                     ??___lldiv:	
   525                           ; 1 bytes @ 0x8
   526                           
   527  0078                     ?___ftadd:	
   528                           ; 1 bytes @ 0x8
   529                           
   530  0078                     ?___ftmul:	
   531                           ; 3 bytes @ 0x8
   532                           
   533  0078                     ?___lltoft:	
   534                           ; 3 bytes @ 0x8
   535                           
   536  0078                     ?___lwtoft:	
   537                           ; 3 bytes @ 0x8
   538                           
   539  0078                     ___lwtoft@c:	
   540                           ; 3 bytes @ 0x8
   541                           
   542  0078                     ___ftadd@f1:	
   543                           ; 2 bytes @ 0x8
   544                           
   545  0078                     ___ftmul@f1:	
   546                           ; 3 bytes @ 0x8
   547                           
   548  0078                     ___lltoft@c:	
   549                           ; 3 bytes @ 0x8
   550                           
   551                           
   552                           ; 4 bytes @ 0x8
   553  0078                     	ds	1
   554  0079                     ___lldiv@quotient:	
   555                           
   556                           ; 4 bytes @ 0x9
   557  0079                     	ds	2
   558  007B                     ??___lwtoft:	
   559  007B                     ___ftadd@f2:	
   560                           ; 1 bytes @ 0xB
   561                           
   562  007B                     ___ftmul@f2:	
   563                           ; 3 bytes @ 0xB
   564                           
   565                           
   566                           ; 3 bytes @ 0xB
   567  007B                     	ds	1
   568  007C                     ??___lltoft:	
   569                           
   570                           ; 1 bytes @ 0xC
   571  007C                     	ds	1
   572  007D                     ___lldiv@counter:	
   573  007D                     ___lltoft@exp:	
   574                           ; 1 bytes @ 0xD
   575                           
   576                           
   577                           ; 1 bytes @ 0xD
   578  007D                     	ds	1
   579  007E                     ??_main:	
   580  007E                     ??___ftsub:	
   581                           ; 1 bytes @ 0xE
   582                           
   583                           
   584                           	psect	cstackBANK0
   585  0020                     __pcstackBANK0:	
   586                           ; 1 bytes @ 0xE
   587                           
   588  0020                     ??___ftadd:	
   589  0020                     ??___ftmul:	
   590                           ; 1 bytes @ 0x0
   591                           
   592  0020                     ?___llmod:	
   593                           ; 1 bytes @ 0x0
   594                           
   595  0020                     ___llmod@divisor:	
   596                           ; 4 bytes @ 0x0
   597                           
   598  0020                     defineChar@data:	
   599                           ; 4 bytes @ 0x0
   600                           
   601                           
   602                           ; 8 bytes @ 0x0
   603  0020                     	ds	4
   604  0024                     ___ftadd@sign:	
   605  0024                     ___ftmul@exp:	
   606                           ; 1 bytes @ 0x4
   607                           
   608  0024                     ___llmod@dividend:	
   609                           ; 1 bytes @ 0x4
   610                           
   611                           
   612                           ; 4 bytes @ 0x4
   613  0024                     	ds	1
   614  0025                     ___ftadd@exp2:	
   615  0025                     ___ftmul@f3_as_product:	
   616                           ; 1 bytes @ 0x5
   617                           
   618                           
   619                           ; 3 bytes @ 0x5
   620  0025                     	ds	1
   621  0026                     ___ftadd@exp1:	
   622                           
   623                           ; 1 bytes @ 0x6
   624  0026                     	ds	1
   625  0027                     ?___ftsub:	
   626  0027                     ___ftsub@f2:	
   627                           ; 3 bytes @ 0x7
   628                           
   629                           
   630                           ; 3 bytes @ 0x7
   631  0027                     	ds	1
   632  0028                     ??___llmod:	
   633  0028                     defineChar@i:	
   634                           ; 1 bytes @ 0x8
   635                           
   636  0028                     ___ftmul@cntr:	
   637                           ; 1 bytes @ 0x8
   638                           
   639                           
   640                           ; 1 bytes @ 0x8
   641  0028                     	ds	1
   642  0029                     ??_configLCD:	
   643  0029                     ___ftmul@sign:	
   644                           ; 1 bytes @ 0x9
   645                           
   646  0029                     ___llmod@counter:	
   647                           ; 1 bytes @ 0x9
   648                           
   649                           
   650                           ; 1 bytes @ 0x9
   651  0029                     	ds	1
   652  002A                     ?_sprintf:	
   653  002A                     ?___ftdiv:	
   654                           ; 2 bytes @ 0xA
   655                           
   656  002A                     ?___fttol:	
   657                           ; 3 bytes @ 0xA
   658                           
   659  002A                     sprintf@f:	
   660                           ; 4 bytes @ 0xA
   661                           
   662  002A                     ___ftdiv@f2:	
   663                           ; 1 bytes @ 0xA
   664                           
   665  002A                     ___ftsub@f1:	
   666                           ; 3 bytes @ 0xA
   667                           
   668  002A                     ___fttol@f1:	
   669                           ; 3 bytes @ 0xA
   670                           
   671                           
   672                           ; 3 bytes @ 0xA
   673  002A                     	ds	3
   674  002D                     ___ftdiv@f1:	
   675  002D                     configLCD@msg:	
   676                           ; 3 bytes @ 0xD
   677                           
   678                           
   679                           ; 12 bytes @ 0xD
   680  002D                     	ds	1
   681  002E                     ??___fttol:	
   682                           
   683                           ; 1 bytes @ 0xE
   684  002E                     	ds	2
   685  0030                     ??___ftdiv:	
   686                           
   687                           ; 1 bytes @ 0x10
   688  0030                     	ds	2
   689  0032                     ___fttol@sign1:	
   690                           
   691                           ; 1 bytes @ 0x12
   692  0032                     	ds	1
   693  0033                     ??_sprintf:	
   694  0033                     ___fttol@lval:	
   695                           ; 1 bytes @ 0x13
   696                           
   697                           
   698                           ; 4 bytes @ 0x13
   699  0033                     	ds	1
   700  0034                     ___ftdiv@cntr:	
   701                           
   702                           ; 1 bytes @ 0x14
   703  0034                     	ds	1
   704  0035                     ___ftdiv@f3:	
   705                           
   706                           ; 3 bytes @ 0x15
   707  0035                     	ds	2
   708  0037                     ___fttol@exp1:	
   709                           
   710                           ; 1 bytes @ 0x17
   711  0037                     	ds	1
   712  0038                     sprintf@flag:	
   713  0038                     ___ftdiv@exp:	
   714                           ; 1 bytes @ 0x18
   715                           
   716                           
   717                           ; 1 bytes @ 0x18
   718  0038                     	ds	1
   719  0039                     configLCD@i:	
   720  0039                     sprintf@ap:	
   721                           ; 1 bytes @ 0x19
   722                           
   723  0039                     ___ftdiv@sign:	
   724                           ; 1 bytes @ 0x19
   725                           
   726                           
   727                           ; 1 bytes @ 0x19
   728  0039                     	ds	1
   729  003A                     sprintf@val:	
   730                           
   731                           ; 4 bytes @ 0x1A
   732  003A                     	ds	4
   733  003E                     sprintf@sp:	
   734                           
   735                           ; 1 bytes @ 0x1E
   736  003E                     	ds	1
   737  003F                     sprintf@width:	
   738                           
   739                           ; 2 bytes @ 0x1F
   740  003F                     	ds	2
   741  0041                     sprintf@prec:	
   742                           
   743                           ; 2 bytes @ 0x21
   744  0041                     	ds	2
   745  0043                     sprintf@c:	
   746                           
   747                           ; 1 bytes @ 0x23
   748  0043                     	ds	1
   749  0044                     ?_ftoa:	
   750  0044                     ftoa@f:	
   751                           ; 1 bytes @ 0x24
   752                           
   753                           
   754                           ; 3 bytes @ 0x24
   755  0044                     	ds	3
   756  0047                     ftoa@status:	
   757                           
   758                           ; 2 bytes @ 0x27
   759  0047                     	ds	2
   760  0049                     ??_ftoa:	
   761                           
   762                           ; 1 bytes @ 0x29
   763  0049                     	ds	1
   764  004A                     ftoa@rem:	
   765                           
   766                           ; 4 bytes @ 0x2A
   767  004A                     	ds	4
   768  004E                     ftoa@l:	
   769                           
   770                           ; 4 bytes @ 0x2E
   771  004E                     	ds	4
   772  0052                     ftoa@cp:	
   773                           
   774                           ; 1 bytes @ 0x32
   775  0052                     	ds	1
   776  0053                     ?_printADC:	
   777  0053                     printADC@value:	
   778                           ; 1 bytes @ 0x33
   779                           
   780                           
   781                           ; 3 bytes @ 0x33
   782  0053                     	ds	3
   783  0056                     ??_printADC:	
   784                           
   785                           ; 1 bytes @ 0x36
   786  0056                     	ds	3
   787  0059                     printADC@temperature:	
   788                           
   789                           ; 3 bytes @ 0x39
   790  0059                     	ds	3
   791  005C                     printADC@j:	
   792                           
   793                           ; 1 bytes @ 0x3C
   794  005C                     	ds	1
   795  005D                     printADC@buf:	
   796                           
   797                           ; 1 bytes @ 0x3D
   798  005D                     	ds	1
   799  005E                     printADC@i:	
   800                           
   801                           ; 2 bytes @ 0x3E
   802  005E                     	ds	2
   803  0060                     ??_sendADC:	
   804                           
   805                           ; 1 bytes @ 0x40
   806  0060                     	ds	4
   807  0064                     sendADC@converted:	
   808                           
   809                           ; 3 bytes @ 0x44
   810  0064                     	ds	3
   811  0067                     sendADC@medicion:	
   812                           
   813                           ; 2 bytes @ 0x47
   814  0067                     	ds	2
   815  0069                     sendADC@aux:	
   816                           
   817                           ; 1 bytes @ 0x49
   818  0069                     	ds	1
   819  006A                     sendADC@parteB:	
   820                           
   821                           ; 1 bytes @ 0x4A
   822  006A                     	ds	1
   823  006B                     sendADC@parteA:	
   824                           
   825                           ; 1 bytes @ 0x4B
   826  006B                     	ds	1
   827                           
   828                           	psect	maintext
   829  0D45                     __pmaintext:	
   830 ;;
   831 ;;Main: autosize = 0, tempsize = 0, incstack = 0, save=0
   832 ;;
   833 ;; *************** function _main *****************
   834 ;; Defined at:
   835 ;;		line 26 in file "adc_main.c"
   836 ;; Parameters:    Size  Location     Type
   837 ;;		None
   838 ;; Auto vars:     Size  Location     Type
   839 ;;		None
   840 ;; Return value:  Size  Location     Type
   841 ;;                  1    wreg      void 
   842 ;; Registers used:
   843 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
   844 ;; Tracked objects:
   845 ;;		On entry : B00/0
   846 ;;		On exit  : 0/0
   847 ;;		Unchanged: 0/0
   848 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   849 ;;      Params:         0       0       0       0       0
   850 ;;      Locals:         0       0       0       0       0
   851 ;;      Temps:          0       0       0       0       0
   852 ;;      Totals:         0       0       0       0       0
   853 ;;Total ram usage:        0 bytes
   854 ;; Hardware stack levels required when called:    6
   855 ;; This function calls:
   856 ;;		_configADC
   857 ;;		_configLCD
   858 ;;		_configTimer
   859 ;;		_configUART
   860 ;;		_runADC
   861 ;;		_sendADC
   862 ;;		_waitTimer
   863 ;; This function is called by:
   864 ;;		Startup code after reset
   865 ;; This function uses a non-reentrant model
   866 ;;
   867                           
   868                           
   869                           ;psect for function _main
   870  0D45                     _main:	
   871                           
   872                           ;adc_main.c: 27: configTimer();
   873                           
   874                           ;incstack = 0
   875                           ; Regs used in _main: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
   876  0D45  120A  158A  2491  120A  158A  	fcall	_configTimer
   877                           
   878                           ;adc_main.c: 28: configADC();
   879  0D4A  120A  158A  24C7  120A  158A  	fcall	_configADC
   880                           
   881                           ;adc_main.c: 29: configUART();
   882  0D4F  120A  158A  249C  120A  158A  	fcall	_configUART
   883                           
   884                           ;adc_main.c: 30: configLCD();
   885  0D54  120A  158A  2794  120A  158A  	fcall	_configLCD
   886  0D59                     l2122:	
   887                           ;adc_main.c: 32: while(1) {
   888                           
   889                           
   890                           ;adc_main.c: 33: waitTimer();
   891  0D59  120A  158A  2481  120A  158A  	fcall	_waitTimer
   892                           
   893                           ;adc_main.c: 35: runADC();
   894  0D5E  120A  158A  2472  120A  158A  	fcall	_runADC
   895                           
   896                           ;adc_main.c: 36: sendADC();
   897  0D63  120A  118A  20FF  120A  158A  	fcall	_sendADC
   898  0D68  2D59               	goto	l2122
   899  0D69                     __end_of_main:	
   900                           
   901                           	psect	text1
   902  0C81                     __ptext1:	
   903 ;; *************** function _waitTimer *****************
   904 ;; Defined at:
   905 ;;		line 67 in file "adc_main.c"
   906 ;; Parameters:    Size  Location     Type
   907 ;;		None
   908 ;; Auto vars:     Size  Location     Type
   909 ;;		None
   910 ;; Return value:  Size  Location     Type
   911 ;;                  1    wreg      void 
   912 ;; Registers used:
   913 ;;		wreg
   914 ;; Tracked objects:
   915 ;;		On entry : 0/0
   916 ;;		On exit  : 0/0
   917 ;;		Unchanged: 0/0
   918 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   919 ;;      Params:         0       0       0       0       0
   920 ;;      Locals:         0       0       0       0       0
   921 ;;      Temps:          0       0       0       0       0
   922 ;;      Totals:         0       0       0       0       0
   923 ;;Total ram usage:        0 bytes
   924 ;; Hardware stack levels used:    1
   925 ;; This function calls:
   926 ;;		Nothing
   927 ;; This function is called by:
   928 ;;		_main
   929 ;;		_wait10Timers
   930 ;; This function uses a non-reentrant model
   931 ;;
   932                           
   933                           
   934                           ;psect for function _waitTimer
   935  0C81                     _waitTimer:	
   936  0C81                     l80:	
   937                           ;adc_main.c: 69: ;
   938                           
   939                           ;adc_main.c: 68: while(INTCONbits.T0IF != 1)
   940                           
   941                           ;incstack = 0
   942                           ; Regs used in _waitTimer: [wreg]
   943                           
   944  0C81  1D0B               	btfss	11,2	;volatile
   945  0C82  2C81               	goto	l80
   946                           
   947                           ;adc_main.c: 70: TMR0 = 99;
   948  0C83  3063               	movlw	99
   949  0C84  1283               	bcf	3,5	;RP0=0, select bank0
   950  0C85  1303               	bcf	3,6	;RP1=0, select bank0
   951  0C86  0081               	movwf	1	;volatile
   952                           
   953                           ;adc_main.c: 71: INTCONbits.T0IF = 0;
   954  0C87  110B               	bcf	11,2	;volatile
   955  0C88  0008               	return
   956  0C89                     __end_of_waitTimer:	
   957                           
   958                           	psect	text2
   959  00FF                     __ptext2:	
   960 ;; *************** function _sendADC *****************
   961 ;; Defined at:
   962 ;;		line 87 in file "adc_main.c"
   963 ;; Parameters:    Size  Location     Type
   964 ;;		None
   965 ;; Auto vars:     Size  Location     Type
   966 ;;  converted       3   68[BANK0 ] float 
   967 ;;  medicion        2   71[BANK0 ] unsigned short 
   968 ;;  parteA          1   75[BANK0 ] unsigned char 
   969 ;;  parteB          1   74[BANK0 ] unsigned char 
   970 ;;  aux             1   73[BANK0 ] unsigned char 
   971 ;; Return value:  Size  Location     Type
   972 ;;                  1    wreg      void 
   973 ;; Registers used:
   974 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
   975 ;; Tracked objects:
   976 ;;		On entry : 0/0
   977 ;;		On exit  : 0/0
   978 ;;		Unchanged: 0/0
   979 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   980 ;;      Params:         0       0       0       0       0
   981 ;;      Locals:         0       8       0       0       0
   982 ;;      Temps:          0       4       0       0       0
   983 ;;      Totals:         0      12       0       0       0
   984 ;;Total ram usage:       12 bytes
   985 ;; Hardware stack levels used:    1
   986 ;; Hardware stack levels required when called:    5
   987 ;; This function calls:
   988 ;;		___ftdiv
   989 ;;		___lwtoft
   990 ;;		___wmul
   991 ;;		_printADC
   992 ;; This function is called by:
   993 ;;		_main
   994 ;; This function uses a non-reentrant model
   995 ;;
   996                           
   997                           
   998                           ;psect for function _sendADC
   999  00FF                     _sendADC:	
  1000                           
  1001                           ;adc_main.c: 88: unsigned char parteB, parteA, aux;
  1002                           ;adc_main.c: 89: unsigned short int medicion;
  1003                           ;adc_main.c: 90: float converted;
  1004                           ;adc_main.c: 91: parteA = ADRESH;
  1005                           
  1006                           ;incstack = 0
  1007                           ; Regs used in _sendADC: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
  1008  00FF  1283               	bcf	3,5	;RP0=0, select bank0
  1009  0100  1303               	bcf	3,6	;RP1=0, select bank0
  1010  0101  081E               	movf	30,w	;volatile
  1011  0102  00E0               	movwf	??_sendADC
  1012  0103  0860               	movf	??_sendADC,w
  1013  0104  00EB               	movwf	sendADC@parteA
  1014                           
  1015                           ;adc_main.c: 92: parteB = ADRESL;
  1016  0105  1683               	bsf	3,5	;RP0=1, select bank1
  1017  0106  1303               	bcf	3,6	;RP1=0, select bank1
  1018  0107  081E               	movf	30,w	;volatile
  1019  0108  1283               	bcf	3,5	;RP0=0, select bank0
  1020  0109  1303               	bcf	3,6	;RP1=0, select bank0
  1021  010A  00E0               	movwf	??_sendADC
  1022  010B  0860               	movf	??_sendADC,w
  1023  010C  00EA               	movwf	sendADC@parteB
  1024                           
  1025                           ;adc_main.c: 94: aux = parteA & 0x07;
  1026  010D  086B               	movf	sendADC@parteA,w
  1027  010E  3907               	andlw	7
  1028  010F  00E0               	movwf	??_sendADC
  1029  0110  0860               	movf	??_sendADC,w
  1030  0111  00E9               	movwf	sendADC@aux
  1031                           
  1032                           ;adc_main.c: 95: aux = aux << 2;
  1033  0112  0869               	movf	sendADC@aux,w
  1034  0113  00E0               	movwf	??_sendADC
  1035  0114  3001               	movlw	1
  1036  0115                     u2695:	
  1037  0115  1003               	clrc
  1038  0116  0DE0               	rlf	??_sendADC,f
  1039  0117  3EFF               	addlw	-1
  1040  0118  1D03               	skipz
  1041  0119  2915               	goto	u2695
  1042  011A  1003               	clrc
  1043  011B  0D60               	rlf	??_sendADC,w
  1044  011C  00E1               	movwf	??_sendADC+1
  1045  011D  0861               	movf	??_sendADC+1,w
  1046  011E  00E9               	movwf	sendADC@aux
  1047                           
  1048                           ;adc_main.c: 97: parteA = parteA >> 3;
  1049  011F  086B               	movf	sendADC@parteA,w
  1050  0120  00E0               	movwf	??_sendADC
  1051  0121  3003               	movlw	3
  1052  0122                     u2705:	
  1053  0122  1003               	clrc
  1054  0123  0CE0               	rrf	??_sendADC,f
  1055  0124  3EFF               	addlw	-1
  1056  0125  1D03               	skipz
  1057  0126  2922               	goto	u2705
  1058  0127  0860               	movf	??_sendADC,w
  1059  0128  00E1               	movwf	??_sendADC+1
  1060  0129  0861               	movf	??_sendADC+1,w
  1061  012A  00EB               	movwf	sendADC@parteA
  1062                           
  1063                           ;adc_main.c: 98: parteA = parteA | 0x80;
  1064  012B  086B               	movf	sendADC@parteA,w
  1065  012C  3880               	iorlw	128
  1066  012D  00E0               	movwf	??_sendADC
  1067  012E  0860               	movf	??_sendADC,w
  1068  012F  00EB               	movwf	sendADC@parteA
  1069                           
  1070                           ;adc_main.c: 100: parteB = parteB >> 6;
  1071  0130  086A               	movf	sendADC@parteB,w
  1072  0131  00E0               	movwf	??_sendADC
  1073  0132  3006               	movlw	6
  1074  0133                     u2715:	
  1075  0133  1003               	clrc
  1076  0134  0CE0               	rrf	??_sendADC,f
  1077  0135  3EFF               	addlw	-1
  1078  0136  1D03               	skipz
  1079  0137  2933               	goto	u2715
  1080  0138  0860               	movf	??_sendADC,w
  1081  0139  00E1               	movwf	??_sendADC+1
  1082  013A  0861               	movf	??_sendADC+1,w
  1083  013B  00EA               	movwf	sendADC@parteB
  1084                           
  1085                           ;adc_main.c: 101: parteB = parteB | aux;
  1086  013C  086A               	movf	sendADC@parteB,w
  1087  013D  0469               	iorwf	sendADC@aux,w
  1088  013E  00E0               	movwf	??_sendADC
  1089  013F  0860               	movf	??_sendADC,w
  1090  0140  00EA               	movwf	sendADC@parteB
  1091                           
  1092                           ;adc_main.c: 103: TXREG = parteB;
  1093  0141  086A               	movf	sendADC@parteB,w
  1094  0142  0099               	movwf	25	;volatile
  1095                           
  1096                           ;adc_main.c: 104: TXREG = parteA;
  1097  0143  086B               	movf	sendADC@parteA,w
  1098  0144  0099               	movwf	25	;volatile
  1099                           
  1100                           ;adc_main.c: 106: parteA = parteA & 0x1F;
  1101  0145  086B               	movf	sendADC@parteA,w
  1102  0146  391F               	andlw	31
  1103  0147  00E0               	movwf	??_sendADC
  1104  0148  0860               	movf	??_sendADC,w
  1105  0149  00EB               	movwf	sendADC@parteA
  1106                           
  1107                           ;adc_main.c: 107: medicion = (((short)parteA) << 5) | parteB;
  1108  014A  086A               	movf	sendADC@parteB,w
  1109  014B  00E0               	movwf	??_sendADC
  1110  014C  01E1               	clrf	??_sendADC+1
  1111  014D  086B               	movf	sendADC@parteA,w
  1112  014E  00E2               	movwf	??_sendADC+2
  1113  014F  01E3               	clrf	??_sendADC+3
  1114  0150  3005               	movlw	5
  1115  0151  00FF               	movwf	127
  1116  0152                     u2725:	
  1117  0152  1003               	clrc
  1118  0153  0DE2               	rlf	??_sendADC+2,f
  1119  0154  0DE3               	rlf	??_sendADC+3,f
  1120  0155  0BFF               	decfsz	127,f
  1121  0156  2952               	goto	u2725
  1122  0157  0860               	movf	??_sendADC,w
  1123  0158  0462               	iorwf	??_sendADC+2,w
  1124  0159  00E7               	movwf	sendADC@medicion
  1125  015A  0861               	movf	??_sendADC+1,w
  1126  015B  0463               	iorwf	??_sendADC+3,w
  1127  015C  00E8               	movwf	sendADC@medicion+1
  1128                           
  1129                           ;adc_main.c: 108: converted = (float)(5 * medicion) / 1023;
  1130  015D  30C0               	movlw	192
  1131  015E  00AA               	movwf	___ftdiv@f2
  1132  015F  307F               	movlw	127
  1133  0160  00AB               	movwf	___ftdiv@f2+1
  1134  0161  3044               	movlw	68
  1135  0162  00AC               	movwf	___ftdiv@f2+2
  1136  0163  0868               	movf	sendADC@medicion+1,w
  1137  0164  00F1               	movwf	___wmul@multiplier+1
  1138  0165  0867               	movf	sendADC@medicion,w
  1139  0166  00F0               	movwf	___wmul@multiplier
  1140  0167  3005               	movlw	5
  1141  0168  00F2               	movwf	___wmul@multiplicand
  1142  0169  3000               	movlw	0
  1143  016A  00F3               	movwf	___wmul@multiplicand+1
  1144  016B  120A  158A  2524  120A  118A  	fcall	___wmul
  1145  0170  0871               	movf	?___wmul+1,w
  1146  0171  00F9               	movwf	___lwtoft@c+1
  1147  0172  0870               	movf	?___wmul,w
  1148  0173  00F8               	movwf	___lwtoft@c
  1149  0174  120A  158A  24DB  120A  118A  	fcall	___lwtoft
  1150  0179  0878               	movf	?___lwtoft,w
  1151  017A  1283               	bcf	3,5	;RP0=0, select bank0
  1152  017B  1303               	bcf	3,6	;RP1=0, select bank0
  1153  017C  00AD               	movwf	___ftdiv@f1
  1154  017D  0879               	movf	?___lwtoft+1,w
  1155  017E  00AE               	movwf	___ftdiv@f1+1
  1156  017F  087A               	movf	?___lwtoft+2,w
  1157  0180  00AF               	movwf	___ftdiv@f1+2
  1158  0181  120A  118A  2198  120A  118A  	fcall	___ftdiv
  1159  0186  1283               	bcf	3,5	;RP0=0, select bank0
  1160  0187  1303               	bcf	3,6	;RP1=0, select bank0
  1161  0188  082A               	movf	?___ftdiv,w
  1162  0189  00E4               	movwf	sendADC@converted
  1163  018A  082B               	movf	?___ftdiv+1,w
  1164  018B  00E5               	movwf	sendADC@converted+1
  1165  018C  082C               	movf	?___ftdiv+2,w
  1166  018D  00E6               	movwf	sendADC@converted+2
  1167                           
  1168                           ;adc_main.c: 109: printADC(converted);
  1169  018E  0864               	movf	sendADC@converted,w
  1170  018F  00D3               	movwf	printADC@value
  1171  0190  0865               	movf	sendADC@converted+1,w
  1172  0191  00D4               	movwf	printADC@value+1
  1173  0192  0866               	movf	sendADC@converted+2,w
  1174  0193  00D5               	movwf	printADC@value+2
  1175  0194  120A  118A  23DB   	fcall	_printADC
  1176  0197  0008               	return
  1177  0198                     __end_of_sendADC:	
  1178                           
  1179                           	psect	text3
  1180  03DB                     __ptext3:	
  1181 ;; *************** function _printADC *****************
  1182 ;; Defined at:
  1183 ;;		line 112 in file "adc_main.c"
  1184 ;; Parameters:    Size  Location     Type
  1185 ;;  value           3   51[BANK0 ] float 
  1186 ;; Auto vars:     Size  Location     Type
  1187 ;;  temperature     3   57[BANK0 ] float 
  1188 ;;  i               2   62[BANK0 ] int 
  1189 ;;  buf             1   61[BANK0 ] PTR unsigned char 
  1190 ;;		 -> ftoa@buf(17), 
  1191 ;;  j               1   60[BANK0 ] unsigned char 
  1192 ;; Return value:  Size  Location     Type
  1193 ;;                  1    wreg      void 
  1194 ;; Registers used:
  1195 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
  1196 ;; Tracked objects:
  1197 ;;		On entry : 0/0
  1198 ;;		On exit  : 0/0
  1199 ;;		Unchanged: 0/0
  1200 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1201 ;;      Params:         0       3       0       0       0
  1202 ;;      Locals:         0       7       0       0       0
  1203 ;;      Temps:          0       3       0       0       0
  1204 ;;      Totals:         0      13       0       0       0
  1205 ;;Total ram usage:       13 bytes
  1206 ;; Hardware stack levels used:    1
  1207 ;; Hardware stack levels required when called:    4
  1208 ;; This function calls:
  1209 ;;		___ftdiv
  1210 ;;		___ftge
  1211 ;;		___ftmul
  1212 ;;		_comando
  1213 ;;		_dato
  1214 ;;		_ftoa
  1215 ;; This function is called by:
  1216 ;;		_sendADC
  1217 ;; This function uses a non-reentrant model
  1218 ;;
  1219                           
  1220                           
  1221                           ;psect for function _printADC
  1222  03DB                     _printADC:	
  1223                           
  1224                           ;adc_main.c: 114: char * buf;
  1225                           ;adc_main.c: 115: unsigned char j;
  1226                           ;adc_main.c: 116: int i;
  1227                           ;adc_main.c: 117: float temperature = (value*50)/5;
  1228                           
  1229                           ;incstack = 0
  1230                           ; Regs used in _printADC: [wreg-fsr0h+status,2+status,0+pclath+cstack]
  1231  03DB  3000               	movlw	0
  1232  03DC  1283               	bcf	3,5	;RP0=0, select bank0
  1233  03DD  1303               	bcf	3,6	;RP1=0, select bank0
  1234  03DE  00AA               	movwf	___ftdiv@f2
  1235  03DF  30A0               	movlw	160
  1236  03E0  00AB               	movwf	___ftdiv@f2+1
  1237  03E1  3040               	movlw	64
  1238  03E2  00AC               	movwf	___ftdiv@f2+2
  1239  03E3  3000               	movlw	0
  1240  03E4  00F8               	movwf	___ftmul@f1
  1241  03E5  3048               	movlw	72
  1242  03E6  00F9               	movwf	___ftmul@f1+1
  1243  03E7  3042               	movlw	66
  1244  03E8  00FA               	movwf	___ftmul@f1+2
  1245  03E9  0853               	movf	printADC@value,w
  1246  03EA  00FB               	movwf	___ftmul@f2
  1247  03EB  0854               	movf	printADC@value+1,w
  1248  03EC  00FC               	movwf	___ftmul@f2+1
  1249  03ED  0855               	movf	printADC@value+2,w
  1250  03EE  00FD               	movwf	___ftmul@f2+2
  1251  03EF  120A  118A  230A  120A  118A  	fcall	___ftmul
  1252  03F4  0878               	movf	?___ftmul,w
  1253  03F5  1283               	bcf	3,5	;RP0=0, select bank0
  1254  03F6  1303               	bcf	3,6	;RP1=0, select bank0
  1255  03F7  00AD               	movwf	___ftdiv@f1
  1256  03F8  0879               	movf	?___ftmul+1,w
  1257  03F9  00AE               	movwf	___ftdiv@f1+1
  1258  03FA  087A               	movf	?___ftmul+2,w
  1259  03FB  00AF               	movwf	___ftdiv@f1+2
  1260  03FC  120A  118A  2198  120A  118A  	fcall	___ftdiv
  1261  0401  1283               	bcf	3,5	;RP0=0, select bank0
  1262  0402  1303               	bcf	3,6	;RP1=0, select bank0
  1263  0403  082A               	movf	?___ftdiv,w
  1264  0404  00D9               	movwf	printADC@temperature
  1265  0405  082B               	movf	?___ftdiv+1,w
  1266  0406  00DA               	movwf	printADC@temperature+1
  1267  0407  082C               	movf	?___ftdiv+2,w
  1268  0408  00DB               	movwf	printADC@temperature+2
  1269                           
  1270                           ;adc_main.c: 118: buf = ftoa(temperature, i);
  1271  0409  0859               	movf	printADC@temperature,w
  1272  040A  00C4               	movwf	ftoa@f
  1273  040B  085A               	movf	printADC@temperature+1,w
  1274  040C  00C5               	movwf	ftoa@f+1
  1275  040D  085B               	movf	printADC@temperature+2,w
  1276  040E  00C6               	movwf	ftoa@f+2
  1277  040F  085E               	movf	printADC@i,w
  1278  0410  00C7               	movwf	ftoa@status
  1279  0411  085F               	movf	printADC@i+1,w
  1280  0412  00C8               	movwf	ftoa@status+1
  1281  0413  120A  118A  2250  120A  118A  	fcall	_ftoa
  1282  0418  1283               	bcf	3,5	;RP0=0, select bank0
  1283  0419  1303               	bcf	3,6	;RP1=0, select bank0
  1284  041A  00D6               	movwf	??_printADC
  1285  041B  0856               	movf	??_printADC,w
  1286  041C  00DD               	movwf	printADC@buf
  1287                           
  1288                           ;adc_main.c: 119: comando(0xC5);
  1289  041D  30C5               	movlw	197
  1290  041E  00F0               	movwf	comando@com
  1291  041F  3000               	movlw	0
  1292  0420  00F1               	movwf	comando@com+1
  1293  0421  120A  158A  25FE  120A  118A  	fcall	_comando
  1294                           
  1295                           ;adc_main.c: 120: if (temperature < 10)
  1296  0426  1283               	bcf	3,5	;RP0=0, select bank0
  1297  0427  1303               	bcf	3,6	;RP1=0, select bank0
  1298  0428  0859               	movf	printADC@temperature,w
  1299  0429  00F0               	movwf	___ftge@ff1
  1300  042A  085A               	movf	printADC@temperature+1,w
  1301  042B  00F1               	movwf	___ftge@ff1+1
  1302  042C  085B               	movf	printADC@temperature+2,w
  1303  042D  00F2               	movwf	___ftge@ff1+2
  1304  042E  3000               	movlw	0
  1305  042F  00F3               	movwf	___ftge@ff2
  1306  0430  3020               	movlw	32
  1307  0431  00F4               	movwf	___ftge@ff2+1
  1308  0432  3041               	movlw	65
  1309  0433  00F5               	movwf	___ftge@ff2+2
  1310  0434  120A  158A  26D9  120A  118A  	fcall	___ftge
  1311  0439  1803               	btfsc	3,0
  1312  043A  2C44               	goto	l2004
  1313                           
  1314                           ;adc_main.c: 121: dato('0');
  1315  043B  3030               	movlw	48
  1316  043C  00F0               	movwf	dato@dat
  1317  043D  3000               	movlw	0
  1318  043E  00F1               	movwf	dato@dat+1
  1319  043F  120A  158A  2643  120A  118A  	fcall	_dato
  1320  0444                     l2004:	
  1321                           
  1322                           ;adc_main.c: 122: for (i = 0; buf[i] != '.'; i++)
  1323  0444  1283               	bcf	3,5	;RP0=0, select bank0
  1324  0445  1303               	bcf	3,6	;RP1=0, select bank0
  1325  0446  01DE               	clrf	printADC@i
  1326  0447  01DF               	clrf	printADC@i+1
  1327  0448                     l2010:	
  1328  0448  085E               	movf	printADC@i,w
  1329  0449  075D               	addwf	printADC@buf,w
  1330  044A  00D6               	movwf	??_printADC
  1331  044B  0856               	movf	??_printADC,w
  1332  044C  0084               	movwf	4
  1333  044D  302E               	movlw	46
  1334  044E  1383               	bcf	3,7	;select IRP bank0
  1335  044F  0600               	xorwf	0,w
  1336  0450  1903               	btfsc	3,2
  1337  0451  2C6D               	goto	l2012
  1338                           
  1339                           ;adc_main.c: 123: dato(buf[i]);
  1340  0452  085E               	movf	printADC@i,w
  1341  0453  075D               	addwf	printADC@buf,w
  1342  0454  00D6               	movwf	??_printADC
  1343  0455  0856               	movf	??_printADC,w
  1344  0456  0084               	movwf	4
  1345  0457  1383               	bcf	3,7	;select IRP bank0
  1346  0458  0800               	movf	0,w
  1347  0459  00D7               	movwf	??_printADC+1
  1348  045A  01D8               	clrf	??_printADC+2
  1349  045B  0857               	movf	??_printADC+1,w
  1350  045C  00F0               	movwf	dato@dat
  1351  045D  0858               	movf	??_printADC+2,w
  1352  045E  00F1               	movwf	dato@dat+1
  1353  045F  120A  158A  2643  120A  118A  	fcall	_dato
  1354  0464  3001               	movlw	1
  1355  0465  1283               	bcf	3,5	;RP0=0, select bank0
  1356  0466  1303               	bcf	3,6	;RP1=0, select bank0
  1357  0467  07DE               	addwf	printADC@i,f
  1358  0468  1803               	skipnc
  1359  0469  0ADF               	incf	printADC@i+1,f
  1360  046A  3000               	movlw	0
  1361  046B  07DF               	addwf	printADC@i+1,f
  1362  046C  2C48               	goto	l2010
  1363  046D                     l2012:	
  1364                           
  1365                           ;adc_main.c: 124: for (j = i; j < i + 3; j++)
  1366  046D  085E               	movf	printADC@i,w
  1367  046E  00D6               	movwf	??_printADC
  1368  046F  0856               	movf	??_printADC,w
  1369  0470  00DC               	movwf	printADC@j
  1370  0471                     l2018:	
  1371  0471  085E               	movf	printADC@i,w
  1372  0472  3E03               	addlw	3
  1373  0473  00D6               	movwf	??_printADC
  1374  0474  085F               	movf	printADC@i+1,w
  1375  0475  1803               	skipnc
  1376  0476  3E01               	addlw	1
  1377  0477  3E00               	addlw	0
  1378  0478  00D7               	movwf	??_printADC+1
  1379  0479  0857               	movf	??_printADC+1,w
  1380  047A  3A80               	xorlw	128
  1381  047B  3C80               	sublw	128
  1382  047C  1D03               	skipz
  1383  047D  2C80               	goto	u2625
  1384  047E  0856               	movf	??_printADC,w
  1385  047F  025C               	subwf	printADC@j,w
  1386  0480                     u2625:	
  1387  0480  1803               	btfsc	3,0
  1388  0481  2C9D               	goto	l2020
  1389                           
  1390                           ;adc_main.c: 125: dato(buf[j]);
  1391  0482  1283               	bcf	3,5	;RP0=0, select bank0
  1392  0483  1303               	bcf	3,6	;RP1=0, select bank0
  1393  0484  085C               	movf	printADC@j,w
  1394  0485  075D               	addwf	printADC@buf,w
  1395  0486  00D6               	movwf	??_printADC
  1396  0487  0856               	movf	??_printADC,w
  1397  0488  0084               	movwf	4
  1398  0489  1383               	bcf	3,7	;select IRP bank0
  1399  048A  0800               	movf	0,w
  1400  048B  00D7               	movwf	??_printADC+1
  1401  048C  01D8               	clrf	??_printADC+2
  1402  048D  0857               	movf	??_printADC+1,w
  1403  048E  00F0               	movwf	dato@dat
  1404  048F  0858               	movf	??_printADC+2,w
  1405  0490  00F1               	movwf	dato@dat+1
  1406  0491  120A  158A  2643  120A  118A  	fcall	_dato
  1407  0496  3001               	movlw	1
  1408  0497  1283               	bcf	3,5	;RP0=0, select bank0
  1409  0498  1303               	bcf	3,6	;RP1=0, select bank0
  1410  0499  00D6               	movwf	??_printADC
  1411  049A  0856               	movf	??_printADC,w
  1412  049B  07DC               	addwf	printADC@j,f
  1413  049C  2C71               	goto	l2018
  1414  049D                     l2020:	
  1415                           
  1416                           ;adc_main.c: 126: dato(0);
  1417  049D  3000               	movlw	0
  1418  049E  00F0               	movwf	dato@dat
  1419  049F  00F1               	movwf	dato@dat+1
  1420  04A0  120A  158A  2643  120A  118A  	fcall	_dato
  1421                           
  1422                           ;adc_main.c: 127: dato('C');
  1423  04A5  3043               	movlw	67
  1424  04A6  00F0               	movwf	dato@dat
  1425  04A7  3000               	movlw	0
  1426  04A8  00F1               	movwf	dato@dat+1
  1427  04A9  120A  158A  2643   	fcall	_dato
  1428  04AC  0008               	return
  1429  04AD                     __end_of_printADC:	
  1430                           
  1431                           	psect	text4
  1432  0250                     __ptext4:	
  1433 ;; *************** function _ftoa *****************
  1434 ;; Defined at:
  1435 ;;		line 6 in file "/opt/microchip/xc8/v1.45/sources/common/ftoa.c"
  1436 ;; Parameters:    Size  Location     Type
  1437 ;;  f               3   36[BANK0 ] float 
  1438 ;;  status          2   39[BANK0 ] PTR int 
  1439 ;;		 -> RAM(512), 
  1440 ;; Auto vars:     Size  Location     Type
  1441 ;;  l               4   46[BANK0 ] unsigned long 
  1442 ;;  rem             4   42[BANK0 ] unsigned long 
  1443 ;;  cp              1   50[BANK0 ] PTR unsigned char 
  1444 ;;		 -> ftoa@buf(17), 
  1445 ;; Return value:  Size  Location     Type
  1446 ;;                  1    wreg      PTR unsigned char 
  1447 ;; Registers used:
  1448 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
  1449 ;; Tracked objects:
  1450 ;;		On entry : 0/0
  1451 ;;		On exit  : 0/0
  1452 ;;		Unchanged: 0/0
  1453 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1454 ;;      Params:         0       5       0       0       0
  1455 ;;      Locals:         0       9       0       0       0
  1456 ;;      Temps:          0       1       0       0       0
  1457 ;;      Totals:         0      15       0       0       0
  1458 ;;Total ram usage:       15 bytes
  1459 ;; Hardware stack levels used:    1
  1460 ;; Hardware stack levels required when called:    3
  1461 ;; This function calls:
  1462 ;;		___ftge
  1463 ;;		___ftmul
  1464 ;;		___ftneg
  1465 ;;		___ftsub
  1466 ;;		___fttol
  1467 ;;		___lltoft
  1468 ;;		_sprintf
  1469 ;; This function is called by:
  1470 ;;		_printADC
  1471 ;; This function uses a non-reentrant model
  1472 ;;
  1473                           
  1474                           
  1475                           ;psect for function _ftoa
  1476  0250                     _ftoa:	
  1477                           
  1478                           ;incstack = 0
  1479                           ; Regs used in _ftoa: [wreg-fsr0h+status,2+status,0+pclath+cstack]
  1480  0250  30B4               	movlw	(low (ftoa@buf| 0))& (0+255)
  1481  0251  1283               	bcf	3,5	;RP0=0, select bank0
  1482  0252  1303               	bcf	3,6	;RP1=0, select bank0
  1483  0253  00C9               	movwf	??_ftoa
  1484  0254  0849               	movf	??_ftoa,w
  1485  0255  00D2               	movwf	ftoa@cp
  1486  0256  0844               	movf	ftoa@f,w
  1487  0257  00F0               	movwf	___ftge@ff1
  1488  0258  0845               	movf	ftoa@f+1,w
  1489  0259  00F1               	movwf	___ftge@ff1+1
  1490  025A  0846               	movf	ftoa@f+2,w
  1491  025B  00F2               	movwf	___ftge@ff1+2
  1492  025C  3000               	movlw	0
  1493  025D  00F3               	movwf	___ftge@ff2
  1494  025E  3000               	movlw	0
  1495  025F  00F4               	movwf	___ftge@ff2+1
  1496  0260  3000               	movlw	0
  1497  0261  00F5               	movwf	___ftge@ff2+2
  1498  0262  120A  158A  26D9  120A  118A  	fcall	___ftge
  1499  0267  1803               	btfsc	3,0
  1500  0268  2A89               	goto	l1846
  1501  0269  302D               	movlw	45
  1502  026A  1283               	bcf	3,5	;RP0=0, select bank0
  1503  026B  1303               	bcf	3,6	;RP1=0, select bank0
  1504  026C  00C9               	movwf	??_ftoa
  1505  026D  0852               	movf	ftoa@cp,w
  1506  026E  0084               	movwf	4
  1507  026F  0849               	movf	??_ftoa,w
  1508  0270  1383               	bcf	3,7	;select IRP bank0
  1509  0271  0080               	movwf	0
  1510  0272  3001               	movlw	1
  1511  0273  00C9               	movwf	??_ftoa
  1512  0274  0849               	movf	??_ftoa,w
  1513  0275  07D2               	addwf	ftoa@cp,f
  1514  0276  0844               	movf	ftoa@f,w
  1515  0277  00F0               	movwf	___ftneg@f1
  1516  0278  0845               	movf	ftoa@f+1,w
  1517  0279  00F1               	movwf	___ftneg@f1+1
  1518  027A  0846               	movf	ftoa@f+2,w
  1519  027B  00F2               	movwf	___ftneg@f1+2
  1520  027C  120A  158A  2479  120A  118A  	fcall	___ftneg
  1521  0281  0870               	movf	?___ftneg,w
  1522  0282  1283               	bcf	3,5	;RP0=0, select bank0
  1523  0283  1303               	bcf	3,6	;RP1=0, select bank0
  1524  0284  00C4               	movwf	ftoa@f
  1525  0285  0871               	movf	?___ftneg+1,w
  1526  0286  00C5               	movwf	ftoa@f+1
  1527  0287  0872               	movf	?___ftneg+2,w
  1528  0288  00C6               	movwf	ftoa@f+2
  1529  0289                     l1846:	
  1530  0289  1283               	bcf	3,5	;RP0=0, select bank0
  1531  028A  1303               	bcf	3,6	;RP1=0, select bank0
  1532  028B  0844               	movf	ftoa@f,w
  1533  028C  00AA               	movwf	___fttol@f1
  1534  028D  0845               	movf	ftoa@f+1,w
  1535  028E  00AB               	movwf	___fttol@f1+1
  1536  028F  0846               	movf	ftoa@f+2,w
  1537  0290  00AC               	movwf	___fttol@f1+2
  1538  0291  120A  118A  2071  120A  118A  	fcall	___fttol
  1539  0296  1283               	bcf	3,5	;RP0=0, select bank0
  1540  0297  1303               	bcf	3,6	;RP1=0, select bank0
  1541  0298  082D               	movf	?___fttol+3,w
  1542  0299  00D1               	movwf	ftoa@l+3
  1543  029A  082C               	movf	?___fttol+2,w
  1544  029B  00D0               	movwf	ftoa@l+2
  1545  029C  082B               	movf	?___fttol+1,w
  1546  029D  00CF               	movwf	ftoa@l+1
  1547  029E  082A               	movf	?___fttol,w
  1548  029F  00CE               	movwf	ftoa@l
  1549  02A0  0851               	movf	ftoa@l+3,w
  1550  02A1  00FB               	movwf	___lltoft@c+3
  1551  02A2  0850               	movf	ftoa@l+2,w
  1552  02A3  00FA               	movwf	___lltoft@c+2
  1553  02A4  084F               	movf	ftoa@l+1,w
  1554  02A5  00F9               	movwf	___lltoft@c+1
  1555  02A6  084E               	movf	ftoa@l,w
  1556  02A7  00F8               	movwf	___lltoft@c
  1557  02A8  120A  158A  2569  120A  118A  	fcall	___lltoft
  1558  02AD  0878               	movf	?___lltoft,w
  1559  02AE  1283               	bcf	3,5	;RP0=0, select bank0
  1560  02AF  1303               	bcf	3,6	;RP1=0, select bank0
  1561  02B0  00A7               	movwf	___ftsub@f2
  1562  02B1  0879               	movf	?___lltoft+1,w
  1563  02B2  00A8               	movwf	___ftsub@f2+1
  1564  02B3  087A               	movf	?___lltoft+2,w
  1565  02B4  00A9               	movwf	___ftsub@f2+2
  1566  02B5  0844               	movf	ftoa@f,w
  1567  02B6  00AA               	movwf	___ftsub@f1
  1568  02B7  0845               	movf	ftoa@f+1,w
  1569  02B8  00AB               	movwf	___ftsub@f1+1
  1570  02B9  0846               	movf	ftoa@f+2,w
  1571  02BA  00AC               	movwf	___ftsub@f1+2
  1572  02BB  120A  158A  2503  120A  118A  	fcall	___ftsub
  1573  02C0  1283               	bcf	3,5	;RP0=0, select bank0
  1574  02C1  1303               	bcf	3,6	;RP1=0, select bank0
  1575  02C2  0827               	movf	?___ftsub,w
  1576  02C3  00C4               	movwf	ftoa@f
  1577  02C4  0828               	movf	?___ftsub+1,w
  1578  02C5  00C5               	movwf	ftoa@f+1
  1579  02C6  0829               	movf	?___ftsub+2,w
  1580  02C7  00C6               	movwf	ftoa@f+2
  1581  02C8  0844               	movf	ftoa@f,w
  1582  02C9  00FB               	movwf	___ftmul@f2
  1583  02CA  0845               	movf	ftoa@f+1,w
  1584  02CB  00FC               	movwf	___ftmul@f2+1
  1585  02CC  0846               	movf	ftoa@f+2,w
  1586  02CD  00FD               	movwf	___ftmul@f2+2
  1587  02CE  3024               	movlw	36
  1588  02CF  00F8               	movwf	___ftmul@f1
  1589  02D0  3074               	movlw	116
  1590  02D1  00F9               	movwf	___ftmul@f1+1
  1591  02D2  3049               	movlw	73
  1592  02D3  00FA               	movwf	___ftmul@f1+2
  1593  02D4  120A  118A  230A  120A  118A  	fcall	___ftmul
  1594  02D9  0878               	movf	?___ftmul,w
  1595  02DA  1283               	bcf	3,5	;RP0=0, select bank0
  1596  02DB  1303               	bcf	3,6	;RP1=0, select bank0
  1597  02DC  00AA               	movwf	___fttol@f1
  1598  02DD  0879               	movf	?___ftmul+1,w
  1599  02DE  00AB               	movwf	___fttol@f1+1
  1600  02DF  087A               	movf	?___ftmul+2,w
  1601  02E0  00AC               	movwf	___fttol@f1+2
  1602  02E1  120A  118A  2071  120A  118A  	fcall	___fttol
  1603  02E6  1283               	bcf	3,5	;RP0=0, select bank0
  1604  02E7  1303               	bcf	3,6	;RP1=0, select bank0
  1605  02E8  082D               	movf	?___fttol+3,w
  1606  02E9  00CD               	movwf	ftoa@rem+3
  1607  02EA  082C               	movf	?___fttol+2,w
  1608  02EB  00CC               	movwf	ftoa@rem+2
  1609  02EC  082B               	movf	?___fttol+1,w
  1610  02ED  00CB               	movwf	ftoa@rem+1
  1611  02EE  082A               	movf	?___fttol,w
  1612  02EF  00CA               	movwf	ftoa@rem
  1613  02F0  3029               	movlw	(low ((STR_1-__stringbase)| (0+32768)))& (0+255)
  1614  02F1  00C9               	movwf	??_ftoa
  1615  02F2  0849               	movf	??_ftoa,w
  1616  02F3  00AA               	movwf	sprintf@f
  1617  02F4  0851               	movf	ftoa@l+3,w
  1618  02F5  00AE               	movwf	?_sprintf+4
  1619  02F6  0850               	movf	ftoa@l+2,w
  1620  02F7  00AD               	movwf	?_sprintf+3
  1621  02F8  084F               	movf	ftoa@l+1,w
  1622  02F9  00AC               	movwf	?_sprintf+2
  1623  02FA  084E               	movf	ftoa@l,w
  1624  02FB  00AB               	movwf	?_sprintf+1
  1625  02FC  084D               	movf	ftoa@rem+3,w
  1626  02FD  00B2               	movwf	?_sprintf+8
  1627  02FE  084C               	movf	ftoa@rem+2,w
  1628  02FF  00B1               	movwf	?_sprintf+7
  1629  0300  084B               	movf	ftoa@rem+1,w
  1630  0301  00B0               	movwf	?_sprintf+6
  1631  0302  084A               	movf	ftoa@rem,w
  1632  0303  00AF               	movwf	?_sprintf+5
  1633  0304  0852               	movf	ftoa@cp,w
  1634  0305  120A  118A  25B4   	fcall	_sprintf
  1635  0308  30B4               	movlw	(low (ftoa@buf| 0))& (0+255)
  1636  0309  0008               	return
  1637  030A                     __end_of_ftoa:	
  1638                           
  1639                           	psect	text5
  1640  05B4                     __ptext5:	
  1641 ;; *************** function _sprintf *****************
  1642 ;; Defined at:
  1643 ;;		line 492 in file "/opt/microchip/xc8/v1.45/sources/common/doprnt.c"
  1644 ;; Parameters:    Size  Location     Type
  1645 ;;  sp              1    wreg     PTR unsigned char 
  1646 ;;		 -> ftoa@buf(17), 
  1647 ;;  f               1   10[BANK0 ] PTR const unsigned char 
  1648 ;;		 -> STR_1(11), 
  1649 ;; Auto vars:     Size  Location     Type
  1650 ;;  sp              1   30[BANK0 ] PTR unsigned char 
  1651 ;;		 -> ftoa@buf(17), 
  1652 ;;  val             4   26[BANK0 ] unsigned long 
  1653 ;;  tmpval          4    0        struct .
  1654 ;;  prec            2   33[BANK0 ] int 
  1655 ;;  width           2   31[BANK0 ] int 
  1656 ;;  cp              2    0        PTR const unsigned char 
  1657 ;;  len             2    0        unsigned int 
  1658 ;;  c               1   35[BANK0 ] char 
  1659 ;;  ap              1   25[BANK0 ] PTR void [1]
  1660 ;;		 -> ?_sprintf(2), 
  1661 ;;  flag            1   24[BANK0 ] unsigned char 
  1662 ;; Return value:  Size  Location     Type
  1663 ;;                  2   10[BANK0 ] int 
  1664 ;; Registers used:
  1665 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
  1666 ;; Tracked objects:
  1667 ;;		On entry : 0/0
  1668 ;;		On exit  : 0/0
  1669 ;;		Unchanged: 0/0
  1670 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1671 ;;      Params:         0       9       0       0       0
  1672 ;;      Locals:         0      12       0       0       0
  1673 ;;      Temps:          0       5       0       0       0
  1674 ;;      Totals:         0      26       0       0       0
  1675 ;;Total ram usage:       26 bytes
  1676 ;; Hardware stack levels used:    1
  1677 ;; Hardware stack levels required when called:    1
  1678 ;; This function calls:
  1679 ;;		___lldiv
  1680 ;;		___llmod
  1681 ;;		___wmul
  1682 ;;		_isdigit
  1683 ;; This function is called by:
  1684 ;;		_ftoa
  1685 ;; This function uses a non-reentrant model
  1686 ;;
  1687                           
  1688                           
  1689                           ;psect for function _sprintf
  1690  05B4                     _sprintf:	
  1691                           
  1692                           ;incstack = 0
  1693                           ; Regs used in _sprintf: [wreg-fsr0h+status,2+status,0+pclath+cstack]
  1694                           ;sprintf@sp stored from wreg
  1695  05B4  1283               	bcf	3,5	;RP0=0, select bank0
  1696  05B5  1303               	bcf	3,6	;RP1=0, select bank0
  1697  05B6  00BE               	movwf	sprintf@sp
  1698                           
  1699                           ;doprnt.c: 494: va_list ap;
  1700                           ;doprnt.c: 499: signed char c;
  1701                           ;doprnt.c: 501: int width;
  1702                           ;doprnt.c: 504: int prec;
  1703                           ;doprnt.c: 508: unsigned char flag;
  1704                           ;doprnt.c: 523: union {
  1705                           ;doprnt.c: 524: unsigned long vd;
  1706                           ;doprnt.c: 525: double integ;
  1707                           ;doprnt.c: 526: } tmpval;
  1708                           ;doprnt.c: 528: unsigned long val;
  1709                           ;doprnt.c: 529: unsigned len;
  1710                           ;doprnt.c: 530: const char * cp;
  1711                           ;doprnt.c: 533: *ap = __va_start();
  1712  05B7  302B               	movlw	(low ((?_sprintf| 0+1)))& (0+255)
  1713  05B8  00B3               	movwf	??_sprintf
  1714  05B9  0833               	movf	??_sprintf,w
  1715  05BA  00B9               	movwf	sprintf@ap
  1716  05BB                     l1692:	
  1717                           ;doprnt.c: 536: while(c = *f++) {
  1718                           
  1719  05BB  3001               	movlw	1
  1720  05BC  07AA               	addwf	sprintf@f,f
  1721  05BD  30FF               	movlw	-1
  1722  05BE  072A               	addwf	sprintf@f,w
  1723  05BF  0084               	movwf	4
  1724  05C0  120A  158A  2000  120A  118A  	fcall	stringdir
  1725  05C5  00B3               	movwf	??_sprintf
  1726  05C6  0833               	movf	??_sprintf,w
  1727  05C7  00C3               	movwf	sprintf@c
  1728  05C8  0843               	movf	sprintf@c,w
  1729  05C9  1903               	btfsc	3,2
  1730  05CA  2FE3               	goto	l1694
  1731                           
  1732                           ;doprnt.c: 538: if(c != '%')
  1733  05CB  3025               	movlw	37
  1734  05CC  0643               	xorwf	sprintf@c,w
  1735  05CD  1903               	btfsc	3,2
  1736  05CE  2DDB               	goto	l1602
  1737                           
  1738                           ;doprnt.c: 540: {
  1739                           ;doprnt.c: 541: ((*sp++ = (c)));
  1740  05CF  0843               	movf	sprintf@c,w
  1741  05D0  00B3               	movwf	??_sprintf
  1742  05D1  083E               	movf	sprintf@sp,w
  1743  05D2  0084               	movwf	4
  1744  05D3  0833               	movf	??_sprintf,w
  1745  05D4  1383               	bcf	3,7	;select IRP bank0
  1746  05D5  0080               	movwf	0
  1747  05D6  3001               	movlw	1
  1748  05D7  00B3               	movwf	??_sprintf
  1749  05D8  0833               	movf	??_sprintf,w
  1750  05D9  07BE               	addwf	sprintf@sp,f
  1751                           
  1752                           ;doprnt.c: 542: continue;
  1753  05DA  2DBB               	goto	l1692
  1754  05DB                     l1602:	
  1755                           
  1756                           ;doprnt.c: 543: }
  1757                           ;doprnt.c: 546: width = 0;
  1758  05DB  01BF               	clrf	sprintf@width
  1759  05DC  01C0               	clrf	sprintf@width+1
  1760                           
  1761                           ;doprnt.c: 548: flag = 0;
  1762  05DD  01B8               	clrf	sprintf@flag
  1763                           
  1764                           ;doprnt.c: 597: if(isdigit((unsigned)*f)) {
  1765  05DE  082A               	movf	sprintf@f,w
  1766  05DF  0084               	movwf	4
  1767  05E0  120A  158A  2000  120A  118A  	fcall	stringdir
  1768  05E5  120A  158A  24A8  120A  118A  	fcall	_isdigit
  1769  05EA  1C03               	btfss	3,0
  1770  05EB  2E2A               	goto	l1616
  1771                           
  1772                           ;doprnt.c: 598: width = 0;
  1773  05EC  1283               	bcf	3,5	;RP0=0, select bank0
  1774  05ED  1303               	bcf	3,6	;RP1=0, select bank0
  1775  05EE  01BF               	clrf	sprintf@width
  1776  05EF  01C0               	clrf	sprintf@width+1
  1777  05F0                     l1608:	
  1778                           ;doprnt.c: 599: do {
  1779                           
  1780                           
  1781                           ;doprnt.c: 600: width *= 10;
  1782  05F0  300A               	movlw	10
  1783  05F1  00F0               	movwf	___wmul@multiplier
  1784  05F2  3000               	movlw	0
  1785  05F3  00F1               	movwf	___wmul@multiplier+1
  1786  05F4  1283               	bcf	3,5	;RP0=0, select bank0
  1787  05F5  1303               	bcf	3,6	;RP1=0, select bank0
  1788  05F6  0840               	movf	sprintf@width+1,w
  1789  05F7  00F3               	movwf	___wmul@multiplicand+1
  1790  05F8  083F               	movf	sprintf@width,w
  1791  05F9  00F2               	movwf	___wmul@multiplicand
  1792  05FA  120A  158A  2524  120A  118A  	fcall	___wmul
  1793  05FF  0871               	movf	?___wmul+1,w
  1794  0600  1283               	bcf	3,5	;RP0=0, select bank0
  1795  0601  1303               	bcf	3,6	;RP1=0, select bank0
  1796  0602  00C0               	movwf	sprintf@width+1
  1797  0603  0870               	movf	?___wmul,w
  1798  0604  00BF               	movwf	sprintf@width
  1799                           
  1800                           ;doprnt.c: 601: width += *f++ - '0';
  1801  0605  082A               	movf	sprintf@f,w
  1802  0606  0084               	movwf	4
  1803  0607  120A  158A  2000  120A  118A  	fcall	stringdir
  1804  060C  3ED0               	addlw	208
  1805  060D  00B3               	movwf	??_sprintf
  1806  060E  30FF               	movlw	255
  1807  060F  1803               	skipnc
  1808  0610  3000               	movlw	0
  1809  0611  00B4               	movwf	??_sprintf+1
  1810  0612  0833               	movf	??_sprintf,w
  1811  0613  07BF               	addwf	sprintf@width,f
  1812  0614  1803               	skipnc
  1813  0615  0AC0               	incf	sprintf@width+1,f
  1814  0616  0834               	movf	??_sprintf+1,w
  1815  0617  07C0               	addwf	sprintf@width+1,f
  1816  0618  3001               	movlw	1
  1817  0619  00B3               	movwf	??_sprintf
  1818  061A  0833               	movf	??_sprintf,w
  1819  061B  07AA               	addwf	sprintf@f,f
  1820                           
  1821                           ;doprnt.c: 602: } while(isdigit((unsigned)*f));
  1822  061C  082A               	movf	sprintf@f,w
  1823  061D  0084               	movwf	4
  1824  061E  120A  158A  2000  120A  118A  	fcall	stringdir
  1825  0623  120A  158A  24A8  120A  118A  	fcall	_isdigit
  1826  0628  1803               	btfsc	3,0
  1827  0629  2DF0               	goto	l1608
  1828  062A                     l1616:	
  1829                           
  1830                           ;doprnt.c: 608: }
  1831                           ;doprnt.c: 611: if(*f == '.') {
  1832  062A  1283               	bcf	3,5	;RP0=0, select bank0
  1833  062B  1303               	bcf	3,6	;RP1=0, select bank0
  1834  062C  082A               	movf	sprintf@f,w
  1835  062D  0084               	movwf	4
  1836  062E  120A  158A  2000  120A  118A  	fcall	stringdir
  1837  0633  3A2E               	xorlw	46
  1838  0634  1D03               	skipz
  1839  0635  2E76               	goto	l1628
  1840                           
  1841                           ;doprnt.c: 613: f++;
  1842  0636  3001               	movlw	1
  1843  0637  00B3               	movwf	??_sprintf
  1844  0638  0833               	movf	??_sprintf,w
  1845  0639  07AA               	addwf	sprintf@f,f
  1846                           
  1847                           ;doprnt.c: 620: {
  1848                           ;doprnt.c: 621: prec = 0;
  1849  063A  01C1               	clrf	sprintf@prec
  1850  063B  01C2               	clrf	sprintf@prec+1
  1851  063C                     l1626:	
  1852                           ;doprnt.c: 622: while(isdigit((unsigned)*f))
  1853                           
  1854  063C  082A               	movf	sprintf@f,w
  1855  063D  0084               	movwf	4
  1856  063E  120A  158A  2000  120A  118A  	fcall	stringdir
  1857  0643  120A  158A  24A8  120A  118A  	fcall	_isdigit
  1858  0648  1C03               	btfss	3,0
  1859  0649  2E82               	goto	l1634
  1860                           
  1861                           ;doprnt.c: 623: prec = prec*10 + *f++ - '0';
  1862  064A  1283               	bcf	3,5	;RP0=0, select bank0
  1863  064B  1303               	bcf	3,6	;RP1=0, select bank0
  1864  064C  0842               	movf	sprintf@prec+1,w
  1865  064D  00F1               	movwf	___wmul@multiplier+1
  1866  064E  0841               	movf	sprintf@prec,w
  1867  064F  00F0               	movwf	___wmul@multiplier
  1868  0650  300A               	movlw	10
  1869  0651  00F2               	movwf	___wmul@multiplicand
  1870  0652  3000               	movlw	0
  1871  0653  00F3               	movwf	___wmul@multiplicand+1
  1872  0654  120A  158A  2524  120A  118A  	fcall	___wmul
  1873  0659  1283               	bcf	3,5	;RP0=0, select bank0
  1874  065A  1303               	bcf	3,6	;RP1=0, select bank0
  1875  065B  082A               	movf	sprintf@f,w
  1876  065C  0084               	movwf	4
  1877  065D  120A  158A  2000  120A  118A  	fcall	stringdir
  1878  0662  0770               	addwf	?___wmul,w
  1879  0663  00B3               	movwf	??_sprintf
  1880  0664  3000               	movlw	0
  1881  0665  1803               	skipnc
  1882  0666  3001               	movlw	1
  1883  0667  0771               	addwf	?___wmul+1,w
  1884  0668  00B4               	movwf	??_sprintf+1
  1885  0669  0833               	movf	??_sprintf,w
  1886  066A  3ED0               	addlw	208
  1887  066B  00C1               	movwf	sprintf@prec
  1888  066C  0834               	movf	??_sprintf+1,w
  1889  066D  1803               	skipnc
  1890  066E  3E01               	addlw	1
  1891  066F  3EFF               	addlw	255
  1892  0670  00C2               	movwf	sprintf@prec+1
  1893  0671  3001               	movlw	1
  1894  0672  00B3               	movwf	??_sprintf
  1895  0673  0833               	movf	??_sprintf,w
  1896  0674  07AA               	addwf	sprintf@f,f
  1897  0675  2E3C               	goto	l1626
  1898  0676                     l1628:	
  1899                           ;doprnt.c: 624: }
  1900                           ;doprnt.c: 625: } else {
  1901                           
  1902                           
  1903                           ;doprnt.c: 626: prec = 0;
  1904  0676  1283               	bcf	3,5	;RP0=0, select bank0
  1905  0677  1303               	bcf	3,6	;RP1=0, select bank0
  1906  0678  01C1               	clrf	sprintf@prec
  1907  0679  01C2               	clrf	sprintf@prec+1
  1908                           
  1909                           ;doprnt.c: 635: switch(c = *f++) {
  1910                           
  1911                           ;doprnt.c: 630: }
  1912                           ;doprnt.c: 633: loop:
  1913  067A  2E82               	goto	l1634
  1914  067B                     l163:	
  1915                           ;doprnt.c: 641: case 'l':
  1916                           
  1917                           ;doprnt.c: 638: goto alldone;
  1918                           
  1919                           ;doprnt.c: 637: case 0:
  1920                           
  1921                           
  1922                           ;doprnt.c: 643: flag |= 0x10;
  1923  067B  1638               	bsf	sprintf@flag,4
  1924                           
  1925                           ;doprnt.c: 644: goto loop;
  1926  067C  2E82               	goto	l1634
  1927  067D                     l1630:	
  1928                           ;doprnt.c: 817: case 'u':
  1929                           
  1930                           ;doprnt.c: 813: continue;
  1931                           
  1932                           ;doprnt.c: 802: default:
  1933                           
  1934                           
  1935                           ;doprnt.c: 818: flag |= 0xC0;
  1936  067D  30C0               	movlw	192
  1937  067E  00B3               	movwf	??_sprintf
  1938  067F  0833               	movf	??_sprintf,w
  1939  0680  04B8               	iorwf	sprintf@flag,f
  1940                           
  1941                           ;doprnt.c: 822: }
  1942                           
  1943                           ;doprnt.c: 819: break;
  1944  0681  2E99               	goto	l166
  1945  0682                     l1634:	
  1946  0682  3001               	movlw	1
  1947  0683  1283               	bcf	3,5	;RP0=0, select bank0
  1948  0684  1303               	bcf	3,6	;RP1=0, select bank0
  1949  0685  07AA               	addwf	sprintf@f,f
  1950  0686  30FF               	movlw	-1
  1951  0687  072A               	addwf	sprintf@f,w
  1952  0688  0084               	movwf	4
  1953  0689  120A  158A  2000  120A  118A  	fcall	stringdir
  1954  068E  00C3               	movwf	sprintf@c
  1955                           
  1956                           ; Switch size 1, requested type "space"
  1957                           ; Number of cases is 3, Range of values is 0 to 117
  1958                           ; switch strategies available:
  1959                           ; Name         Instructions Cycles
  1960                           ; simple_byte           10     6 (average)
  1961                           ; jumptable            260     6 (fixed)
  1962                           ;	Chosen strategy is simple_byte
  1963  068F  3A00               	xorlw	0	; case 0
  1964  0690  1903               	skipnz
  1965  0691  2FE3               	goto	l1694
  1966  0692  3A6C               	xorlw	108	; case 108
  1967  0693  1903               	skipnz
  1968  0694  2E7B               	goto	l163
  1969  0695  3A19               	xorlw	25	; case 117
  1970  0696  1903               	skipnz
  1971  0697  2E7D               	goto	l1630
  1972  0698  2DBB               	goto	l1692
  1973  0699                     l166:	
  1974                           
  1975                           ;doprnt.c: 1273: {
  1976                           ;doprnt.c: 1281: if(flag & 0x10)
  1977  0699  1E38               	btfss	sprintf@flag,4
  1978  069A  2EAB               	goto	l1640
  1979                           
  1980                           ;doprnt.c: 1282: val = (*(unsigned long *)__va_arg((*(unsigned long **)ap), (unsigned lo
      +                          ng)0));
  1981  069B  0839               	movf	sprintf@ap,w
  1982  069C  0084               	movwf	4
  1983  069D  1383               	bcf	3,7	;select IRP bank0
  1984  069E  0800               	movf	0,w
  1985  069F  00BA               	movwf	sprintf@val
  1986  06A0  0A84               	incf	4,f
  1987  06A1  0800               	movf	0,w
  1988  06A2  00BB               	movwf	sprintf@val+1
  1989  06A3  0A84               	incf	4,f
  1990  06A4  0800               	movf	0,w
  1991  06A5  00BC               	movwf	sprintf@val+2
  1992  06A6  0A84               	incf	4,f
  1993  06A7  0800               	movf	0,w
  1994  06A8  00BD               	movwf	sprintf@val+3
  1995  06A9  3004               	movlw	4
  1996  06AA  2EBA               	goto	L1
  1997  06AB                     l1640:	
  1998                           
  1999                           ;doprnt.c: 1283: else
  2000                           ;doprnt.c: 1286: val = (*(unsigned *)__va_arg((*(unsigned **)ap), (unsigned)0));
  2001  06AB  0839               	movf	sprintf@ap,w
  2002  06AC  0084               	movwf	4
  2003  06AD  1383               	bcf	3,7	;select IRP bank0
  2004  06AE  0800               	movf	0,w
  2005  06AF  00B3               	movwf	??_sprintf
  2006  06B0  0A84               	incf	4,f
  2007  06B1  0800               	movf	0,w
  2008  06B2  00B4               	movwf	??_sprintf+1
  2009  06B3  0833               	movf	??_sprintf,w
  2010  06B4  00BA               	movwf	sprintf@val
  2011  06B5  0834               	movf	??_sprintf+1,w
  2012  06B6  00BB               	movwf	sprintf@val+1
  2013  06B7  01BC               	clrf	sprintf@val+2
  2014  06B8  01BD               	clrf	sprintf@val+3
  2015  06B9  3002               	movlw	2
  2016  06BA                     L1:	
  2017  06BA  00B3               	movwf	??_sprintf
  2018  06BB  0833               	movf	??_sprintf,w
  2019  06BC  07B9               	addwf	sprintf@ap,f
  2020                           
  2021                           ;doprnt.c: 1287: }
  2022                           ;doprnt.c: 1290: if(prec == 0 && val == 0)
  2023  06BD  0841               	movf	sprintf@prec,w
  2024  06BE  0442               	iorwf	sprintf@prec+1,w
  2025  06BF  1D03               	btfss	3,2
  2026  06C0  2ECD               	goto	l1650
  2027  06C1  083D               	movf	sprintf@val+3,w
  2028  06C2  043C               	iorwf	sprintf@val+2,w
  2029  06C3  043B               	iorwf	sprintf@val+1,w
  2030  06C4  043A               	iorwf	sprintf@val,w
  2031  06C5  1D03               	skipz
  2032  06C6  2ECD               	goto	l1650
  2033                           
  2034                           ;doprnt.c: 1291: prec++;
  2035  06C7  3001               	movlw	1
  2036  06C8  07C1               	addwf	sprintf@prec,f
  2037  06C9  1803               	skipnc
  2038  06CA  0AC2               	incf	sprintf@prec+1,f
  2039  06CB  3000               	movlw	0
  2040  06CC  07C2               	addwf	sprintf@prec+1,f
  2041  06CD                     l1650:	
  2042                           
  2043                           ;doprnt.c: 1305: for(c = 1 ; c != sizeof dpowers/sizeof dpowers[0] ; c++)
  2044  06CD  01C3               	clrf	sprintf@c
  2045  06CE  0AC3               	incf	sprintf@c,f
  2046  06CF  300A               	movlw	10
  2047  06D0  0643               	xorwf	sprintf@c,w
  2048  06D1  1903               	btfsc	3,2
  2049  06D2  2F0F               	goto	l1662
  2050  06D3                     l1656:	
  2051                           
  2052                           ;doprnt.c: 1306: if(val < dpowers[c])
  2053  06D3  0843               	movf	sprintf@c,w
  2054  06D4  00B3               	movwf	??_sprintf
  2055  06D5  3001               	movlw	1
  2056  06D6                     u2035:	
  2057  06D6  1003               	clrc
  2058  06D7  0DB3               	rlf	??_sprintf,f
  2059  06D8  3EFF               	addlw	-1
  2060  06D9  1D03               	skipz
  2061  06DA  2ED6               	goto	u2035
  2062  06DB  1003               	clrc
  2063  06DC  0D33               	rlf	??_sprintf,w
  2064  06DD  3E01               	addlw	low ((_dpowers-__stringbase)| (0+32768))
  2065  06DE  0084               	movwf	4
  2066  06DF  120A  158A  2000  120A  118A  	fcall	stringdir
  2067  06E4  00B4               	movwf	??_sprintf+1
  2068  06E5  120A  158A  2000  120A  118A  	fcall	stringdir
  2069  06EA  00B5               	movwf	??_sprintf+2
  2070  06EB  120A  158A  2000  120A  118A  	fcall	stringdir
  2071  06F0  00B6               	movwf	??_sprintf+3
  2072  06F1  120A  158A  2000  120A  118A  	fcall	stringdir
  2073  06F6  00B7               	movwf	??_sprintf+4
  2074  06F7  0837               	movf	??_sprintf+4,w
  2075  06F8  023D               	subwf	sprintf@val+3,w
  2076  06F9  1D03               	skipz
  2077  06FA  2F05               	goto	u2045
  2078  06FB  0836               	movf	??_sprintf+3,w
  2079  06FC  023C               	subwf	sprintf@val+2,w
  2080  06FD  1D03               	skipz
  2081  06FE  2F05               	goto	u2045
  2082  06FF  0835               	movf	??_sprintf+2,w
  2083  0700  023B               	subwf	sprintf@val+1,w
  2084  0701  1D03               	skipz
  2085  0702  2F05               	goto	u2045
  2086  0703  0834               	movf	??_sprintf+1,w
  2087  0704  023A               	subwf	sprintf@val,w
  2088  0705                     u2045:	
  2089  0705  1C03               	btfss	3,0
  2090  0706  2F0F               	goto	l1662
  2091                           
  2092                           ;doprnt.c: 1307: break;
  2093  0707  3001               	movlw	1
  2094  0708  00B3               	movwf	??_sprintf
  2095  0709  0833               	movf	??_sprintf,w
  2096  070A  07C3               	addwf	sprintf@c,f
  2097  070B  300A               	movlw	10
  2098  070C  0643               	xorwf	sprintf@c,w
  2099  070D  1D03               	btfss	3,2
  2100  070E  2ED3               	goto	l1656
  2101  070F                     l1662:	
  2102                           
  2103                           ;doprnt.c: 1339: if(c < prec)
  2104  070F  0843               	movf	sprintf@c,w
  2105  0710  00B3               	movwf	??_sprintf
  2106  0711  01B4               	clrf	??_sprintf+1
  2107  0712  1BB3               	btfsc	??_sprintf,7
  2108  0713  03B4               	decf	??_sprintf+1,f
  2109  0714  0834               	movf	??_sprintf+1,w
  2110  0715  3A80               	xorlw	128
  2111  0716  00B5               	movwf	??_sprintf+2
  2112  0717  0842               	movf	sprintf@prec+1,w
  2113  0718  3A80               	xorlw	128
  2114  0719  0235               	subwf	??_sprintf+2,w
  2115  071A  1D03               	skipz
  2116  071B  2F1E               	goto	u2065
  2117  071C  0841               	movf	sprintf@prec,w
  2118  071D  0233               	subwf	??_sprintf,w
  2119  071E                     u2065:	
  2120  071E  1803               	skipnc
  2121  071F  2F27               	goto	l1666
  2122                           
  2123                           ;doprnt.c: 1340: c = prec;
  2124  0720  1283               	bcf	3,5	;RP0=0, select bank0
  2125  0721  1303               	bcf	3,6	;RP1=0, select bank0
  2126  0722  0841               	movf	sprintf@prec,w
  2127  0723  00B3               	movwf	??_sprintf
  2128  0724  0833               	movf	??_sprintf,w
  2129  0725  00C3               	movwf	sprintf@c
  2130  0726  2F41               	goto	l1670
  2131  0727                     l1666:	
  2132                           
  2133                           ;doprnt.c: 1341: else if(prec < c)
  2134  0727  1283               	bcf	3,5	;RP0=0, select bank0
  2135  0728  1303               	bcf	3,6	;RP1=0, select bank0
  2136  0729  0843               	movf	sprintf@c,w
  2137  072A  00B3               	movwf	??_sprintf
  2138  072B  01B4               	clrf	??_sprintf+1
  2139  072C  1BB3               	btfsc	??_sprintf,7
  2140  072D  03B4               	decf	??_sprintf+1,f
  2141  072E  0842               	movf	sprintf@prec+1,w
  2142  072F  3A80               	xorlw	128
  2143  0730  00B5               	movwf	??_sprintf+2
  2144  0731  0834               	movf	??_sprintf+1,w
  2145  0732  3A80               	xorlw	128
  2146  0733  0235               	subwf	??_sprintf+2,w
  2147  0734  1D03               	skipz
  2148  0735  2F38               	goto	u2075
  2149  0736  0833               	movf	??_sprintf,w
  2150  0737  0241               	subwf	sprintf@prec,w
  2151  0738                     u2075:	
  2152  0738  1803               	skipnc
  2153  0739  2F41               	goto	l1670
  2154                           
  2155                           ;doprnt.c: 1342: prec = c;
  2156  073A  1283               	bcf	3,5	;RP0=0, select bank0
  2157  073B  1303               	bcf	3,6	;RP1=0, select bank0
  2158  073C  0843               	movf	sprintf@c,w
  2159  073D  00C1               	movwf	sprintf@prec
  2160  073E  01C2               	clrf	sprintf@prec+1
  2161  073F  1BC1               	btfsc	sprintf@prec,7
  2162  0740  03C2               	decf	sprintf@prec+1,f
  2163  0741                     l1670:	
  2164                           
  2165                           ;doprnt.c: 1381: if(width > c)
  2166  0741  1283               	bcf	3,5	;RP0=0, select bank0
  2167  0742  1303               	bcf	3,6	;RP1=0, select bank0
  2168  0743  0843               	movf	sprintf@c,w
  2169  0744  00B3               	movwf	??_sprintf
  2170  0745  01B4               	clrf	??_sprintf+1
  2171  0746  1BB3               	btfsc	??_sprintf,7
  2172  0747  03B4               	decf	??_sprintf+1,f
  2173  0748  0834               	movf	??_sprintf+1,w
  2174  0749  3A80               	xorlw	128
  2175  074A  00B5               	movwf	??_sprintf+2
  2176  074B  0840               	movf	sprintf@width+1,w
  2177  074C  3A80               	xorlw	128
  2178  074D  0235               	subwf	??_sprintf+2,w
  2179  074E  1D03               	skipz
  2180  074F  2F52               	goto	u2085
  2181  0750  083F               	movf	sprintf@width,w
  2182  0751  0233               	subwf	??_sprintf,w
  2183  0752                     u2085:	
  2184  0752  1803               	skipnc
  2185  0753  2F62               	goto	l1674
  2186                           
  2187                           ;doprnt.c: 1382: width -= c;
  2188  0754  1283               	bcf	3,5	;RP0=0, select bank0
  2189  0755  1303               	bcf	3,6	;RP1=0, select bank0
  2190  0756  0843               	movf	sprintf@c,w
  2191  0757  00B3               	movwf	??_sprintf
  2192  0758  01B4               	clrf	??_sprintf+1
  2193  0759  1BB3               	btfsc	??_sprintf,7
  2194  075A  03B4               	decf	??_sprintf+1,f
  2195  075B  0833               	movf	??_sprintf,w
  2196  075C  02BF               	subwf	sprintf@width,f
  2197  075D  0834               	movf	??_sprintf+1,w
  2198  075E  1C03               	skipc
  2199  075F  03C0               	decf	sprintf@width+1,f
  2200  0760  02C0               	subwf	sprintf@width+1,f
  2201  0761  2F66               	goto	l1676
  2202  0762                     l1674:	
  2203                           
  2204                           ;doprnt.c: 1383: else
  2205                           ;doprnt.c: 1384: width = 0;
  2206  0762  1283               	bcf	3,5	;RP0=0, select bank0
  2207  0763  1303               	bcf	3,6	;RP1=0, select bank0
  2208  0764  01BF               	clrf	sprintf@width
  2209  0765  01C0               	clrf	sprintf@width+1
  2210  0766                     l1676:	
  2211                           
  2212                           ;doprnt.c: 1422: {
  2213                           ;doprnt.c: 1424: if(width
  2214                           ;doprnt.c: 1428: )
  2215  0766  083F               	movf	sprintf@width,w
  2216  0767  0440               	iorwf	sprintf@width+1,w
  2217  0768  1903               	btfsc	3,2
  2218  0769  2FD6               	goto	l1690
  2219                           
  2220                           ;doprnt.c: 1430: ((*sp++ = (' ')));
  2221                           
  2222                           ;doprnt.c: 1429: do
  2223  076A  3020               	movlw	32
  2224  076B  00B3               	movwf	??_sprintf
  2225  076C  083E               	movf	sprintf@sp,w
  2226  076D  0084               	movwf	4
  2227  076E  0833               	movf	??_sprintf,w
  2228  076F  1383               	bcf	3,7	;select IRP bank0
  2229  0770  0080               	movwf	0
  2230  0771  3001               	movlw	1
  2231  0772  00B3               	movwf	??_sprintf
  2232  0773  0833               	movf	??_sprintf,w
  2233  0774  07BE               	addwf	sprintf@sp,f
  2234                           
  2235                           ;doprnt.c: 1431: while(--width);
  2236  0775  30FF               	movlw	255
  2237  0776  07BF               	addwf	sprintf@width,f
  2238  0777  1803               	skipnc
  2239  0778  0AC0               	incf	sprintf@width+1,f
  2240  0779  30FF               	movlw	255
  2241  077A  07C0               	addwf	sprintf@width+1,f
  2242  077B  2F66               	goto	l1676
  2243  077C                     l1684:	
  2244                           ;doprnt.c: 1469: }
  2245                           ;doprnt.c: 1474: while(prec--) {
  2246                           
  2247                           
  2248                           ;doprnt.c: 1478: {
  2249                           ;doprnt.c: 1489: c = (val / dpowers[prec]) % 10 + '0';
  2250  077C  3000               	movlw	0
  2251  077D  00A3               	movwf	___llmod@divisor+3
  2252  077E  3000               	movlw	0
  2253  077F  00A2               	movwf	___llmod@divisor+2
  2254  0780  3000               	movlw	0
  2255  0781  00A1               	movwf	___llmod@divisor+1
  2256  0782  300A               	movlw	10
  2257  0783  00A0               	movwf	___llmod@divisor
  2258  0784  0841               	movf	sprintf@prec,w
  2259  0785  00B3               	movwf	??_sprintf
  2260  0786  3001               	movlw	1
  2261  0787                     u2115:	
  2262  0787  1003               	clrc
  2263  0788  0DB3               	rlf	??_sprintf,f
  2264  0789  3EFF               	addlw	-1
  2265  078A  1D03               	skipz
  2266  078B  2F87               	goto	u2115
  2267  078C  1003               	clrc
  2268  078D  0D33               	rlf	??_sprintf,w
  2269  078E  3E01               	addlw	low ((_dpowers-__stringbase)| (0+32768))
  2270  078F  0084               	movwf	4
  2271  0790  120A  158A  2000  120A  118A  	fcall	stringdir
  2272  0795  00F0               	movwf	___lldiv@divisor
  2273  0796  120A  158A  2000  120A  118A  	fcall	stringdir
  2274  079B  00F1               	movwf	___lldiv@divisor+1
  2275  079C  120A  158A  2000  120A  118A  	fcall	stringdir
  2276  07A1  00F2               	movwf	___lldiv@divisor+2
  2277  07A2  120A  158A  2000  120A  118A  	fcall	stringdir
  2278  07A7  00F3               	movwf	___lldiv@divisor+3
  2279  07A8  083D               	movf	sprintf@val+3,w
  2280  07A9  00F7               	movwf	___lldiv@dividend+3
  2281  07AA  083C               	movf	sprintf@val+2,w
  2282  07AB  00F6               	movwf	___lldiv@dividend+2
  2283  07AC  083B               	movf	sprintf@val+1,w
  2284  07AD  00F5               	movwf	___lldiv@dividend+1
  2285  07AE  083A               	movf	sprintf@val,w
  2286  07AF  00F4               	movwf	___lldiv@dividend
  2287  07B0  120A  158A  2736  120A  118A  	fcall	___lldiv
  2288  07B5  0873               	movf	?___lldiv+3,w
  2289  07B6  1283               	bcf	3,5	;RP0=0, select bank0
  2290  07B7  1303               	bcf	3,6	;RP1=0, select bank0
  2291  07B8  00A7               	movwf	___llmod@dividend+3
  2292  07B9  0872               	movf	?___lldiv+2,w
  2293  07BA  00A6               	movwf	___llmod@dividend+2
  2294  07BB  0871               	movf	?___lldiv+1,w
  2295  07BC  00A5               	movwf	___llmod@dividend+1
  2296  07BD  0870               	movf	?___lldiv,w
  2297  07BE  00A4               	movwf	___llmod@dividend
  2298  07BF  120A  158A  268B  120A  118A  	fcall	___llmod
  2299  07C4  1283               	bcf	3,5	;RP0=0, select bank0
  2300  07C5  1303               	bcf	3,6	;RP1=0, select bank0
  2301  07C6  0820               	movf	?___llmod,w
  2302  07C7  3E30               	addlw	48
  2303  07C8  00B4               	movwf	??_sprintf+1
  2304  07C9  0834               	movf	??_sprintf+1,w
  2305  07CA  00C3               	movwf	sprintf@c
  2306                           
  2307                           ;doprnt.c: 1523: }
  2308                           ;doprnt.c: 1524: ((*sp++ = (c)));
  2309  07CB  0843               	movf	sprintf@c,w
  2310  07CC  00B3               	movwf	??_sprintf
  2311  07CD  083E               	movf	sprintf@sp,w
  2312  07CE  0084               	movwf	4
  2313  07CF  0833               	movf	??_sprintf,w
  2314  07D0  1383               	bcf	3,7	;select IRP bank0
  2315  07D1  0080               	movwf	0
  2316  07D2  3001               	movlw	1
  2317  07D3  00B3               	movwf	??_sprintf
  2318  07D4  0833               	movf	??_sprintf,w
  2319  07D5  07BE               	addwf	sprintf@sp,f
  2320  07D6                     l1690:	
  2321  07D6  30FF               	movlw	255
  2322  07D7  07C1               	addwf	sprintf@prec,f
  2323  07D8  1803               	skipnc
  2324  07D9  0AC2               	incf	sprintf@prec+1,f
  2325  07DA  30FF               	movlw	255
  2326  07DB  07C2               	addwf	sprintf@prec+1,f
  2327  07DC  0A41               	incf	sprintf@prec,w
  2328  07DD  1D03               	skipz
  2329  07DE  2F7C               	goto	l1684
  2330  07DF  0A42               	incf	sprintf@prec+1,w
  2331  07E0  1903               	btfsc	3,2
  2332  07E1  2DBB               	goto	l1692
  2333  07E2  2F7C               	goto	l1684
  2334  07E3                     l1694:	
  2335                           ;doprnt.c: 1525: }
  2336                           ;doprnt.c: 1533: }
  2337                           ;doprnt.c: 1535: alldone:
  2338                           
  2339                           
  2340                           ;doprnt.c: 1538: *sp = 0;
  2341  07E3  083E               	movf	sprintf@sp,w
  2342  07E4  0084               	movwf	4
  2343  07E5  1383               	bcf	3,7	;select IRP bank0
  2344  07E6  0180               	clrf	0
  2345  07E7  0008               	return
  2346  07E8                     __end_of_sprintf:	
  2347                           ;doprnt.c: 1540: return 0;
  2348                           ;	Return value of _sprintf is never used
  2349                           
  2350                           
  2351                           	psect	text6
  2352  0CA8                     __ptext6:	
  2353 ;; *************** function _isdigit *****************
  2354 ;; Defined at:
  2355 ;;		line 8 in file "/opt/microchip/xc8/v1.45/sources/common/isdigit.c"
  2356 ;; Parameters:    Size  Location     Type
  2357 ;;  c               1    wreg     unsigned char 
  2358 ;; Auto vars:     Size  Location     Type
  2359 ;;  c               1    1[COMMON] unsigned char 
  2360 ;; Return value:  Size  Location     Type
  2361 ;;		None               void
  2362 ;; Registers used:
  2363 ;;		wreg, status,2, status,0
  2364 ;; Tracked objects:
  2365 ;;		On entry : 0/0
  2366 ;;		On exit  : 0/0
  2367 ;;		Unchanged: 0/0
  2368 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2369 ;;      Params:         0       0       0       0       0
  2370 ;;      Locals:         2       0       0       0       0
  2371 ;;      Temps:          0       0       0       0       0
  2372 ;;      Totals:         2       0       0       0       0
  2373 ;;Total ram usage:        2 bytes
  2374 ;; Hardware stack levels used:    1
  2375 ;; This function calls:
  2376 ;;		Nothing
  2377 ;; This function is called by:
  2378 ;;		_sprintf
  2379 ;; This function uses a non-reentrant model
  2380 ;;
  2381                           
  2382                           
  2383                           ;psect for function _isdigit
  2384  0CA8                     _isdigit:	
  2385                           
  2386                           ;incstack = 0
  2387                           ; Regs used in _isdigit: [wreg+status,2+status,0]
  2388                           ;isdigit@c stored from wreg
  2389  0CA8  00F1               	movwf	isdigit@c
  2390  0CA9  01F0               	clrf	_isdigit$674
  2391  0CAA  303A               	movlw	58
  2392  0CAB  0271               	subwf	isdigit@c,w
  2393  0CAC  1803               	skipnc
  2394  0CAD  2CB4               	goto	l1462
  2395  0CAE  3030               	movlw	48
  2396  0CAF  0271               	subwf	isdigit@c,w
  2397  0CB0  1C03               	skipc
  2398  0CB1  2CB4               	goto	l1462
  2399  0CB2  01F0               	clrf	_isdigit$674
  2400  0CB3  0AF0               	incf	_isdigit$674,f
  2401  0CB4                     l1462:	
  2402  0CB4  0C70               	rrf	_isdigit$674,w
  2403  0CB5  0008               	return
  2404  0CB6                     __end_of_isdigit:	
  2405                           
  2406                           	psect	text7
  2407  0D24                     __ptext7:	
  2408 ;; *************** function ___wmul *****************
  2409 ;; Defined at:
  2410 ;;		line 15 in file "/opt/microchip/xc8/v1.45/sources/common/Umul16.c"
  2411 ;; Parameters:    Size  Location     Type
  2412 ;;  multiplier      2    0[COMMON] unsigned int 
  2413 ;;  multiplicand    2    2[COMMON] unsigned int 
  2414 ;; Auto vars:     Size  Location     Type
  2415 ;;  product         2    4[COMMON] unsigned int 
  2416 ;; Return value:  Size  Location     Type
  2417 ;;                  2    0[COMMON] unsigned int 
  2418 ;; Registers used:
  2419 ;;		wreg, status,2, status,0
  2420 ;; Tracked objects:
  2421 ;;		On entry : 0/0
  2422 ;;		On exit  : 0/0
  2423 ;;		Unchanged: 0/0
  2424 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2425 ;;      Params:         4       0       0       0       0
  2426 ;;      Locals:         2       0       0       0       0
  2427 ;;      Temps:          0       0       0       0       0
  2428 ;;      Totals:         6       0       0       0       0
  2429 ;;Total ram usage:        6 bytes
  2430 ;; Hardware stack levels used:    1
  2431 ;; This function calls:
  2432 ;;		Nothing
  2433 ;; This function is called by:
  2434 ;;		_sendADC
  2435 ;;		_sprintf
  2436 ;; This function uses a non-reentrant model
  2437 ;;
  2438                           
  2439                           
  2440                           ;psect for function ___wmul
  2441  0D24                     ___wmul:	
  2442                           
  2443                           ;incstack = 0
  2444                           ; Regs used in ___wmul: [wreg+status,2+status,0]
  2445  0D24  01F4               	clrf	___wmul@product
  2446  0D25  01F5               	clrf	___wmul@product+1
  2447  0D26                     l1468:	
  2448  0D26  1C70               	btfss	___wmul@multiplier,0
  2449  0D27  2D2E               	goto	l269
  2450  0D28  0872               	movf	___wmul@multiplicand,w
  2451  0D29  07F4               	addwf	___wmul@product,f
  2452  0D2A  1803               	skipnc
  2453  0D2B  0AF5               	incf	___wmul@product+1,f
  2454  0D2C  0873               	movf	___wmul@multiplicand+1,w
  2455  0D2D  07F5               	addwf	___wmul@product+1,f
  2456  0D2E                     l269:	
  2457  0D2E  3001               	movlw	1
  2458  0D2F                     u1545:	
  2459  0D2F  1003               	clrc
  2460  0D30  0DF2               	rlf	___wmul@multiplicand,f
  2461  0D31  0DF3               	rlf	___wmul@multiplicand+1,f
  2462  0D32  3EFF               	addlw	-1
  2463  0D33  1D03               	skipz
  2464  0D34  2D2F               	goto	u1545
  2465  0D35  3001               	movlw	1
  2466  0D36                     u1555:	
  2467  0D36  1003               	clrc
  2468  0D37  0CF1               	rrf	___wmul@multiplier+1,f
  2469  0D38  0CF0               	rrf	___wmul@multiplier,f
  2470  0D39  3EFF               	addlw	-1
  2471  0D3A  1D03               	skipz
  2472  0D3B  2D36               	goto	u1555
  2473  0D3C  0870               	movf	___wmul@multiplier,w
  2474  0D3D  0471               	iorwf	___wmul@multiplier+1,w
  2475  0D3E  1D03               	btfss	3,2
  2476  0D3F  2D26               	goto	l1468
  2477  0D40  0875               	movf	___wmul@product+1,w
  2478  0D41  00F1               	movwf	?___wmul+1
  2479  0D42  0874               	movf	___wmul@product,w
  2480  0D43  00F0               	movwf	?___wmul
  2481  0D44  0008               	return
  2482  0D45                     __end_of___wmul:	
  2483                           
  2484                           	psect	text8
  2485  0E8B                     __ptext8:	
  2486 ;; *************** function ___llmod *****************
  2487 ;; Defined at:
  2488 ;;		line 6 in file "/opt/microchip/xc8/v1.45/sources/common/llmod.c"
  2489 ;; Parameters:    Size  Location     Type
  2490 ;;  divisor         4    0[BANK0 ] unsigned long 
  2491 ;;  dividend        4    4[BANK0 ] unsigned long 
  2492 ;; Auto vars:     Size  Location     Type
  2493 ;;  counter         1    9[BANK0 ] unsigned char 
  2494 ;; Return value:  Size  Location     Type
  2495 ;;                  4    0[BANK0 ] unsigned long 
  2496 ;; Registers used:
  2497 ;;		wreg, status,2, status,0
  2498 ;; Tracked objects:
  2499 ;;		On entry : 0/0
  2500 ;;		On exit  : 0/0
  2501 ;;		Unchanged: 0/0
  2502 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2503 ;;      Params:         0       8       0       0       0
  2504 ;;      Locals:         0       1       0       0       0
  2505 ;;      Temps:          0       1       0       0       0
  2506 ;;      Totals:         0      10       0       0       0
  2507 ;;Total ram usage:       10 bytes
  2508 ;; Hardware stack levels used:    1
  2509 ;; This function calls:
  2510 ;;		Nothing
  2511 ;; This function is called by:
  2512 ;;		_sprintf
  2513 ;; This function uses a non-reentrant model
  2514 ;;
  2515                           
  2516                           
  2517                           ;psect for function ___llmod
  2518  0E8B                     ___llmod:	
  2519                           
  2520                           ;incstack = 0
  2521                           ; Regs used in ___llmod: [wreg+status,2+status,0]
  2522  0E8B  1283               	bcf	3,5	;RP0=0, select bank0
  2523  0E8C  1303               	bcf	3,6	;RP1=0, select bank0
  2524  0E8D  0823               	movf	___llmod@divisor+3,w
  2525  0E8E  0422               	iorwf	___llmod@divisor+2,w
  2526  0E8F  0421               	iorwf	___llmod@divisor+1,w
  2527  0E90  0420               	iorwf	___llmod@divisor,w
  2528  0E91  1903               	skipnz
  2529  0E92  2ED0               	goto	l1590
  2530  0E93  01A9               	clrf	___llmod@counter
  2531  0E94  0AA9               	incf	___llmod@counter,f
  2532  0E95                     l1580:	
  2533  0E95  1BA3               	btfsc	___llmod@divisor+3,7
  2534  0E96  2EA5               	goto	l1582
  2535  0E97  3001               	movlw	1
  2536  0E98  00A8               	movwf	??___llmod
  2537  0E99                     u1895:	
  2538  0E99  1003               	clrc
  2539  0E9A  0DA0               	rlf	___llmod@divisor,f
  2540  0E9B  0DA1               	rlf	___llmod@divisor+1,f
  2541  0E9C  0DA2               	rlf	___llmod@divisor+2,f
  2542  0E9D  0DA3               	rlf	___llmod@divisor+3,f
  2543  0E9E  0BA8               	decfsz	??___llmod,f
  2544  0E9F  2E99               	goto	u1895
  2545  0EA0  3001               	movlw	1
  2546  0EA1  00A8               	movwf	??___llmod
  2547  0EA2  0828               	movf	??___llmod,w
  2548  0EA3  07A9               	addwf	___llmod@counter,f
  2549  0EA4  2E95               	goto	l1580
  2550  0EA5                     l1582:	
  2551  0EA5  0823               	movf	___llmod@divisor+3,w
  2552  0EA6  0227               	subwf	___llmod@dividend+3,w
  2553  0EA7  1D03               	skipz
  2554  0EA8  2EB3               	goto	u1915
  2555  0EA9  0822               	movf	___llmod@divisor+2,w
  2556  0EAA  0226               	subwf	___llmod@dividend+2,w
  2557  0EAB  1D03               	skipz
  2558  0EAC  2EB3               	goto	u1915
  2559  0EAD  0821               	movf	___llmod@divisor+1,w
  2560  0EAE  0225               	subwf	___llmod@dividend+1,w
  2561  0EAF  1D03               	skipz
  2562  0EB0  2EB3               	goto	u1915
  2563  0EB1  0820               	movf	___llmod@divisor,w
  2564  0EB2  0224               	subwf	___llmod@dividend,w
  2565  0EB3                     u1915:	
  2566  0EB3  1C03               	skipc
  2567  0EB4  2EC3               	goto	l1586
  2568  0EB5  0820               	movf	___llmod@divisor,w
  2569  0EB6  02A4               	subwf	___llmod@dividend,f
  2570  0EB7  0821               	movf	___llmod@divisor+1,w
  2571  0EB8  1C03               	skipc
  2572  0EB9  0F21               	incfsz	___llmod@divisor+1,w
  2573  0EBA  02A5               	subwf	___llmod@dividend+1,f
  2574  0EBB  0822               	movf	___llmod@divisor+2,w
  2575  0EBC  1C03               	skipc
  2576  0EBD  0F22               	incfsz	___llmod@divisor+2,w
  2577  0EBE  02A6               	subwf	___llmod@dividend+2,f
  2578  0EBF  0823               	movf	___llmod@divisor+3,w
  2579  0EC0  1C03               	skipc
  2580  0EC1  0F23               	incfsz	___llmod@divisor+3,w
  2581  0EC2  02A7               	subwf	___llmod@dividend+3,f
  2582  0EC3                     l1586:	
  2583  0EC3  3001               	movlw	1
  2584  0EC4                     u1925:	
  2585  0EC4  1003               	clrc
  2586  0EC5  0CA3               	rrf	___llmod@divisor+3,f
  2587  0EC6  0CA2               	rrf	___llmod@divisor+2,f
  2588  0EC7  0CA1               	rrf	___llmod@divisor+1,f
  2589  0EC8  0CA0               	rrf	___llmod@divisor,f
  2590  0EC9  3EFF               	addlw	-1
  2591  0ECA  1D03               	skipz
  2592  0ECB  2EC4               	goto	u1925
  2593  0ECC  3001               	movlw	1
  2594  0ECD  02A9               	subwf	___llmod@counter,f
  2595  0ECE  1D03               	btfss	3,2
  2596  0ECF  2EA5               	goto	l1582
  2597  0ED0                     l1590:	
  2598  0ED0  0827               	movf	___llmod@dividend+3,w
  2599  0ED1  00A3               	movwf	?___llmod+3
  2600  0ED2  0826               	movf	___llmod@dividend+2,w
  2601  0ED3  00A2               	movwf	?___llmod+2
  2602  0ED4  0825               	movf	___llmod@dividend+1,w
  2603  0ED5  00A1               	movwf	?___llmod+1
  2604  0ED6  0824               	movf	___llmod@dividend,w
  2605  0ED7  00A0               	movwf	?___llmod
  2606  0ED8  0008               	return
  2607  0ED9                     __end_of___llmod:	
  2608                           
  2609                           	psect	text9
  2610  0F36                     __ptext9:	
  2611 ;; *************** function ___lldiv *****************
  2612 ;; Defined at:
  2613 ;;		line 6 in file "/opt/microchip/xc8/v1.45/sources/common/lldiv.c"
  2614 ;; Parameters:    Size  Location     Type
  2615 ;;  divisor         4    0[COMMON] unsigned long 
  2616 ;;  dividend        4    4[COMMON] unsigned long 
  2617 ;; Auto vars:     Size  Location     Type
  2618 ;;  quotient        4    9[COMMON] unsigned long 
  2619 ;;  counter         1   13[COMMON] unsigned char 
  2620 ;; Return value:  Size  Location     Type
  2621 ;;                  4    0[COMMON] unsigned long 
  2622 ;; Registers used:
  2623 ;;		wreg, status,2, status,0
  2624 ;; Tracked objects:
  2625 ;;		On entry : 0/0
  2626 ;;		On exit  : 0/0
  2627 ;;		Unchanged: 0/0
  2628 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2629 ;;      Params:         8       0       0       0       0
  2630 ;;      Locals:         5       0       0       0       0
  2631 ;;      Temps:          1       0       0       0       0
  2632 ;;      Totals:        14       0       0       0       0
  2633 ;;Total ram usage:       14 bytes
  2634 ;; Hardware stack levels used:    1
  2635 ;; This function calls:
  2636 ;;		Nothing
  2637 ;; This function is called by:
  2638 ;;		_sprintf
  2639 ;; This function uses a non-reentrant model
  2640 ;;
  2641                           
  2642                           
  2643                           ;psect for function ___lldiv
  2644  0F36                     ___lldiv:	
  2645                           
  2646                           ;incstack = 0
  2647                           ; Regs used in ___lldiv: [wreg+status,2+status,0]
  2648  0F36  3000               	movlw	0
  2649  0F37  00FC               	movwf	___lldiv@quotient+3
  2650  0F38  3000               	movlw	0
  2651  0F39  00FB               	movwf	___lldiv@quotient+2
  2652  0F3A  3000               	movlw	0
  2653  0F3B  00FA               	movwf	___lldiv@quotient+1
  2654  0F3C  3000               	movlw	0
  2655  0F3D  00F9               	movwf	___lldiv@quotient
  2656  0F3E  0873               	movf	___lldiv@divisor+3,w
  2657  0F3F  0472               	iorwf	___lldiv@divisor+2,w
  2658  0F40  0471               	iorwf	___lldiv@divisor+1,w
  2659  0F41  0470               	iorwf	___lldiv@divisor,w
  2660  0F42  1903               	skipnz
  2661  0F43  2F8B               	goto	l1570
  2662  0F44  01FD               	clrf	___lldiv@counter
  2663  0F45  0AFD               	incf	___lldiv@counter,f
  2664  0F46                     l1556:	
  2665  0F46  1BF3               	btfsc	___lldiv@divisor+3,7
  2666  0F47  2F56               	goto	l1558
  2667  0F48  3001               	movlw	1
  2668  0F49  00F8               	movwf	??___lldiv
  2669  0F4A                     u1825:	
  2670  0F4A  1003               	clrc
  2671  0F4B  0DF0               	rlf	___lldiv@divisor,f
  2672  0F4C  0DF1               	rlf	___lldiv@divisor+1,f
  2673  0F4D  0DF2               	rlf	___lldiv@divisor+2,f
  2674  0F4E  0DF3               	rlf	___lldiv@divisor+3,f
  2675  0F4F  0BF8               	decfsz	??___lldiv,f
  2676  0F50  2F4A               	goto	u1825
  2677  0F51  3001               	movlw	1
  2678  0F52  00F8               	movwf	??___lldiv
  2679  0F53  0878               	movf	??___lldiv,w
  2680  0F54  07FD               	addwf	___lldiv@counter,f
  2681  0F55  2F46               	goto	l1556
  2682  0F56                     l1558:	
  2683  0F56  3001               	movlw	1
  2684  0F57  00F8               	movwf	??___lldiv
  2685  0F58                     u1845:	
  2686  0F58  1003               	clrc
  2687  0F59  0DF9               	rlf	___lldiv@quotient,f
  2688  0F5A  0DFA               	rlf	___lldiv@quotient+1,f
  2689  0F5B  0DFB               	rlf	___lldiv@quotient+2,f
  2690  0F5C  0DFC               	rlf	___lldiv@quotient+3,f
  2691  0F5D  0BF8               	decfsz	??___lldiv,f
  2692  0F5E  2F58               	goto	u1845
  2693  0F5F  0873               	movf	___lldiv@divisor+3,w
  2694  0F60  0277               	subwf	___lldiv@dividend+3,w
  2695  0F61  1D03               	skipz
  2696  0F62  2F6D               	goto	u1855
  2697  0F63  0872               	movf	___lldiv@divisor+2,w
  2698  0F64  0276               	subwf	___lldiv@dividend+2,w
  2699  0F65  1D03               	skipz
  2700  0F66  2F6D               	goto	u1855
  2701  0F67  0871               	movf	___lldiv@divisor+1,w
  2702  0F68  0275               	subwf	___lldiv@dividend+1,w
  2703  0F69  1D03               	skipz
  2704  0F6A  2F6D               	goto	u1855
  2705  0F6B  0870               	movf	___lldiv@divisor,w
  2706  0F6C  0274               	subwf	___lldiv@dividend,w
  2707  0F6D                     u1855:	
  2708  0F6D  1C03               	skipc
  2709  0F6E  2F7E               	goto	l1566
  2710  0F6F  0870               	movf	___lldiv@divisor,w
  2711  0F70  02F4               	subwf	___lldiv@dividend,f
  2712  0F71  0871               	movf	___lldiv@divisor+1,w
  2713  0F72  1C03               	skipc
  2714  0F73  0F71               	incfsz	___lldiv@divisor+1,w
  2715  0F74  02F5               	subwf	___lldiv@dividend+1,f
  2716  0F75  0872               	movf	___lldiv@divisor+2,w
  2717  0F76  1C03               	skipc
  2718  0F77  0F72               	incfsz	___lldiv@divisor+2,w
  2719  0F78  02F6               	subwf	___lldiv@dividend+2,f
  2720  0F79  0873               	movf	___lldiv@divisor+3,w
  2721  0F7A  1C03               	skipc
  2722  0F7B  0F73               	incfsz	___lldiv@divisor+3,w
  2723  0F7C  02F7               	subwf	___lldiv@dividend+3,f
  2724  0F7D  1479               	bsf	___lldiv@quotient,0
  2725  0F7E                     l1566:	
  2726  0F7E  3001               	movlw	1
  2727  0F7F                     u1865:	
  2728  0F7F  1003               	clrc
  2729  0F80  0CF3               	rrf	___lldiv@divisor+3,f
  2730  0F81  0CF2               	rrf	___lldiv@divisor+2,f
  2731  0F82  0CF1               	rrf	___lldiv@divisor+1,f
  2732  0F83  0CF0               	rrf	___lldiv@divisor,f
  2733  0F84  3EFF               	addlw	-1
  2734  0F85  1D03               	skipz
  2735  0F86  2F7F               	goto	u1865
  2736  0F87  3001               	movlw	1
  2737  0F88  02FD               	subwf	___lldiv@counter,f
  2738  0F89  1D03               	btfss	3,2
  2739  0F8A  2F56               	goto	l1558
  2740  0F8B                     l1570:	
  2741  0F8B  087C               	movf	___lldiv@quotient+3,w
  2742  0F8C  00F3               	movwf	?___lldiv+3
  2743  0F8D  087B               	movf	___lldiv@quotient+2,w
  2744  0F8E  00F2               	movwf	?___lldiv+2
  2745  0F8F  087A               	movf	___lldiv@quotient+1,w
  2746  0F90  00F1               	movwf	?___lldiv+1
  2747  0F91  0879               	movf	___lldiv@quotient,w
  2748  0F92  00F0               	movwf	?___lldiv
  2749  0F93  0008               	return
  2750  0F94                     __end_of___lldiv:	
  2751                           
  2752                           	psect	text10
  2753  0D69                     __ptext10:	
  2754 ;; *************** function ___lltoft *****************
  2755 ;; Defined at:
  2756 ;;		line 35 in file "/opt/microchip/xc8/v1.45/sources/common/lltoft.c"
  2757 ;; Parameters:    Size  Location     Type
  2758 ;;  c               4    8[COMMON] unsigned long 
  2759 ;; Auto vars:     Size  Location     Type
  2760 ;;  exp             1   13[COMMON] unsigned char 
  2761 ;; Return value:  Size  Location     Type
  2762 ;;                  3    8[COMMON] float 
  2763 ;; Registers used:
  2764 ;;		wreg, status,2, status,0, pclath, cstack
  2765 ;; Tracked objects:
  2766 ;;		On entry : 0/0
  2767 ;;		On exit  : 0/0
  2768 ;;		Unchanged: 0/0
  2769 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2770 ;;      Params:         4       0       0       0       0
  2771 ;;      Locals:         1       0       0       0       0
  2772 ;;      Temps:          1       0       0       0       0
  2773 ;;      Totals:         6       0       0       0       0
  2774 ;;Total ram usage:        6 bytes
  2775 ;; Hardware stack levels used:    1
  2776 ;; Hardware stack levels required when called:    1
  2777 ;; This function calls:
  2778 ;;		___ftpack
  2779 ;; This function is called by:
  2780 ;;		_ftoa
  2781 ;; This function uses a non-reentrant model
  2782 ;;
  2783                           
  2784                           
  2785                           ;psect for function ___lltoft
  2786  0D69                     ___lltoft:	
  2787                           
  2788                           ;incstack = 0
  2789                           ; Regs used in ___lltoft: [wreg+status,2+status,0+pclath+cstack]
  2790  0D69  308E               	movlw	142
  2791  0D6A  00FC               	movwf	??___lltoft
  2792  0D6B  087C               	movf	??___lltoft,w
  2793  0D6C  00FD               	movwf	___lltoft@exp
  2794  0D6D                     l1830:	
  2795  0D6D  30FF               	movlw	255
  2796  0D6E  057B               	andwf	___lltoft@c+3,w
  2797  0D6F  1903               	btfsc	3,2
  2798  0D70  2D7F               	goto	l1832
  2799  0D71  3001               	movlw	1
  2800  0D72                     u2455:	
  2801  0D72  1003               	clrc
  2802  0D73  0CFB               	rrf	___lltoft@c+3,f
  2803  0D74  0CFA               	rrf	___lltoft@c+2,f
  2804  0D75  0CF9               	rrf	___lltoft@c+1,f
  2805  0D76  0CF8               	rrf	___lltoft@c,f
  2806  0D77  3EFF               	addlw	-1
  2807  0D78  1D03               	skipz
  2808  0D79  2D72               	goto	u2455
  2809  0D7A  3001               	movlw	1
  2810  0D7B  00FC               	movwf	??___lltoft
  2811  0D7C  087C               	movf	??___lltoft,w
  2812  0D7D  07FD               	addwf	___lltoft@exp,f
  2813  0D7E  2D6D               	goto	l1830
  2814  0D7F                     l1832:	
  2815  0D7F  0878               	movf	___lltoft@c,w
  2816  0D80  00F0               	movwf	___ftpack@arg
  2817  0D81  0879               	movf	___lltoft@c+1,w
  2818  0D82  00F1               	movwf	___ftpack@arg+1
  2819  0D83  087A               	movf	___lltoft@c+2,w
  2820  0D84  00F2               	movwf	___ftpack@arg+2
  2821  0D85  087D               	movf	___lltoft@exp,w
  2822  0D86  00FC               	movwf	??___lltoft
  2823  0D87  087C               	movf	??___lltoft,w
  2824  0D88  00F3               	movwf	___ftpack@exp
  2825  0D89  01F4               	clrf	___ftpack@sign
  2826  0D8A  120A  118A  2005   	fcall	___ftpack
  2827  0D8D  0870               	movf	?___ftpack,w
  2828  0D8E  00F8               	movwf	?___lltoft
  2829  0D8F  0871               	movf	?___ftpack+1,w
  2830  0D90  00F9               	movwf	?___lltoft+1
  2831  0D91  0872               	movf	?___ftpack+2,w
  2832  0D92  00FA               	movwf	?___lltoft+2
  2833  0D93  0008               	return
  2834  0D94                     __end_of___lltoft:	
  2835                           
  2836                           	psect	text11
  2837  0071                     __ptext11:	
  2838 ;; *************** function ___fttol *****************
  2839 ;; Defined at:
  2840 ;;		line 44 in file "/opt/microchip/xc8/v1.45/sources/common/fttol.c"
  2841 ;; Parameters:    Size  Location     Type
  2842 ;;  f1              3   10[BANK0 ] float 
  2843 ;; Auto vars:     Size  Location     Type
  2844 ;;  lval            4   19[BANK0 ] unsigned long 
  2845 ;;  exp1            1   23[BANK0 ] unsigned char 
  2846 ;;  sign1           1   18[BANK0 ] unsigned char 
  2847 ;; Return value:  Size  Location     Type
  2848 ;;                  4   10[BANK0 ] long 
  2849 ;; Registers used:
  2850 ;;		wreg, status,2, status,0
  2851 ;; Tracked objects:
  2852 ;;		On entry : 0/0
  2853 ;;		On exit  : 0/0
  2854 ;;		Unchanged: 0/0
  2855 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2856 ;;      Params:         0       4       0       0       0
  2857 ;;      Locals:         0       6       0       0       0
  2858 ;;      Temps:          0       4       0       0       0
  2859 ;;      Totals:         0      14       0       0       0
  2860 ;;Total ram usage:       14 bytes
  2861 ;; Hardware stack levels used:    1
  2862 ;; This function calls:
  2863 ;;		Nothing
  2864 ;; This function is called by:
  2865 ;;		_ftoa
  2866 ;; This function uses a non-reentrant model
  2867 ;;
  2868                           
  2869                           
  2870                           ;psect for function ___fttol
  2871  0071                     ___fttol:	
  2872                           
  2873                           ;incstack = 0
  2874                           ; Regs used in ___fttol: [wreg+status,2+status,0]
  2875  0071  1283               	bcf	3,5	;RP0=0, select bank0
  2876  0072  1303               	bcf	3,6	;RP1=0, select bank0
  2877  0073  082A               	movf	___fttol@f1,w
  2878  0074  00AE               	movwf	??___fttol
  2879  0075  082B               	movf	___fttol@f1+1,w
  2880  0076  00AF               	movwf	??___fttol+1
  2881  0077  082C               	movf	___fttol@f1+2,w
  2882  0078  00B0               	movwf	??___fttol+2
  2883  0079  1003               	clrc
  2884  007A  0D2F               	rlf	??___fttol+1,w
  2885  007B  0D30               	rlf	??___fttol+2,w
  2886  007C  00B1               	movwf	??___fttol+3
  2887  007D  0831               	movf	??___fttol+3,w
  2888  007E  00B7               	movwf	___fttol@exp1
  2889  007F  0837               	movf	___fttol@exp1,w
  2890  0080  1D03               	btfss	3,2
  2891  0081  288B               	goto	l1790
  2892  0082  3000               	movlw	0
  2893  0083  00AD               	movwf	?___fttol+3
  2894  0084  3000               	movlw	0
  2895  0085  00AC               	movwf	?___fttol+2
  2896  0086  3000               	movlw	0
  2897  0087  00AB               	movwf	?___fttol+1
  2898  0088  3000               	movlw	0
  2899  0089  00AA               	movwf	?___fttol
  2900  008A  0008               	return
  2901  008B                     l1790:	
  2902  008B  082A               	movf	___fttol@f1,w
  2903  008C  00AE               	movwf	??___fttol
  2904  008D  082B               	movf	___fttol@f1+1,w
  2905  008E  00AF               	movwf	??___fttol+1
  2906  008F  082C               	movf	___fttol@f1+2,w
  2907  0090  00B0               	movwf	??___fttol+2
  2908  0091  3017               	movlw	23
  2909  0092                     u2365:	
  2910  0092  1003               	clrc
  2911  0093  0CB0               	rrf	??___fttol+2,f
  2912  0094  0CAF               	rrf	??___fttol+1,f
  2913  0095  0CAE               	rrf	??___fttol,f
  2914  0096  3EFF               	addlw	-1
  2915  0097  1D03               	skipz
  2916  0098  2892               	goto	u2365
  2917  0099  082E               	movf	??___fttol,w
  2918  009A  00B1               	movwf	??___fttol+3
  2919  009B  0831               	movf	??___fttol+3,w
  2920  009C  00B2               	movwf	___fttol@sign1
  2921  009D  17AB               	bsf	___fttol@f1+1,7
  2922  009E  30FF               	movlw	255
  2923  009F  05AA               	andwf	___fttol@f1,f
  2924  00A0  30FF               	movlw	255
  2925  00A1  05AB               	andwf	___fttol@f1+1,f
  2926  00A2  3000               	movlw	0
  2927  00A3  05AC               	andwf	___fttol@f1+2,f
  2928  00A4  082A               	movf	___fttol@f1,w
  2929  00A5  00B3               	movwf	___fttol@lval
  2930  00A6  082B               	movf	___fttol@f1+1,w
  2931  00A7  00B4               	movwf	___fttol@lval+1
  2932  00A8  082C               	movf	___fttol@f1+2,w
  2933  00A9  00B5               	movwf	___fttol@lval+2
  2934  00AA  01B6               	clrf	___fttol@lval+3
  2935  00AB  308E               	movlw	142
  2936  00AC  02B7               	subwf	___fttol@exp1,f
  2937  00AD  1FB7               	btfss	___fttol@exp1,7
  2938  00AE  28CD               	goto	l1810
  2939  00AF  0837               	movf	___fttol@exp1,w
  2940  00B0  3A80               	xorlw	128
  2941  00B1  3E8F               	addlw	143
  2942  00B2  1803               	skipnc
  2943  00B3  28BD               	goto	l1808
  2944  00B4  3000               	movlw	0
  2945  00B5  00AD               	movwf	?___fttol+3
  2946  00B6  3000               	movlw	0
  2947  00B7  00AC               	movwf	?___fttol+2
  2948  00B8  3000               	movlw	0
  2949  00B9  00AB               	movwf	?___fttol+1
  2950  00BA  3000               	movlw	0
  2951  00BB  00AA               	movwf	?___fttol
  2952  00BC  0008               	return
  2953  00BD                     l1808:	
  2954  00BD  3001               	movlw	1
  2955  00BE                     u2395:	
  2956  00BE  1003               	clrc
  2957  00BF  0CB6               	rrf	___fttol@lval+3,f
  2958  00C0  0CB5               	rrf	___fttol@lval+2,f
  2959  00C1  0CB4               	rrf	___fttol@lval+1,f
  2960  00C2  0CB3               	rrf	___fttol@lval,f
  2961  00C3  3EFF               	addlw	-1
  2962  00C4  1D03               	skipz
  2963  00C5  28BE               	goto	u2395
  2964  00C6  3001               	movlw	1
  2965  00C7  00AE               	movwf	??___fttol
  2966  00C8  082E               	movf	??___fttol,w
  2967  00C9  07B7               	addwf	___fttol@exp1,f
  2968  00CA  1903               	btfsc	3,2
  2969  00CB  28E8               	goto	l1818
  2970  00CC  28BD               	goto	l1808
  2971  00CD                     l1810:	
  2972  00CD  3018               	movlw	24
  2973  00CE  0237               	subwf	___fttol@exp1,w
  2974  00CF  1C03               	skipc
  2975  00D0  28E5               	goto	l529
  2976  00D1  3000               	movlw	0
  2977  00D2  00AD               	movwf	?___fttol+3
  2978  00D3  3000               	movlw	0
  2979  00D4  00AC               	movwf	?___fttol+2
  2980  00D5  3000               	movlw	0
  2981  00D6  00AB               	movwf	?___fttol+1
  2982  00D7  3000               	movlw	0
  2983  00D8  00AA               	movwf	?___fttol
  2984  00D9  0008               	return
  2985  00DA                     l1816:	
  2986  00DA  3001               	movlw	1
  2987  00DB  00AE               	movwf	??___fttol
  2988  00DC                     u2425:	
  2989  00DC  1003               	clrc
  2990  00DD  0DB3               	rlf	___fttol@lval,f
  2991  00DE  0DB4               	rlf	___fttol@lval+1,f
  2992  00DF  0DB5               	rlf	___fttol@lval+2,f
  2993  00E0  0DB6               	rlf	___fttol@lval+3,f
  2994  00E1  0BAE               	decfsz	??___fttol,f
  2995  00E2  28DC               	goto	u2425
  2996  00E3  3001               	movlw	1
  2997  00E4  02B7               	subwf	___fttol@exp1,f
  2998  00E5                     l529:	
  2999  00E5  0837               	movf	___fttol@exp1,w
  3000  00E6  1D03               	btfss	3,2
  3001  00E7  28DA               	goto	l1816
  3002  00E8                     l1818:	
  3003  00E8  0832               	movf	___fttol@sign1,w
  3004  00E9  1903               	btfsc	3,2
  3005  00EA  28F6               	goto	l1822
  3006  00EB  09B3               	comf	___fttol@lval,f
  3007  00EC  09B4               	comf	___fttol@lval+1,f
  3008  00ED  09B5               	comf	___fttol@lval+2,f
  3009  00EE  09B6               	comf	___fttol@lval+3,f
  3010  00EF  0AB3               	incf	___fttol@lval,f
  3011  00F0  1903               	skipnz
  3012  00F1  0AB4               	incf	___fttol@lval+1,f
  3013  00F2  1903               	skipnz
  3014  00F3  0AB5               	incf	___fttol@lval+2,f
  3015  00F4  1903               	skipnz
  3016  00F5  0AB6               	incf	___fttol@lval+3,f
  3017  00F6                     l1822:	
  3018  00F6  0836               	movf	___fttol@lval+3,w
  3019  00F7  00AD               	movwf	?___fttol+3
  3020  00F8  0835               	movf	___fttol@lval+2,w
  3021  00F9  00AC               	movwf	?___fttol+2
  3022  00FA  0834               	movf	___fttol@lval+1,w
  3023  00FB  00AB               	movwf	?___fttol+1
  3024  00FC  0833               	movf	___fttol@lval,w
  3025  00FD  00AA               	movwf	?___fttol
  3026  00FE  0008               	return
  3027  00FF                     __end_of___fttol:	
  3028                           
  3029                           	psect	text12
  3030  0D03                     __ptext12:	
  3031 ;; *************** function ___ftsub *****************
  3032 ;; Defined at:
  3033 ;;		line 18 in file "/opt/microchip/xc8/v1.45/sources/common/ftsub.c"
  3034 ;; Parameters:    Size  Location     Type
  3035 ;;  f2              3    7[BANK0 ] float 
  3036 ;;  f1              3   10[BANK0 ] float 
  3037 ;; Auto vars:     Size  Location     Type
  3038 ;;		None
  3039 ;; Return value:  Size  Location     Type
  3040 ;;                  3    7[BANK0 ] float 
  3041 ;; Registers used:
  3042 ;;		wreg, status,2, status,0, pclath, cstack
  3043 ;; Tracked objects:
  3044 ;;		On entry : 0/0
  3045 ;;		On exit  : 0/0
  3046 ;;		Unchanged: 0/0
  3047 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3048 ;;      Params:         0       6       0       0       0
  3049 ;;      Locals:         0       0       0       0       0
  3050 ;;      Temps:          0       0       0       0       0
  3051 ;;      Totals:         0       6       0       0       0
  3052 ;;Total ram usage:        6 bytes
  3053 ;; Hardware stack levels used:    1
  3054 ;; Hardware stack levels required when called:    2
  3055 ;; This function calls:
  3056 ;;		___ftadd
  3057 ;; This function is called by:
  3058 ;;		_ftoa
  3059 ;; This function uses a non-reentrant model
  3060 ;;
  3061                           
  3062                           
  3063                           ;psect for function ___ftsub
  3064  0D03                     ___ftsub:	
  3065                           
  3066                           ;incstack = 0
  3067                           ; Regs used in ___ftsub: [wreg+status,2+status,0+pclath+cstack]
  3068  0D03  1283               	bcf	3,5	;RP0=0, select bank0
  3069  0D04  1303               	bcf	3,6	;RP1=0, select bank0
  3070  0D05  0829               	movf	___ftsub@f2+2,w
  3071  0D06  0428               	iorwf	___ftsub@f2+1,w
  3072  0D07  0427               	iorwf	___ftsub@f2,w
  3073  0D08  1903               	skipnz
  3074  0D09  2D0C               	goto	l1780
  3075  0D0A  3080               	movlw	128
  3076  0D0B  06A9               	xorwf	___ftsub@f2+2,f
  3077  0D0C                     l1780:	
  3078  0D0C  082A               	movf	___ftsub@f1,w
  3079  0D0D  00F8               	movwf	___ftadd@f1
  3080  0D0E  082B               	movf	___ftsub@f1+1,w
  3081  0D0F  00F9               	movwf	___ftadd@f1+1
  3082  0D10  082C               	movf	___ftsub@f1+2,w
  3083  0D11  00FA               	movwf	___ftadd@f1+2
  3084  0D12  0827               	movf	___ftsub@f2,w
  3085  0D13  00FB               	movwf	___ftadd@f2
  3086  0D14  0828               	movf	___ftsub@f2+1,w
  3087  0D15  00FC               	movwf	___ftadd@f2+1
  3088  0D16  0829               	movf	___ftsub@f2+2,w
  3089  0D17  00FD               	movwf	___ftadd@f2+2
  3090  0D18  120A  118A  24AD   	fcall	___ftadd
  3091  0D1B  0878               	movf	?___ftadd,w
  3092  0D1C  1283               	bcf	3,5	;RP0=0, select bank0
  3093  0D1D  1303               	bcf	3,6	;RP1=0, select bank0
  3094  0D1E  00A7               	movwf	?___ftsub
  3095  0D1F  0879               	movf	?___ftadd+1,w
  3096  0D20  00A8               	movwf	?___ftsub+1
  3097  0D21  087A               	movf	?___ftadd+2,w
  3098  0D22  00A9               	movwf	?___ftsub+2
  3099  0D23  0008               	return
  3100  0D24                     __end_of___ftsub:	
  3101                           
  3102                           	psect	text13
  3103  04AD                     __ptext13:	
  3104 ;; *************** function ___ftadd *****************
  3105 ;; Defined at:
  3106 ;;		line 86 in file "/opt/microchip/xc8/v1.45/sources/common/ftadd.c"
  3107 ;; Parameters:    Size  Location     Type
  3108 ;;  f1              3    8[COMMON] float 
  3109 ;;  f2              3   11[COMMON] float 
  3110 ;; Auto vars:     Size  Location     Type
  3111 ;;  exp1            1    6[BANK0 ] unsigned char 
  3112 ;;  exp2            1    5[BANK0 ] unsigned char 
  3113 ;;  sign            1    4[BANK0 ] unsigned char 
  3114 ;; Return value:  Size  Location     Type
  3115 ;;                  3    8[COMMON] float 
  3116 ;; Registers used:
  3117 ;;		wreg, status,2, status,0, pclath, cstack
  3118 ;; Tracked objects:
  3119 ;;		On entry : 0/0
  3120 ;;		On exit  : 0/0
  3121 ;;		Unchanged: 0/0
  3122 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3123 ;;      Params:         6       0       0       0       0
  3124 ;;      Locals:         0       3       0       0       0
  3125 ;;      Temps:          0       4       0       0       0
  3126 ;;      Totals:         6       7       0       0       0
  3127 ;;Total ram usage:       13 bytes
  3128 ;; Hardware stack levels used:    1
  3129 ;; Hardware stack levels required when called:    1
  3130 ;; This function calls:
  3131 ;;		___ftpack
  3132 ;; This function is called by:
  3133 ;;		___ftsub
  3134 ;; This function uses a non-reentrant model
  3135 ;;
  3136                           
  3137                           
  3138                           ;psect for function ___ftadd
  3139  04AD                     ___ftadd:	
  3140                           
  3141                           ;incstack = 0
  3142                           ; Regs used in ___ftadd: [wreg+status,2+status,0+pclath+cstack]
  3143  04AD  0878               	movf	___ftadd@f1,w
  3144  04AE  1283               	bcf	3,5	;RP0=0, select bank0
  3145  04AF  1303               	bcf	3,6	;RP1=0, select bank0
  3146  04B0  00A0               	movwf	??___ftadd
  3147  04B1  0879               	movf	___ftadd@f1+1,w
  3148  04B2  00A1               	movwf	??___ftadd+1
  3149  04B3  087A               	movf	___ftadd@f1+2,w
  3150  04B4  00A2               	movwf	??___ftadd+2
  3151  04B5  1003               	clrc
  3152  04B6  0D21               	rlf	??___ftadd+1,w
  3153  04B7  0D22               	rlf	??___ftadd+2,w
  3154  04B8  00A3               	movwf	??___ftadd+3
  3155  04B9  0823               	movf	??___ftadd+3,w
  3156  04BA  00A6               	movwf	___ftadd@exp1
  3157  04BB  087B               	movf	___ftadd@f2,w
  3158  04BC  00A0               	movwf	??___ftadd
  3159  04BD  087C               	movf	___ftadd@f2+1,w
  3160  04BE  00A1               	movwf	??___ftadd+1
  3161  04BF  087D               	movf	___ftadd@f2+2,w
  3162  04C0  00A2               	movwf	??___ftadd+2
  3163  04C1  1003               	clrc
  3164  04C2  0D21               	rlf	??___ftadd+1,w
  3165  04C3  0D22               	rlf	??___ftadd+2,w
  3166  04C4  00A3               	movwf	??___ftadd+3
  3167  04C5  0823               	movf	??___ftadd+3,w
  3168  04C6  00A5               	movwf	___ftadd@exp2
  3169  04C7  0826               	movf	___ftadd@exp1,w
  3170  04C8  1903               	btfsc	3,2
  3171  04C9  2CD6               	goto	l1486
  3172  04CA  0825               	movf	___ftadd@exp2,w
  3173  04CB  0226               	subwf	___ftadd@exp1,w
  3174  04CC  1803               	skipnc
  3175  04CD  2CDD               	goto	l1490
  3176  04CE  0326               	decf	___ftadd@exp1,w
  3177  04CF  3AFF               	xorlw	255
  3178  04D0  0725               	addwf	___ftadd@exp2,w
  3179  04D1  00A0               	movwf	??___ftadd
  3180  04D2  3019               	movlw	25
  3181  04D3  0220               	subwf	??___ftadd,w
  3182  04D4  1C03               	skipc
  3183  04D5  2CDD               	goto	l1490
  3184  04D6                     l1486:	
  3185  04D6  087B               	movf	___ftadd@f2,w
  3186  04D7  00F8               	movwf	?___ftadd
  3187  04D8  087C               	movf	___ftadd@f2+1,w
  3188  04D9  00F9               	movwf	?___ftadd+1
  3189  04DA  087D               	movf	___ftadd@f2+2,w
  3190  04DB  00FA               	movwf	?___ftadd+2
  3191  04DC  0008               	return
  3192  04DD                     l1490:	
  3193  04DD  0825               	movf	___ftadd@exp2,w
  3194  04DE  1903               	btfsc	3,2
  3195  04DF  0008               	return
  3196  04E0  0826               	movf	___ftadd@exp1,w
  3197  04E1  0225               	subwf	___ftadd@exp2,w
  3198  04E2  1803               	skipnc
  3199  04E3  2CEC               	goto	l1496
  3200  04E4  0325               	decf	___ftadd@exp2,w
  3201  04E5  3AFF               	xorlw	255
  3202  04E6  0726               	addwf	___ftadd@exp1,w
  3203  04E7  00A0               	movwf	??___ftadd
  3204  04E8  3019               	movlw	25
  3205  04E9  0220               	subwf	??___ftadd,w
  3206  04EA  1803               	btfsc	3,0
  3207  04EB  0008               	return
  3208  04EC                     l1496:	
  3209  04EC  3006               	movlw	6
  3210  04ED  00A0               	movwf	??___ftadd
  3211  04EE  0820               	movf	??___ftadd,w
  3212  04EF  00A4               	movwf	___ftadd@sign
  3213  04F0  1BFA               	btfsc	___ftadd@f1+2,7
  3214  04F1  17A4               	bsf	___ftadd@sign,7
  3215  04F2  1BFD               	btfsc	___ftadd@f2+2,7
  3216  04F3  1724               	bsf	___ftadd@sign,6
  3217  04F4  17F9               	bsf	___ftadd@f1+1,7
  3218  04F5  30FF               	movlw	255
  3219  04F6  05F8               	andwf	___ftadd@f1,f
  3220  04F7  30FF               	movlw	255
  3221  04F8  05F9               	andwf	___ftadd@f1+1,f
  3222  04F9  3000               	movlw	0
  3223  04FA  05FA               	andwf	___ftadd@f1+2,f
  3224  04FB  17FC               	bsf	___ftadd@f2+1,7
  3225  04FC  30FF               	movlw	255
  3226  04FD  05FB               	andwf	___ftadd@f2,f
  3227  04FE  30FF               	movlw	255
  3228  04FF  05FC               	andwf	___ftadd@f2+1,f
  3229  0500  3000               	movlw	0
  3230  0501  05FD               	andwf	___ftadd@f2+2,f
  3231  0502  0825               	movf	___ftadd@exp2,w
  3232  0503  0226               	subwf	___ftadd@exp1,w
  3233  0504  1803               	skipnc
  3234  0505  2D2C               	goto	l1518
  3235  0506                     l1508:	
  3236  0506  3001               	movlw	1
  3237  0507                     u1665:	
  3238  0507  1003               	clrc
  3239  0508  0DFB               	rlf	___ftadd@f2,f
  3240  0509  0DFC               	rlf	___ftadd@f2+1,f
  3241  050A  0DFD               	rlf	___ftadd@f2+2,f
  3242  050B  3EFF               	addlw	-1
  3243  050C  1D03               	skipz
  3244  050D  2D07               	goto	u1665
  3245  050E  3001               	movlw	1
  3246  050F  02A5               	subwf	___ftadd@exp2,f
  3247  0510  0825               	movf	___ftadd@exp2,w
  3248  0511  0626               	xorwf	___ftadd@exp1,w
  3249  0512  1903               	skipnz
  3250  0513  2D27               	goto	l1516
  3251  0514  3001               	movlw	1
  3252  0515  02A4               	subwf	___ftadd@sign,f
  3253  0516  0824               	movf	___ftadd@sign,w
  3254  0517  3907               	andlw	7
  3255  0518  1903               	btfsc	3,2
  3256  0519  2D27               	goto	l1516
  3257  051A  2D06               	goto	l1508
  3258  051B                     l1514:	
  3259  051B  3001               	movlw	1
  3260  051C                     u1695:	
  3261  051C  1003               	clrc
  3262  051D  0CFA               	rrf	___ftadd@f1+2,f
  3263  051E  0CF9               	rrf	___ftadd@f1+1,f
  3264  051F  0CF8               	rrf	___ftadd@f1,f
  3265  0520  3EFF               	addlw	-1
  3266  0521  1D03               	skipz
  3267  0522  2D1C               	goto	u1695
  3268  0523  3001               	movlw	1
  3269  0524  00A0               	movwf	??___ftadd
  3270  0525  0820               	movf	??___ftadd,w
  3271  0526  07A6               	addwf	___ftadd@exp1,f
  3272  0527                     l1516:	
  3273  0527  0826               	movf	___ftadd@exp1,w
  3274  0528  0625               	xorwf	___ftadd@exp2,w
  3275  0529  1903               	btfsc	3,2
  3276  052A  2D55               	goto	l461
  3277  052B  2D1B               	goto	l1514
  3278  052C                     l1518:	
  3279  052C  0826               	movf	___ftadd@exp1,w
  3280  052D  0225               	subwf	___ftadd@exp2,w
  3281  052E  1803               	skipnc
  3282  052F  2D55               	goto	l461
  3283  0530                     l1520:	
  3284  0530  3001               	movlw	1
  3285  0531                     u1725:	
  3286  0531  1003               	clrc
  3287  0532  0DF8               	rlf	___ftadd@f1,f
  3288  0533  0DF9               	rlf	___ftadd@f1+1,f
  3289  0534  0DFA               	rlf	___ftadd@f1+2,f
  3290  0535  3EFF               	addlw	-1
  3291  0536  1D03               	skipz
  3292  0537  2D31               	goto	u1725
  3293  0538  3001               	movlw	1
  3294  0539  02A6               	subwf	___ftadd@exp1,f
  3295  053A  0825               	movf	___ftadd@exp2,w
  3296  053B  0626               	xorwf	___ftadd@exp1,w
  3297  053C  1903               	skipnz
  3298  053D  2D51               	goto	l1528
  3299  053E  3001               	movlw	1
  3300  053F  02A4               	subwf	___ftadd@sign,f
  3301  0540  0824               	movf	___ftadd@sign,w
  3302  0541  3907               	andlw	7
  3303  0542  1903               	btfsc	3,2
  3304  0543  2D51               	goto	l1528
  3305  0544  2D30               	goto	l1520
  3306  0545                     l1526:	
  3307  0545  3001               	movlw	1
  3308  0546                     u1755:	
  3309  0546  1003               	clrc
  3310  0547  0CFD               	rrf	___ftadd@f2+2,f
  3311  0548  0CFC               	rrf	___ftadd@f2+1,f
  3312  0549  0CFB               	rrf	___ftadd@f2,f
  3313  054A  3EFF               	addlw	-1
  3314  054B  1D03               	skipz
  3315  054C  2D46               	goto	u1755
  3316  054D  3001               	movlw	1
  3317  054E  00A0               	movwf	??___ftadd
  3318  054F  0820               	movf	??___ftadd,w
  3319  0550  07A5               	addwf	___ftadd@exp2,f
  3320  0551                     l1528:	
  3321  0551  0826               	movf	___ftadd@exp1,w
  3322  0552  0625               	xorwf	___ftadd@exp2,w
  3323  0553  1D03               	skipz
  3324  0554  2D45               	goto	l1526
  3325  0555                     l461:	
  3326  0555  1FA4               	btfss	___ftadd@sign,7
  3327  0556  2D67               	goto	l1532
  3328  0557  30FF               	movlw	255
  3329  0558  06F8               	xorwf	___ftadd@f1,f
  3330  0559  30FF               	movlw	255
  3331  055A  06F9               	xorwf	___ftadd@f1+1,f
  3332  055B  30FF               	movlw	255
  3333  055C  06FA               	xorwf	___ftadd@f1+2,f
  3334  055D  3001               	movlw	1
  3335  055E  07F8               	addwf	___ftadd@f1,f
  3336  055F  3000               	movlw	0
  3337  0560  1803               	skipnc
  3338  0561  3001               	movlw	1
  3339  0562  07F9               	addwf	___ftadd@f1+1,f
  3340  0563  3000               	movlw	0
  3341  0564  1803               	skipnc
  3342  0565  3001               	movlw	1
  3343  0566  07FA               	addwf	___ftadd@f1+2,f
  3344  0567                     l1532:	
  3345  0567  1F24               	btfss	___ftadd@sign,6
  3346  0568  2D79               	goto	l1536
  3347  0569  30FF               	movlw	255
  3348  056A  06FB               	xorwf	___ftadd@f2,f
  3349  056B  30FF               	movlw	255
  3350  056C  06FC               	xorwf	___ftadd@f2+1,f
  3351  056D  30FF               	movlw	255
  3352  056E  06FD               	xorwf	___ftadd@f2+2,f
  3353  056F  3001               	movlw	1
  3354  0570  07FB               	addwf	___ftadd@f2,f
  3355  0571  3000               	movlw	0
  3356  0572  1803               	skipnc
  3357  0573  3001               	movlw	1
  3358  0574  07FC               	addwf	___ftadd@f2+1,f
  3359  0575  3000               	movlw	0
  3360  0576  1803               	skipnc
  3361  0577  3001               	movlw	1
  3362  0578  07FD               	addwf	___ftadd@f2+2,f
  3363  0579                     l1536:	
  3364  0579  01A4               	clrf	___ftadd@sign
  3365  057A  0878               	movf	___ftadd@f1,w
  3366  057B  07FB               	addwf	___ftadd@f2,f
  3367  057C  0879               	movf	___ftadd@f1+1,w
  3368  057D  1103               	clrz
  3369  057E  1803               	skipnc
  3370  057F  0A79               	incf	___ftadd@f1+1,w
  3371  0580  1D03               	btfss	3,2
  3372  0581  07FC               	addwf	___ftadd@f2+1,f
  3373  0582  087A               	movf	___ftadd@f1+2,w
  3374  0583  1103               	clrz
  3375  0584  1803               	skipnc
  3376  0585  0A7A               	incf	___ftadd@f1+2,w
  3377  0586  1D03               	btfss	3,2
  3378  0587  07FD               	addwf	___ftadd@f2+2,f
  3379  0588  1FFD               	btfss	___ftadd@f2+2,7
  3380  0589  2D9C               	goto	l1546
  3381  058A  30FF               	movlw	255
  3382  058B  06FB               	xorwf	___ftadd@f2,f
  3383  058C  30FF               	movlw	255
  3384  058D  06FC               	xorwf	___ftadd@f2+1,f
  3385  058E  30FF               	movlw	255
  3386  058F  06FD               	xorwf	___ftadd@f2+2,f
  3387  0590  3001               	movlw	1
  3388  0591  07FB               	addwf	___ftadd@f2,f
  3389  0592  3000               	movlw	0
  3390  0593  1803               	skipnc
  3391  0594  3001               	movlw	1
  3392  0595  07FC               	addwf	___ftadd@f2+1,f
  3393  0596  3000               	movlw	0
  3394  0597  1803               	skipnc
  3395  0598  3001               	movlw	1
  3396  0599  07FD               	addwf	___ftadd@f2+2,f
  3397  059A  01A4               	clrf	___ftadd@sign
  3398  059B  0AA4               	incf	___ftadd@sign,f
  3399  059C                     l1546:	
  3400  059C  087B               	movf	___ftadd@f2,w
  3401  059D  00F0               	movwf	___ftpack@arg
  3402  059E  087C               	movf	___ftadd@f2+1,w
  3403  059F  00F1               	movwf	___ftpack@arg+1
  3404  05A0  087D               	movf	___ftadd@f2+2,w
  3405  05A1  00F2               	movwf	___ftpack@arg+2
  3406  05A2  0826               	movf	___ftadd@exp1,w
  3407  05A3  00A0               	movwf	??___ftadd
  3408  05A4  0820               	movf	??___ftadd,w
  3409  05A5  00F3               	movwf	___ftpack@exp
  3410  05A6  0824               	movf	___ftadd@sign,w
  3411  05A7  00A1               	movwf	??___ftadd+1
  3412  05A8  0821               	movf	??___ftadd+1,w
  3413  05A9  00F4               	movwf	___ftpack@sign
  3414  05AA  120A  118A  2005   	fcall	___ftpack
  3415  05AD  0870               	movf	?___ftpack,w
  3416  05AE  00F8               	movwf	?___ftadd
  3417  05AF  0871               	movf	?___ftpack+1,w
  3418  05B0  00F9               	movwf	?___ftadd+1
  3419  05B1  0872               	movf	?___ftpack+2,w
  3420  05B2  00FA               	movwf	?___ftadd+2
  3421  05B3  0008               	return
  3422  05B4                     __end_of___ftadd:	
  3423                           
  3424                           	psect	text14
  3425  0C79                     __ptext14:	
  3426 ;; *************** function ___ftneg *****************
  3427 ;; Defined at:
  3428 ;;		line 15 in file "/opt/microchip/xc8/v1.45/sources/common/ftneg.c"
  3429 ;; Parameters:    Size  Location     Type
  3430 ;;  f1              3    0[COMMON] float 
  3431 ;; Auto vars:     Size  Location     Type
  3432 ;;		None
  3433 ;; Return value:  Size  Location     Type
  3434 ;;                  3    0[COMMON] float 
  3435 ;; Registers used:
  3436 ;;		wreg
  3437 ;; Tracked objects:
  3438 ;;		On entry : 0/0
  3439 ;;		On exit  : 0/0
  3440 ;;		Unchanged: 0/0
  3441 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3442 ;;      Params:         3       0       0       0       0
  3443 ;;      Locals:         0       0       0       0       0
  3444 ;;      Temps:          0       0       0       0       0
  3445 ;;      Totals:         3       0       0       0       0
  3446 ;;Total ram usage:        3 bytes
  3447 ;; Hardware stack levels used:    1
  3448 ;; This function calls:
  3449 ;;		Nothing
  3450 ;; This function is called by:
  3451 ;;		_ftoa
  3452 ;; This function uses a non-reentrant model
  3453 ;;
  3454                           
  3455                           
  3456                           ;psect for function ___ftneg
  3457  0C79                     ___ftneg:	
  3458                           
  3459                           ;incstack = 0
  3460                           ; Regs used in ___ftneg: [wreg]
  3461  0C79  0872               	movf	___ftneg@f1+2,w
  3462  0C7A  0471               	iorwf	___ftneg@f1+1,w
  3463  0C7B  0470               	iorwf	___ftneg@f1,w
  3464  0C7C  1903               	skipnz
  3465  0C7D  0008               	return
  3466  0C7E  3080               	movlw	128
  3467  0C7F  06F2               	xorwf	___ftneg@f1+2,f
  3468  0C80  0008               	return
  3469  0C81                     __end_of___ftneg:	
  3470                           
  3471                           	psect	text15
  3472  030A                     __ptext15:	
  3473 ;; *************** function ___ftmul *****************
  3474 ;; Defined at:
  3475 ;;		line 62 in file "/opt/microchip/xc8/v1.45/sources/common/ftmul.c"
  3476 ;; Parameters:    Size  Location     Type
  3477 ;;  f1              3    8[COMMON] float 
  3478 ;;  f2              3   11[COMMON] float 
  3479 ;; Auto vars:     Size  Location     Type
  3480 ;;  f3_as_produc    3    5[BANK0 ] unsigned um
  3481 ;;  sign            1    9[BANK0 ] unsigned char 
  3482 ;;  cntr            1    8[BANK0 ] unsigned char 
  3483 ;;  exp             1    4[BANK0 ] unsigned char 
  3484 ;; Return value:  Size  Location     Type
  3485 ;;                  3    8[COMMON] float 
  3486 ;; Registers used:
  3487 ;;		wreg, status,2, status,0, pclath, cstack
  3488 ;; Tracked objects:
  3489 ;;		On entry : 0/0
  3490 ;;		On exit  : 0/0
  3491 ;;		Unchanged: 0/0
  3492 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3493 ;;      Params:         6       0       0       0       0
  3494 ;;      Locals:         0       6       0       0       0
  3495 ;;      Temps:          0       4       0       0       0
  3496 ;;      Totals:         6      10       0       0       0
  3497 ;;Total ram usage:       16 bytes
  3498 ;; Hardware stack levels used:    1
  3499 ;; Hardware stack levels required when called:    1
  3500 ;; This function calls:
  3501 ;;		___ftpack
  3502 ;; This function is called by:
  3503 ;;		_printADC
  3504 ;;		_ftoa
  3505 ;; This function uses a non-reentrant model
  3506 ;;
  3507                           
  3508                           
  3509                           ;psect for function ___ftmul
  3510  030A                     ___ftmul:	
  3511                           
  3512                           ;incstack = 0
  3513                           ; Regs used in ___ftmul: [wreg+status,2+status,0+pclath+cstack]
  3514  030A  0878               	movf	___ftmul@f1,w
  3515  030B  1283               	bcf	3,5	;RP0=0, select bank0
  3516  030C  1303               	bcf	3,6	;RP1=0, select bank0
  3517  030D  00A0               	movwf	??___ftmul
  3518  030E  0879               	movf	___ftmul@f1+1,w
  3519  030F  00A1               	movwf	??___ftmul+1
  3520  0310  087A               	movf	___ftmul@f1+2,w
  3521  0311  00A2               	movwf	??___ftmul+2
  3522  0312  1003               	clrc
  3523  0313  0D21               	rlf	??___ftmul+1,w
  3524  0314  0D22               	rlf	??___ftmul+2,w
  3525  0315  00A3               	movwf	??___ftmul+3
  3526  0316  0823               	movf	??___ftmul+3,w
  3527  0317  00A4               	movwf	___ftmul@exp
  3528  0318  0824               	movf	___ftmul@exp,w
  3529  0319  1D03               	btfss	3,2
  3530  031A  2B22               	goto	l1724
  3531  031B  3000               	movlw	0
  3532  031C  00F8               	movwf	?___ftmul
  3533  031D  3000               	movlw	0
  3534  031E  00F9               	movwf	?___ftmul+1
  3535  031F  3000               	movlw	0
  3536  0320  00FA               	movwf	?___ftmul+2
  3537  0321  0008               	return
  3538  0322                     l1724:	
  3539  0322  087B               	movf	___ftmul@f2,w
  3540  0323  00A0               	movwf	??___ftmul
  3541  0324  087C               	movf	___ftmul@f2+1,w
  3542  0325  00A1               	movwf	??___ftmul+1
  3543  0326  087D               	movf	___ftmul@f2+2,w
  3544  0327  00A2               	movwf	??___ftmul+2
  3545  0328  1003               	clrc
  3546  0329  0D21               	rlf	??___ftmul+1,w
  3547  032A  0D22               	rlf	??___ftmul+2,w
  3548  032B  00A3               	movwf	??___ftmul+3
  3549  032C  0823               	movf	??___ftmul+3,w
  3550  032D  00A9               	movwf	___ftmul@sign
  3551  032E  0829               	movf	___ftmul@sign,w
  3552  032F  1D03               	btfss	3,2
  3553  0330  2B38               	goto	l1730
  3554  0331  3000               	movlw	0
  3555  0332  00F8               	movwf	?___ftmul
  3556  0333  3000               	movlw	0
  3557  0334  00F9               	movwf	?___ftmul+1
  3558  0335  3000               	movlw	0
  3559  0336  00FA               	movwf	?___ftmul+2
  3560  0337  0008               	return
  3561  0338                     l1730:	
  3562  0338  0829               	movf	___ftmul@sign,w
  3563  0339  3E7B               	addlw	123
  3564  033A  00A0               	movwf	??___ftmul
  3565  033B  0820               	movf	??___ftmul,w
  3566  033C  07A4               	addwf	___ftmul@exp,f
  3567  033D  0878               	movf	___ftmul@f1,w
  3568  033E  00A0               	movwf	??___ftmul
  3569  033F  0879               	movf	___ftmul@f1+1,w
  3570  0340  00A1               	movwf	??___ftmul+1
  3571  0341  087A               	movf	___ftmul@f1+2,w
  3572  0342  00A2               	movwf	??___ftmul+2
  3573  0343  3010               	movlw	16
  3574  0344                     u2215:	
  3575  0344  1003               	clrc
  3576  0345  0CA2               	rrf	??___ftmul+2,f
  3577  0346  0CA1               	rrf	??___ftmul+1,f
  3578  0347  0CA0               	rrf	??___ftmul,f
  3579  0348  3EFF               	addlw	-1
  3580  0349  1D03               	skipz
  3581  034A  2B44               	goto	u2215
  3582  034B  0820               	movf	??___ftmul,w
  3583  034C  00A3               	movwf	??___ftmul+3
  3584  034D  0823               	movf	??___ftmul+3,w
  3585  034E  00A9               	movwf	___ftmul@sign
  3586  034F  087B               	movf	___ftmul@f2,w
  3587  0350  00A0               	movwf	??___ftmul
  3588  0351  087C               	movf	___ftmul@f2+1,w
  3589  0352  00A1               	movwf	??___ftmul+1
  3590  0353  087D               	movf	___ftmul@f2+2,w
  3591  0354  00A2               	movwf	??___ftmul+2
  3592  0355  3010               	movlw	16
  3593  0356                     u2225:	
  3594  0356  1003               	clrc
  3595  0357  0CA2               	rrf	??___ftmul+2,f
  3596  0358  0CA1               	rrf	??___ftmul+1,f
  3597  0359  0CA0               	rrf	??___ftmul,f
  3598  035A  3EFF               	addlw	-1
  3599  035B  1D03               	skipz
  3600  035C  2B56               	goto	u2225
  3601  035D  0820               	movf	??___ftmul,w
  3602  035E  00A3               	movwf	??___ftmul+3
  3603  035F  0823               	movf	??___ftmul+3,w
  3604  0360  06A9               	xorwf	___ftmul@sign,f
  3605  0361  3080               	movlw	128
  3606  0362  00A0               	movwf	??___ftmul
  3607  0363  0820               	movf	??___ftmul,w
  3608  0364  05A9               	andwf	___ftmul@sign,f
  3609  0365  17F9               	bsf	___ftmul@f1+1,7
  3610  0366  17FC               	bsf	___ftmul@f2+1,7
  3611  0367  30FF               	movlw	255
  3612  0368  05FB               	andwf	___ftmul@f2,f
  3613  0369  30FF               	movlw	255
  3614  036A  05FC               	andwf	___ftmul@f2+1,f
  3615  036B  3000               	movlw	0
  3616  036C  05FD               	andwf	___ftmul@f2+2,f
  3617  036D  3000               	movlw	0
  3618  036E  00A5               	movwf	___ftmul@f3_as_product
  3619  036F  3000               	movlw	0
  3620  0370  00A6               	movwf	___ftmul@f3_as_product+1
  3621  0371  3000               	movlw	0
  3622  0372  00A7               	movwf	___ftmul@f3_as_product+2
  3623  0373  3007               	movlw	7
  3624  0374  00A0               	movwf	??___ftmul
  3625  0375  0820               	movf	??___ftmul,w
  3626  0376  00A8               	movwf	___ftmul@cntr
  3627  0377                     l1742:	
  3628  0377  1C78               	btfss	___ftmul@f1,0
  3629  0378  2B87               	goto	l1746
  3630  0379  087B               	movf	___ftmul@f2,w
  3631  037A  07A5               	addwf	___ftmul@f3_as_product,f
  3632  037B  087C               	movf	___ftmul@f2+1,w
  3633  037C  1103               	clrz
  3634  037D  1803               	skipnc
  3635  037E  0A7C               	incf	___ftmul@f2+1,w
  3636  037F  1D03               	btfss	3,2
  3637  0380  07A6               	addwf	___ftmul@f3_as_product+1,f
  3638  0381  087D               	movf	___ftmul@f2+2,w
  3639  0382  1103               	clrz
  3640  0383  1803               	skipnc
  3641  0384  0A7D               	incf	___ftmul@f2+2,w
  3642  0385  1D03               	btfss	3,2
  3643  0386  07A7               	addwf	___ftmul@f3_as_product+2,f
  3644  0387                     l1746:	
  3645  0387  3001               	movlw	1
  3646  0388                     u2255:	
  3647  0388  1003               	clrc
  3648  0389  0CFA               	rrf	___ftmul@f1+2,f
  3649  038A  0CF9               	rrf	___ftmul@f1+1,f
  3650  038B  0CF8               	rrf	___ftmul@f1,f
  3651  038C  3EFF               	addlw	-1
  3652  038D  1D03               	skipz
  3653  038E  2B88               	goto	u2255
  3654  038F  3001               	movlw	1
  3655  0390                     u2265:	
  3656  0390  1003               	clrc
  3657  0391  0DFB               	rlf	___ftmul@f2,f
  3658  0392  0DFC               	rlf	___ftmul@f2+1,f
  3659  0393  0DFD               	rlf	___ftmul@f2+2,f
  3660  0394  3EFF               	addlw	-1
  3661  0395  1D03               	skipz
  3662  0396  2B90               	goto	u2265
  3663  0397  3001               	movlw	1
  3664  0398  02A8               	subwf	___ftmul@cntr,f
  3665  0399  1D03               	btfss	3,2
  3666  039A  2B77               	goto	l1742
  3667  039B  3009               	movlw	9
  3668  039C  00A0               	movwf	??___ftmul
  3669  039D  0820               	movf	??___ftmul,w
  3670  039E  00A8               	movwf	___ftmul@cntr
  3671  039F                     l1754:	
  3672  039F  1C78               	btfss	___ftmul@f1,0
  3673  03A0  2BAF               	goto	l1758
  3674  03A1  087B               	movf	___ftmul@f2,w
  3675  03A2  07A5               	addwf	___ftmul@f3_as_product,f
  3676  03A3  087C               	movf	___ftmul@f2+1,w
  3677  03A4  1103               	clrz
  3678  03A5  1803               	skipnc
  3679  03A6  0A7C               	incf	___ftmul@f2+1,w
  3680  03A7  1D03               	btfss	3,2
  3681  03A8  07A6               	addwf	___ftmul@f3_as_product+1,f
  3682  03A9  087D               	movf	___ftmul@f2+2,w
  3683  03AA  1103               	clrz
  3684  03AB  1803               	skipnc
  3685  03AC  0A7D               	incf	___ftmul@f2+2,w
  3686  03AD  1D03               	btfss	3,2
  3687  03AE  07A7               	addwf	___ftmul@f3_as_product+2,f
  3688  03AF                     l1758:	
  3689  03AF  3001               	movlw	1
  3690  03B0                     u2305:	
  3691  03B0  1003               	clrc
  3692  03B1  0CFA               	rrf	___ftmul@f1+2,f
  3693  03B2  0CF9               	rrf	___ftmul@f1+1,f
  3694  03B3  0CF8               	rrf	___ftmul@f1,f
  3695  03B4  3EFF               	addlw	-1
  3696  03B5  1D03               	skipz
  3697  03B6  2BB0               	goto	u2305
  3698  03B7  3001               	movlw	1
  3699  03B8                     u2315:	
  3700  03B8  1003               	clrc
  3701  03B9  0CA7               	rrf	___ftmul@f3_as_product+2,f
  3702  03BA  0CA6               	rrf	___ftmul@f3_as_product+1,f
  3703  03BB  0CA5               	rrf	___ftmul@f3_as_product,f
  3704  03BC  3EFF               	addlw	-1
  3705  03BD  1D03               	skipz
  3706  03BE  2BB8               	goto	u2315
  3707  03BF  3001               	movlw	1
  3708  03C0  02A8               	subwf	___ftmul@cntr,f
  3709  03C1  1D03               	btfss	3,2
  3710  03C2  2B9F               	goto	l1754
  3711  03C3  0825               	movf	___ftmul@f3_as_product,w
  3712  03C4  00F0               	movwf	___ftpack@arg
  3713  03C5  0826               	movf	___ftmul@f3_as_product+1,w
  3714  03C6  00F1               	movwf	___ftpack@arg+1
  3715  03C7  0827               	movf	___ftmul@f3_as_product+2,w
  3716  03C8  00F2               	movwf	___ftpack@arg+2
  3717  03C9  0824               	movf	___ftmul@exp,w
  3718  03CA  00A0               	movwf	??___ftmul
  3719  03CB  0820               	movf	??___ftmul,w
  3720  03CC  00F3               	movwf	___ftpack@exp
  3721  03CD  0829               	movf	___ftmul@sign,w
  3722  03CE  00A1               	movwf	??___ftmul+1
  3723  03CF  0821               	movf	??___ftmul+1,w
  3724  03D0  00F4               	movwf	___ftpack@sign
  3725  03D1  120A  118A  2005   	fcall	___ftpack
  3726  03D4  0870               	movf	?___ftpack,w
  3727  03D5  00F8               	movwf	?___ftmul
  3728  03D6  0871               	movf	?___ftpack+1,w
  3729  03D7  00F9               	movwf	?___ftmul+1
  3730  03D8  0872               	movf	?___ftpack+2,w
  3731  03D9  00FA               	movwf	?___ftmul+2
  3732  03DA  0008               	return
  3733  03DB                     __end_of___ftmul:	
  3734                           
  3735                           	psect	text16
  3736  0ED9                     __ptext16:	
  3737 ;; *************** function ___ftge *****************
  3738 ;; Defined at:
  3739 ;;		line 4 in file "/opt/microchip/xc8/v1.45/sources/common/ftge.c"
  3740 ;; Parameters:    Size  Location     Type
  3741 ;;  ff1             3    0[COMMON] float 
  3742 ;;  ff2             3    3[COMMON] float 
  3743 ;; Auto vars:     Size  Location     Type
  3744 ;;		None
  3745 ;; Return value:  Size  Location     Type
  3746 ;;		None               void
  3747 ;; Registers used:
  3748 ;;		wreg, status,2, status,0
  3749 ;; Tracked objects:
  3750 ;;		On entry : 0/0
  3751 ;;		On exit  : 0/0
  3752 ;;		Unchanged: 0/0
  3753 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3754 ;;      Params:         6       0       0       0       0
  3755 ;;      Locals:         0       0       0       0       0
  3756 ;;      Temps:          6       0       0       0       0
  3757 ;;      Totals:        12       0       0       0       0
  3758 ;;Total ram usage:       12 bytes
  3759 ;; Hardware stack levels used:    1
  3760 ;; This function calls:
  3761 ;;		Nothing
  3762 ;; This function is called by:
  3763 ;;		_printADC
  3764 ;;		_ftoa
  3765 ;; This function uses a non-reentrant model
  3766 ;;
  3767                           
  3768                           
  3769                           ;psect for function ___ftge
  3770  0ED9                     ___ftge:	
  3771                           
  3772                           ;incstack = 0
  3773                           ; Regs used in ___ftge: [wreg+status,2+status,0]
  3774  0ED9  1FF2               	btfss	___ftge@ff1+2,7
  3775  0EDA  2F00               	goto	l1702
  3776  0EDB  3000               	movlw	0
  3777  0EDC  00F6               	movwf	??___ftge
  3778  0EDD  3000               	movlw	0
  3779  0EDE  00F7               	movwf	??___ftge+1
  3780  0EDF  3080               	movlw	128
  3781  0EE0  00F8               	movwf	??___ftge+2
  3782  0EE1  0970               	comf	___ftge@ff1,w
  3783  0EE2  00F9               	movwf	??___ftge+3
  3784  0EE3  0971               	comf	___ftge@ff1+1,w
  3785  0EE4  00FA               	movwf	??___ftge+4
  3786  0EE5  0972               	comf	___ftge@ff1+2,w
  3787  0EE6  00FB               	movwf	??___ftge+5
  3788  0EE7  0AF9               	incf	??___ftge+3,f
  3789  0EE8  1903               	skipnz
  3790  0EE9  0AFA               	incf	??___ftge+4,f
  3791  0EEA  1903               	skipnz
  3792  0EEB  0AFB               	incf	??___ftge+5,f
  3793  0EEC  0879               	movf	??___ftge+3,w
  3794  0EED  07F6               	addwf	??___ftge,f
  3795  0EEE  087A               	movf	??___ftge+4,w
  3796  0EEF  1803               	skipnc
  3797  0EF0  0F7A               	incfsz	??___ftge+4,w
  3798  0EF1  2EF3               	goto	u2151
  3799  0EF2  2EF4               	goto	u2152
  3800  0EF3                     u2151:	
  3801  0EF3  07F7               	addwf	??___ftge+1,f
  3802  0EF4                     u2152:	
  3803  0EF4  087B               	movf	??___ftge+5,w
  3804  0EF5  1803               	skipnc
  3805  0EF6  0F7B               	incfsz	??___ftge+5,w
  3806  0EF7  2EF9               	goto	u2153
  3807  0EF8  2EFA               	goto	u2154
  3808  0EF9                     u2153:	
  3809  0EF9  07F8               	addwf	??___ftge+2,f
  3810  0EFA                     u2154:	
  3811  0EFA  0876               	movf	??___ftge,w
  3812  0EFB  00F0               	movwf	___ftge@ff1
  3813  0EFC  0877               	movf	??___ftge+1,w
  3814  0EFD  00F1               	movwf	___ftge@ff1+1
  3815  0EFE  0878               	movf	??___ftge+2,w
  3816  0EFF  00F2               	movwf	___ftge@ff1+2
  3817  0F00                     l1702:	
  3818  0F00  1FF5               	btfss	___ftge@ff2+2,7
  3819  0F01  2F27               	goto	l1706
  3820  0F02  3000               	movlw	0
  3821  0F03  00F6               	movwf	??___ftge
  3822  0F04  3000               	movlw	0
  3823  0F05  00F7               	movwf	??___ftge+1
  3824  0F06  3080               	movlw	128
  3825  0F07  00F8               	movwf	??___ftge+2
  3826  0F08  0973               	comf	___ftge@ff2,w
  3827  0F09  00F9               	movwf	??___ftge+3
  3828  0F0A  0974               	comf	___ftge@ff2+1,w
  3829  0F0B  00FA               	movwf	??___ftge+4
  3830  0F0C  0975               	comf	___ftge@ff2+2,w
  3831  0F0D  00FB               	movwf	??___ftge+5
  3832  0F0E  0AF9               	incf	??___ftge+3,f
  3833  0F0F  1903               	skipnz
  3834  0F10  0AFA               	incf	??___ftge+4,f
  3835  0F11  1903               	skipnz
  3836  0F12  0AFB               	incf	??___ftge+5,f
  3837  0F13  0879               	movf	??___ftge+3,w
  3838  0F14  07F6               	addwf	??___ftge,f
  3839  0F15  087A               	movf	??___ftge+4,w
  3840  0F16  1803               	skipnc
  3841  0F17  0F7A               	incfsz	??___ftge+4,w
  3842  0F18  2F1A               	goto	u2171
  3843  0F19  2F1B               	goto	u2172
  3844  0F1A                     u2171:	
  3845  0F1A  07F7               	addwf	??___ftge+1,f
  3846  0F1B                     u2172:	
  3847  0F1B  087B               	movf	??___ftge+5,w
  3848  0F1C  1803               	skipnc
  3849  0F1D  0F7B               	incfsz	??___ftge+5,w
  3850  0F1E  2F20               	goto	u2173
  3851  0F1F  2F21               	goto	u2174
  3852  0F20                     u2173:	
  3853  0F20  07F8               	addwf	??___ftge+2,f
  3854  0F21                     u2174:	
  3855  0F21  0876               	movf	??___ftge,w
  3856  0F22  00F3               	movwf	___ftge@ff2
  3857  0F23  0877               	movf	??___ftge+1,w
  3858  0F24  00F4               	movwf	___ftge@ff2+1
  3859  0F25  0878               	movf	??___ftge+2,w
  3860  0F26  00F5               	movwf	___ftge@ff2+2
  3861  0F27                     l1706:	
  3862  0F27  3080               	movlw	128
  3863  0F28  06F2               	xorwf	___ftge@ff1+2,f
  3864  0F29  3080               	movlw	128
  3865  0F2A  06F5               	xorwf	___ftge@ff2+2,f
  3866  0F2B  0875               	movf	___ftge@ff2+2,w
  3867  0F2C  0272               	subwf	___ftge@ff1+2,w
  3868  0F2D  1D03               	skipz
  3869  0F2E  0008               	return
  3870  0F2F  0874               	movf	___ftge@ff2+1,w
  3871  0F30  0271               	subwf	___ftge@ff1+1,w
  3872  0F31  1D03               	skipz
  3873  0F32  0008               	return
  3874  0F33  0873               	movf	___ftge@ff2,w
  3875  0F34  0270               	subwf	___ftge@ff1,w
  3876  0F35  0008               	return
  3877  0F36                     __end_of___ftge:	
  3878                           
  3879                           	psect	text17
  3880  0198                     __ptext17:	
  3881 ;; *************** function ___ftdiv *****************
  3882 ;; Defined at:
  3883 ;;		line 56 in file "/opt/microchip/xc8/v1.45/sources/common/ftdiv.c"
  3884 ;; Parameters:    Size  Location     Type
  3885 ;;  f2              3   10[BANK0 ] float 
  3886 ;;  f1              3   13[BANK0 ] float 
  3887 ;; Auto vars:     Size  Location     Type
  3888 ;;  f3              3   21[BANK0 ] float 
  3889 ;;  sign            1   25[BANK0 ] unsigned char 
  3890 ;;  exp             1   24[BANK0 ] unsigned char 
  3891 ;;  cntr            1   20[BANK0 ] unsigned char 
  3892 ;; Return value:  Size  Location     Type
  3893 ;;                  3   10[BANK0 ] float 
  3894 ;; Registers used:
  3895 ;;		wreg, status,2, status,0, pclath, cstack
  3896 ;; Tracked objects:
  3897 ;;		On entry : 0/0
  3898 ;;		On exit  : 0/0
  3899 ;;		Unchanged: 0/0
  3900 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3901 ;;      Params:         0       6       0       0       0
  3902 ;;      Locals:         0       6       0       0       0
  3903 ;;      Temps:          0       4       0       0       0
  3904 ;;      Totals:         0      16       0       0       0
  3905 ;;Total ram usage:       16 bytes
  3906 ;; Hardware stack levels used:    1
  3907 ;; Hardware stack levels required when called:    1
  3908 ;; This function calls:
  3909 ;;		___ftpack
  3910 ;; This function is called by:
  3911 ;;		_sendADC
  3912 ;;		_printADC
  3913 ;; This function uses a non-reentrant model
  3914 ;;
  3915                           
  3916                           
  3917                           ;psect for function ___ftdiv
  3918  0198                     ___ftdiv:	
  3919                           
  3920                           ;incstack = 0
  3921                           ; Regs used in ___ftdiv: [wreg+status,2+status,0+pclath+cstack]
  3922  0198  1283               	bcf	3,5	;RP0=0, select bank0
  3923  0199  1303               	bcf	3,6	;RP1=0, select bank0
  3924  019A  082D               	movf	___ftdiv@f1,w
  3925  019B  00B0               	movwf	??___ftdiv
  3926  019C  082E               	movf	___ftdiv@f1+1,w
  3927  019D  00B1               	movwf	??___ftdiv+1
  3928  019E  082F               	movf	___ftdiv@f1+2,w
  3929  019F  00B2               	movwf	??___ftdiv+2
  3930  01A0  1003               	clrc
  3931  01A1  0D31               	rlf	??___ftdiv+1,w
  3932  01A2  0D32               	rlf	??___ftdiv+2,w
  3933  01A3  00B3               	movwf	??___ftdiv+3
  3934  01A4  0833               	movf	??___ftdiv+3,w
  3935  01A5  00B8               	movwf	___ftdiv@exp
  3936  01A6  0838               	movf	___ftdiv@exp,w
  3937  01A7  1D03               	btfss	3,2
  3938  01A8  29B0               	goto	l1958
  3939  01A9  3000               	movlw	0
  3940  01AA  00AA               	movwf	?___ftdiv
  3941  01AB  3000               	movlw	0
  3942  01AC  00AB               	movwf	?___ftdiv+1
  3943  01AD  3000               	movlw	0
  3944  01AE  00AC               	movwf	?___ftdiv+2
  3945  01AF  0008               	return
  3946  01B0                     l1958:	
  3947  01B0  082A               	movf	___ftdiv@f2,w
  3948  01B1  00B0               	movwf	??___ftdiv
  3949  01B2  082B               	movf	___ftdiv@f2+1,w
  3950  01B3  00B1               	movwf	??___ftdiv+1
  3951  01B4  082C               	movf	___ftdiv@f2+2,w
  3952  01B5  00B2               	movwf	??___ftdiv+2
  3953  01B6  1003               	clrc
  3954  01B7  0D31               	rlf	??___ftdiv+1,w
  3955  01B8  0D32               	rlf	??___ftdiv+2,w
  3956  01B9  00B3               	movwf	??___ftdiv+3
  3957  01BA  0833               	movf	??___ftdiv+3,w
  3958  01BB  00B9               	movwf	___ftdiv@sign
  3959  01BC  0839               	movf	___ftdiv@sign,w
  3960  01BD  1D03               	btfss	3,2
  3961  01BE  29C6               	goto	l1964
  3962  01BF  3000               	movlw	0
  3963  01C0  00AA               	movwf	?___ftdiv
  3964  01C1  3000               	movlw	0
  3965  01C2  00AB               	movwf	?___ftdiv+1
  3966  01C3  3000               	movlw	0
  3967  01C4  00AC               	movwf	?___ftdiv+2
  3968  01C5  0008               	return
  3969  01C6                     l1964:	
  3970  01C6  3000               	movlw	0
  3971  01C7  00B5               	movwf	___ftdiv@f3
  3972  01C8  3000               	movlw	0
  3973  01C9  00B6               	movwf	___ftdiv@f3+1
  3974  01CA  3000               	movlw	0
  3975  01CB  00B7               	movwf	___ftdiv@f3+2
  3976  01CC  3089               	movlw	137
  3977  01CD  0739               	addwf	___ftdiv@sign,w
  3978  01CE  00B0               	movwf	??___ftdiv
  3979  01CF  0830               	movf	??___ftdiv,w
  3980  01D0  02B8               	subwf	___ftdiv@exp,f
  3981  01D1  082D               	movf	___ftdiv@f1,w
  3982  01D2  00B0               	movwf	??___ftdiv
  3983  01D3  082E               	movf	___ftdiv@f1+1,w
  3984  01D4  00B1               	movwf	??___ftdiv+1
  3985  01D5  082F               	movf	___ftdiv@f1+2,w
  3986  01D6  00B2               	movwf	??___ftdiv+2
  3987  01D7  3010               	movlw	16
  3988  01D8                     u2545:	
  3989  01D8  1003               	clrc
  3990  01D9  0CB2               	rrf	??___ftdiv+2,f
  3991  01DA  0CB1               	rrf	??___ftdiv+1,f
  3992  01DB  0CB0               	rrf	??___ftdiv,f
  3993  01DC  3EFF               	addlw	-1
  3994  01DD  1D03               	skipz
  3995  01DE  29D8               	goto	u2545
  3996  01DF  0830               	movf	??___ftdiv,w
  3997  01E0  00B3               	movwf	??___ftdiv+3
  3998  01E1  0833               	movf	??___ftdiv+3,w
  3999  01E2  00B9               	movwf	___ftdiv@sign
  4000  01E3  082A               	movf	___ftdiv@f2,w
  4001  01E4  00B0               	movwf	??___ftdiv
  4002  01E5  082B               	movf	___ftdiv@f2+1,w
  4003  01E6  00B1               	movwf	??___ftdiv+1
  4004  01E7  082C               	movf	___ftdiv@f2+2,w
  4005  01E8  00B2               	movwf	??___ftdiv+2
  4006  01E9  3010               	movlw	16
  4007  01EA                     u2555:	
  4008  01EA  1003               	clrc
  4009  01EB  0CB2               	rrf	??___ftdiv+2,f
  4010  01EC  0CB1               	rrf	??___ftdiv+1,f
  4011  01ED  0CB0               	rrf	??___ftdiv,f
  4012  01EE  3EFF               	addlw	-1
  4013  01EF  1D03               	skipz
  4014  01F0  29EA               	goto	u2555
  4015  01F1  0830               	movf	??___ftdiv,w
  4016  01F2  00B3               	movwf	??___ftdiv+3
  4017  01F3  0833               	movf	??___ftdiv+3,w
  4018  01F4  06B9               	xorwf	___ftdiv@sign,f
  4019  01F5  3080               	movlw	128
  4020  01F6  00B0               	movwf	??___ftdiv
  4021  01F7  0830               	movf	??___ftdiv,w
  4022  01F8  05B9               	andwf	___ftdiv@sign,f
  4023  01F9  17AE               	bsf	___ftdiv@f1+1,7
  4024  01FA  30FF               	movlw	255
  4025  01FB  05AD               	andwf	___ftdiv@f1,f
  4026  01FC  30FF               	movlw	255
  4027  01FD  05AE               	andwf	___ftdiv@f1+1,f
  4028  01FE  3000               	movlw	0
  4029  01FF  05AF               	andwf	___ftdiv@f1+2,f
  4030  0200  17AB               	bsf	___ftdiv@f2+1,7
  4031  0201  30FF               	movlw	255
  4032  0202  05AA               	andwf	___ftdiv@f2,f
  4033  0203  30FF               	movlw	255
  4034  0204  05AB               	andwf	___ftdiv@f2+1,f
  4035  0205  3000               	movlw	0
  4036  0206  05AC               	andwf	___ftdiv@f2+2,f
  4037  0207  3018               	movlw	24
  4038  0208  00B0               	movwf	??___ftdiv
  4039  0209  0830               	movf	??___ftdiv,w
  4040  020A  00B4               	movwf	___ftdiv@cntr
  4041  020B                     l1978:	
  4042  020B  3001               	movlw	1
  4043  020C                     u2565:	
  4044  020C  1003               	clrc
  4045  020D  0DB5               	rlf	___ftdiv@f3,f
  4046  020E  0DB6               	rlf	___ftdiv@f3+1,f
  4047  020F  0DB7               	rlf	___ftdiv@f3+2,f
  4048  0210  3EFF               	addlw	-1
  4049  0211  1D03               	skipz
  4050  0212  2A0C               	goto	u2565
  4051  0213  082C               	movf	___ftdiv@f2+2,w
  4052  0214  022F               	subwf	___ftdiv@f1+2,w
  4053  0215  1D03               	skipz
  4054  0216  2A1D               	goto	u2575
  4055  0217  082B               	movf	___ftdiv@f2+1,w
  4056  0218  022E               	subwf	___ftdiv@f1+1,w
  4057  0219  1D03               	skipz
  4058  021A  2A1D               	goto	u2575
  4059  021B  082A               	movf	___ftdiv@f2,w
  4060  021C  022D               	subwf	___ftdiv@f1,w
  4061  021D                     u2575:	
  4062  021D  1C03               	skipc
  4063  021E  2A2A               	goto	l1986
  4064  021F  082A               	movf	___ftdiv@f2,w
  4065  0220  02AD               	subwf	___ftdiv@f1,f
  4066  0221  082B               	movf	___ftdiv@f2+1,w
  4067  0222  1C03               	skipc
  4068  0223  0F2B               	incfsz	___ftdiv@f2+1,w
  4069  0224  02AE               	subwf	___ftdiv@f1+1,f
  4070  0225  082C               	movf	___ftdiv@f2+2,w
  4071  0226  1C03               	skipc
  4072  0227  0A2C               	incf	___ftdiv@f2+2,w
  4073  0228  02AF               	subwf	___ftdiv@f1+2,f
  4074  0229  1435               	bsf	___ftdiv@f3,0
  4075  022A                     l1986:	
  4076  022A  3001               	movlw	1
  4077  022B                     u2585:	
  4078  022B  1003               	clrc
  4079  022C  0DAD               	rlf	___ftdiv@f1,f
  4080  022D  0DAE               	rlf	___ftdiv@f1+1,f
  4081  022E  0DAF               	rlf	___ftdiv@f1+2,f
  4082  022F  3EFF               	addlw	-1
  4083  0230  1D03               	skipz
  4084  0231  2A2B               	goto	u2585
  4085  0232  3001               	movlw	1
  4086  0233  02B4               	subwf	___ftdiv@cntr,f
  4087  0234  1D03               	btfss	3,2
  4088  0235  2A0B               	goto	l1978
  4089  0236  0835               	movf	___ftdiv@f3,w
  4090  0237  00F0               	movwf	___ftpack@arg
  4091  0238  0836               	movf	___ftdiv@f3+1,w
  4092  0239  00F1               	movwf	___ftpack@arg+1
  4093  023A  0837               	movf	___ftdiv@f3+2,w
  4094  023B  00F2               	movwf	___ftpack@arg+2
  4095  023C  0838               	movf	___ftdiv@exp,w
  4096  023D  00B0               	movwf	??___ftdiv
  4097  023E  0830               	movf	??___ftdiv,w
  4098  023F  00F3               	movwf	___ftpack@exp
  4099  0240  0839               	movf	___ftdiv@sign,w
  4100  0241  00B1               	movwf	??___ftdiv+1
  4101  0242  0831               	movf	??___ftdiv+1,w
  4102  0243  00F4               	movwf	___ftpack@sign
  4103  0244  120A  118A  2005   	fcall	___ftpack
  4104  0247  0870               	movf	?___ftpack,w
  4105  0248  1283               	bcf	3,5	;RP0=0, select bank0
  4106  0249  1303               	bcf	3,6	;RP1=0, select bank0
  4107  024A  00AA               	movwf	?___ftdiv
  4108  024B  0871               	movf	?___ftpack+1,w
  4109  024C  00AB               	movwf	?___ftdiv+1
  4110  024D  0872               	movf	?___ftpack+2,w
  4111  024E  00AC               	movwf	?___ftdiv+2
  4112  024F  0008               	return
  4113  0250                     __end_of___ftdiv:	
  4114                           
  4115                           	psect	text18
  4116  0CDB                     __ptext18:	
  4117 ;; *************** function ___lwtoft *****************
  4118 ;; Defined at:
  4119 ;;		line 28 in file "/opt/microchip/xc8/v1.45/sources/common/lwtoft.c"
  4120 ;; Parameters:    Size  Location     Type
  4121 ;;  c               2    8[COMMON] unsigned int 
  4122 ;; Auto vars:     Size  Location     Type
  4123 ;;		None
  4124 ;; Return value:  Size  Location     Type
  4125 ;;                  3    8[COMMON] float 
  4126 ;; Registers used:
  4127 ;;		wreg, status,2, status,0, pclath, cstack
  4128 ;; Tracked objects:
  4129 ;;		On entry : 0/0
  4130 ;;		On exit  : 0/0
  4131 ;;		Unchanged: 0/0
  4132 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  4133 ;;      Params:         3       0       0       0       0
  4134 ;;      Locals:         0       0       0       0       0
  4135 ;;      Temps:          1       0       0       0       0
  4136 ;;      Totals:         4       0       0       0       0
  4137 ;;Total ram usage:        4 bytes
  4138 ;; Hardware stack levels used:    1
  4139 ;; Hardware stack levels required when called:    1
  4140 ;; This function calls:
  4141 ;;		___ftpack
  4142 ;; This function is called by:
  4143 ;;		_sendADC
  4144 ;; This function uses a non-reentrant model
  4145 ;;
  4146                           
  4147                           
  4148                           ;psect for function ___lwtoft
  4149  0CDB                     ___lwtoft:	
  4150                           
  4151                           ;incstack = 0
  4152                           ; Regs used in ___lwtoft: [wreg+status,2+status,0+pclath+cstack]
  4153  0CDB  0878               	movf	___lwtoft@c,w
  4154  0CDC  00F0               	movwf	___ftpack@arg
  4155  0CDD  0879               	movf	___lwtoft@c+1,w
  4156  0CDE  00F1               	movwf	___ftpack@arg+1
  4157  0CDF  01F2               	clrf	___ftpack@arg+2
  4158  0CE0  308E               	movlw	142
  4159  0CE1  00FB               	movwf	??___lwtoft
  4160  0CE2  087B               	movf	??___lwtoft,w
  4161  0CE3  00F3               	movwf	___ftpack@exp
  4162  0CE4  01F4               	clrf	___ftpack@sign
  4163  0CE5  120A  118A  2005   	fcall	___ftpack
  4164  0CE8  0870               	movf	?___ftpack,w
  4165  0CE9  00F8               	movwf	?___lwtoft
  4166  0CEA  0871               	movf	?___ftpack+1,w
  4167  0CEB  00F9               	movwf	?___lwtoft+1
  4168  0CEC  0872               	movf	?___ftpack+2,w
  4169  0CED  00FA               	movwf	?___lwtoft+2
  4170  0CEE  0008               	return
  4171  0CEF                     __end_of___lwtoft:	
  4172                           
  4173                           	psect	text19
  4174  0005                     __ptext19:	
  4175 ;; *************** function ___ftpack *****************
  4176 ;; Defined at:
  4177 ;;		line 62 in file "/opt/microchip/xc8/v1.45/sources/common/float.c"
  4178 ;; Parameters:    Size  Location     Type
  4179 ;;  arg             3    0[COMMON] unsigned um
  4180 ;;  exp             1    3[COMMON] unsigned char 
  4181 ;;  sign            1    4[COMMON] unsigned char 
  4182 ;; Auto vars:     Size  Location     Type
  4183 ;;		None
  4184 ;; Return value:  Size  Location     Type
  4185 ;;                  3    0[COMMON] float 
  4186 ;; Registers used:
  4187 ;;		wreg, status,2, status,0
  4188 ;; Tracked objects:
  4189 ;;		On entry : 0/0
  4190 ;;		On exit  : 0/0
  4191 ;;		Unchanged: 0/0
  4192 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  4193 ;;      Params:         5       0       0       0       0
  4194 ;;      Locals:         0       0       0       0       0
  4195 ;;      Temps:          3       0       0       0       0
  4196 ;;      Totals:         8       0       0       0       0
  4197 ;;Total ram usage:        8 bytes
  4198 ;; Hardware stack levels used:    1
  4199 ;; This function calls:
  4200 ;;		Nothing
  4201 ;; This function is called by:
  4202 ;;		___ftadd
  4203 ;;		___ftdiv
  4204 ;;		___ftmul
  4205 ;;		___lltoft
  4206 ;;		___lwtoft
  4207 ;; This function uses a non-reentrant model
  4208 ;;
  4209                           
  4210                           
  4211                           ;psect for function ___ftpack
  4212  0005                     ___ftpack:	
  4213                           
  4214                           ;incstack = 0
  4215                           ; Regs used in ___ftpack: [wreg+status,2+status,0]
  4216  0005  0873               	movf	___ftpack@exp,w
  4217  0006  1903               	btfsc	3,2
  4218  0007  280D               	goto	l1426
  4219  0008  0872               	movf	___ftpack@arg+2,w
  4220  0009  0471               	iorwf	___ftpack@arg+1,w
  4221  000A  0470               	iorwf	___ftpack@arg,w
  4222  000B  1D03               	skipz
  4223  000C  2820               	goto	l1432
  4224  000D                     l1426:	
  4225  000D  3000               	movlw	0
  4226  000E  00F0               	movwf	?___ftpack
  4227  000F  3000               	movlw	0
  4228  0010  00F1               	movwf	?___ftpack+1
  4229  0011  3000               	movlw	0
  4230  0012  00F2               	movwf	?___ftpack+2
  4231  0013  0008               	return
  4232  0014                     l1430:	
  4233  0014  3001               	movlw	1
  4234  0015  00F5               	movwf	??___ftpack
  4235  0016  0875               	movf	??___ftpack,w
  4236  0017  07F3               	addwf	___ftpack@exp,f
  4237  0018  3001               	movlw	1
  4238  0019                     u1415:	
  4239  0019  1003               	clrc
  4240  001A  0CF2               	rrf	___ftpack@arg+2,f
  4241  001B  0CF1               	rrf	___ftpack@arg+1,f
  4242  001C  0CF0               	rrf	___ftpack@arg,f
  4243  001D  3EFF               	addlw	-1
  4244  001E  1D03               	skipz
  4245  001F  2819               	goto	u1415
  4246  0020                     l1432:	
  4247  0020  30FE               	movlw	254
  4248  0021  0572               	andwf	___ftpack@arg+2,w
  4249  0022  1903               	btfsc	3,2
  4250  0023  283B               	goto	l430
  4251  0024  2814               	goto	l1430
  4252  0025                     l1434:	
  4253  0025  3001               	movlw	1
  4254  0026  00F5               	movwf	??___ftpack
  4255  0027  0875               	movf	??___ftpack,w
  4256  0028  07F3               	addwf	___ftpack@exp,f
  4257  0029  3001               	movlw	1
  4258  002A  07F0               	addwf	___ftpack@arg,f
  4259  002B  3000               	movlw	0
  4260  002C  1803               	skipnc
  4261  002D  3001               	movlw	1
  4262  002E  07F1               	addwf	___ftpack@arg+1,f
  4263  002F  3000               	movlw	0
  4264  0030  1803               	skipnc
  4265  0031  3001               	movlw	1
  4266  0032  07F2               	addwf	___ftpack@arg+2,f
  4267  0033  3001               	movlw	1
  4268  0034                     u1435:	
  4269  0034  1003               	clrc
  4270  0035  0CF2               	rrf	___ftpack@arg+2,f
  4271  0036  0CF1               	rrf	___ftpack@arg+1,f
  4272  0037  0CF0               	rrf	___ftpack@arg,f
  4273  0038  3EFF               	addlw	-1
  4274  0039  1D03               	skipz
  4275  003A  2834               	goto	u1435
  4276  003B                     l430:	
  4277  003B  30FF               	movlw	255
  4278  003C  0572               	andwf	___ftpack@arg+2,w
  4279  003D  1903               	btfsc	3,2
  4280  003E  284A               	goto	l1442
  4281  003F  2825               	goto	l1434
  4282  0040                     l1440:	
  4283  0040  3001               	movlw	1
  4284  0041  02F3               	subwf	___ftpack@exp,f
  4285  0042  3001               	movlw	1
  4286  0043                     u1455:	
  4287  0043  1003               	clrc
  4288  0044  0DF0               	rlf	___ftpack@arg,f
  4289  0045  0DF1               	rlf	___ftpack@arg+1,f
  4290  0046  0DF2               	rlf	___ftpack@arg+2,f
  4291  0047  3EFF               	addlw	-1
  4292  0048  1D03               	skipz
  4293  0049  2843               	goto	u1455
  4294  004A                     l1442:	
  4295  004A  1BF1               	btfsc	___ftpack@arg+1,7
  4296  004B  2850               	goto	l437
  4297  004C  3002               	movlw	2
  4298  004D  0273               	subwf	___ftpack@exp,w
  4299  004E  1803               	skipnc
  4300  004F  2840               	goto	l1440
  4301  0050                     l437:	
  4302  0050  1873               	btfsc	___ftpack@exp,0
  4303  0051  2858               	goto	l438
  4304  0052  30FF               	movlw	255
  4305  0053  05F0               	andwf	___ftpack@arg,f
  4306  0054  307F               	movlw	127
  4307  0055  05F1               	andwf	___ftpack@arg+1,f
  4308  0056  30FF               	movlw	255
  4309  0057  05F2               	andwf	___ftpack@arg+2,f
  4310  0058                     l438:	
  4311  0058  1003               	clrc
  4312  0059  0CF3               	rrf	___ftpack@exp,f
  4313  005A  0873               	movf	___ftpack@exp,w
  4314  005B  00F5               	movwf	??___ftpack
  4315  005C  01F6               	clrf	??___ftpack+1
  4316  005D  01F7               	clrf	??___ftpack+2
  4317  005E  3010               	movlw	16
  4318  005F                     u1495:	
  4319  005F  1003               	clrc
  4320  0060  0DF5               	rlf	??___ftpack,f
  4321  0061  0DF6               	rlf	??___ftpack+1,f
  4322  0062  0DF7               	rlf	??___ftpack+2,f
  4323  0063  3EFF               	addlw	-1
  4324  0064  1D03               	skipz
  4325  0065  285F               	goto	u1495
  4326  0066  0875               	movf	??___ftpack,w
  4327  0067  04F0               	iorwf	___ftpack@arg,f
  4328  0068  0876               	movf	??___ftpack+1,w
  4329  0069  04F1               	iorwf	___ftpack@arg+1,f
  4330  006A  0877               	movf	??___ftpack+2,w
  4331  006B  04F2               	iorwf	___ftpack@arg+2,f
  4332  006C  0874               	movf	___ftpack@sign,w
  4333  006D  1903               	btfsc	3,2
  4334  006E  0008               	return
  4335  006F  17F2               	bsf	___ftpack@arg+2,7
  4336  0070  0008               	return
  4337  0071                     __end_of___ftpack:	
  4338                           
  4339                           	psect	text20
  4340  0C72                     __ptext20:	
  4341 ;; *************** function _runADC *****************
  4342 ;; Defined at:
  4343 ;;		line 80 in file "adc_main.c"
  4344 ;; Parameters:    Size  Location     Type
  4345 ;;		None
  4346 ;; Auto vars:     Size  Location     Type
  4347 ;;		None
  4348 ;; Return value:  Size  Location     Type
  4349 ;;                  1    wreg      void 
  4350 ;; Registers used:
  4351 ;;		None
  4352 ;; Tracked objects:
  4353 ;;		On entry : 0/0
  4354 ;;		On exit  : 0/0
  4355 ;;		Unchanged: 0/0
  4356 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  4357 ;;      Params:         0       0       0       0       0
  4358 ;;      Locals:         0       0       0       0       0
  4359 ;;      Temps:          0       0       0       0       0
  4360 ;;      Totals:         0       0       0       0       0
  4361 ;;Total ram usage:        0 bytes
  4362 ;; Hardware stack levels used:    1
  4363 ;; This function calls:
  4364 ;;		Nothing
  4365 ;; This function is called by:
  4366 ;;		_main
  4367 ;; This function uses a non-reentrant model
  4368 ;;
  4369                           
  4370                           
  4371                           ;psect for function _runADC
  4372  0C72                     _runADC:	
  4373                           
  4374                           ;adc_main.c: 81: ADCON0bits.GO = 1;
  4375                           
  4376                           ;incstack = 0
  4377                           ; Regs used in _runADC: []
  4378  0C72  1283               	bcf	3,5	;RP0=0, select bank0
  4379  0C73  1303               	bcf	3,6	;RP1=0, select bank0
  4380  0C74  149F               	bsf	31,1	;volatile
  4381  0C75                     l91:	
  4382                           ;adc_main.c: 83: ;
  4383                           
  4384                           ;adc_main.c: 82: while(PIR1bits.ADIF != 1)
  4385                           
  4386  0C75  1F0C               	btfss	12,6	;volatile
  4387  0C76  2C75               	goto	l91
  4388                           
  4389                           ;adc_main.c: 84: PIR1bits.ADIF = 0;
  4390  0C77  130C               	bcf	12,6	;volatile
  4391  0C78  0008               	return
  4392  0C79                     __end_of_runADC:	
  4393                           
  4394                           	psect	text21
  4395  0C9C                     __ptext21:	
  4396 ;; *************** function _configUART *****************
  4397 ;; Defined at:
  4398 ;;		line 59 in file "adc_main.c"
  4399 ;; Parameters:    Size  Location     Type
  4400 ;;		None
  4401 ;; Auto vars:     Size  Location     Type
  4402 ;;		None
  4403 ;; Return value:  Size  Location     Type
  4404 ;;                  1    wreg      void 
  4405 ;; Registers used:
  4406 ;;		None
  4407 ;; Tracked objects:
  4408 ;;		On entry : 0/0
  4409 ;;		On exit  : 0/0
  4410 ;;		Unchanged: 0/0
  4411 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  4412 ;;      Params:         0       0       0       0       0
  4413 ;;      Locals:         0       0       0       0       0
  4414 ;;      Temps:          0       0       0       0       0
  4415 ;;      Totals:         0       0       0       0       0
  4416 ;;Total ram usage:        0 bytes
  4417 ;; Hardware stack levels used:    1
  4418 ;; This function calls:
  4419 ;;		Nothing
  4420 ;; This function is called by:
  4421 ;;		_main
  4422 ;; This function uses a non-reentrant model
  4423 ;;
  4424                           
  4425                           
  4426                           ;psect for function _configUART
  4427  0C9C                     _configUART:	
  4428                           
  4429                           ;adc_main.c: 60: RCSTAbits.SPEN = 1;
  4430                           
  4431                           ;incstack = 0
  4432                           ; Regs used in _configUART: []
  4433  0C9C  1283               	bcf	3,5	;RP0=0, select bank0
  4434  0C9D  1303               	bcf	3,6	;RP1=0, select bank0
  4435  0C9E  1798               	bsf	24,7	;volatile
  4436                           
  4437                           ;adc_main.c: 61: RCSTAbits.CREN = 1;
  4438  0C9F  1618               	bsf	24,4	;volatile
  4439                           
  4440                           ;adc_main.c: 62: TXSTAbits.BRGH = 1;
  4441  0CA0  1683               	bsf	3,5	;RP0=1, select bank1
  4442  0CA1  1303               	bcf	3,6	;RP1=0, select bank1
  4443  0CA2  1518               	bsf	24,2	;volatile
  4444                           
  4445                           ;adc_main.c: 63: TXSTAbits.TXEN = 1;
  4446  0CA3  1698               	bsf	24,5	;volatile
  4447                           
  4448                           ;adc_main.c: 64: PIR1bits.ADIF=0;
  4449  0CA4  1283               	bcf	3,5	;RP0=0, select bank0
  4450  0CA5  1303               	bcf	3,6	;RP1=0, select bank0
  4451  0CA6  130C               	bcf	12,6	;volatile
  4452  0CA7  0008               	return
  4453  0CA8                     __end_of_configUART:	
  4454                           
  4455                           	psect	text22
  4456  0C91                     __ptext22:	
  4457 ;; *************** function _configTimer *****************
  4458 ;; Defined at:
  4459 ;;		line 40 in file "adc_main.c"
  4460 ;; Parameters:    Size  Location     Type
  4461 ;;		None
  4462 ;; Auto vars:     Size  Location     Type
  4463 ;;		None
  4464 ;; Return value:  Size  Location     Type
  4465 ;;                  1    wreg      void 
  4466 ;; Registers used:
  4467 ;;		wreg
  4468 ;; Tracked objects:
  4469 ;;		On entry : 0/0
  4470 ;;		On exit  : 0/0
  4471 ;;		Unchanged: 0/0
  4472 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  4473 ;;      Params:         0       0       0       0       0
  4474 ;;      Locals:         0       0       0       0       0
  4475 ;;      Temps:          0       0       0       0       0
  4476 ;;      Totals:         0       0       0       0       0
  4477 ;;Total ram usage:        0 bytes
  4478 ;; Hardware stack levels used:    1
  4479 ;; This function calls:
  4480 ;;		Nothing
  4481 ;; This function is called by:
  4482 ;;		_main
  4483 ;; This function uses a non-reentrant model
  4484 ;;
  4485                           
  4486                           
  4487                           ;psect for function _configTimer
  4488  0C91                     _configTimer:	
  4489                           
  4490                           ;adc_main.c: 41: OSCCONbits.IRCF2 = 0;
  4491                           
  4492                           ;incstack = 0
  4493                           ; Regs used in _configTimer: [wreg]
  4494  0C91  1683               	bsf	3,5	;RP0=1, select bank1
  4495  0C92  1303               	bcf	3,6	;RP1=0, select bank1
  4496  0C93  130F               	bcf	15,6	;volatile
  4497                           
  4498                           ;adc_main.c: 42: OPTION_REGbits.PSA = 0;
  4499  0C94  1181               	bcf	1,3	;volatile
  4500                           
  4501                           ;adc_main.c: 43: OPTION_REGbits.T0CS = 0;
  4502  0C95  1281               	bcf	1,5	;volatile
  4503                           
  4504                           ;adc_main.c: 44: INTCONbits.T0IF = 0;
  4505  0C96  110B               	bcf	11,2	;volatile
  4506                           
  4507                           ;adc_main.c: 45: TMR0 = 99;
  4508  0C97  3063               	movlw	99
  4509  0C98  1283               	bcf	3,5	;RP0=0, select bank0
  4510  0C99  1303               	bcf	3,6	;RP1=0, select bank0
  4511  0C9A  0081               	movwf	1	;volatile
  4512  0C9B  0008               	return
  4513  0C9C                     __end_of_configTimer:	
  4514                           
  4515                           	psect	text23
  4516  0F94                     __ptext23:	
  4517 ;; *************** function _configLCD *****************
  4518 ;; Defined at:
  4519 ;;		line 212 in file "adc_main.c"
  4520 ;; Parameters:    Size  Location     Type
  4521 ;;		None
  4522 ;; Auto vars:     Size  Location     Type
  4523 ;;  msg            12   13[BANK0 ] unsigned char [12]
  4524 ;;  i               1   25[BANK0 ] unsigned char 
  4525 ;; Return value:  Size  Location     Type
  4526 ;;                  1    wreg      void 
  4527 ;; Registers used:
  4528 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
  4529 ;; Tracked objects:
  4530 ;;		On entry : 0/0
  4531 ;;		On exit  : 0/0
  4532 ;;		Unchanged: 0/0
  4533 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  4534 ;;      Params:         0       0       0       0       0
  4535 ;;      Locals:         0      13       0       0       0
  4536 ;;      Temps:          0       4       0       0       0
  4537 ;;      Totals:         0      17       0       0       0
  4538 ;;Total ram usage:       17 bytes
  4539 ;; Hardware stack levels used:    1
  4540 ;; Hardware stack levels required when called:    2
  4541 ;; This function calls:
  4542 ;;		_comando
  4543 ;;		_confBusLCD
  4544 ;;		_dato
  4545 ;;		_defineChar
  4546 ;; This function is called by:
  4547 ;;		_main
  4548 ;; This function uses a non-reentrant model
  4549 ;;
  4550                           
  4551                           
  4552                           ;psect for function _configLCD
  4553  0F94                     _configLCD:	
  4554                           
  4555                           ;adc_main.c: 214: unsigned char i, msg[] = "Temperatura";
  4556                           
  4557                           ;incstack = 0
  4558                           ; Regs used in _configLCD: [wreg-fsr0h+status,2+status,0+pclath+cstack]
  4559  0F94  302D               	movlw	configLCD@msg& (0+255)
  4560  0F95  0084               	movwf	4
  4561  0F96  30A0               	movlw	low configLCD@F1828
  4562  0F97  1283               	bcf	3,5	;RP0=0, select bank0
  4563  0F98  1303               	bcf	3,6	;RP1=0, select bank0
  4564  0F99  00A9               	movwf	??_configLCD
  4565  0F9A  0804               	movf	4,w
  4566  0F9B  00AA               	movwf	??_configLCD+1
  4567  0F9C  300C               	movlw	12
  4568  0F9D  00AB               	movwf	??_configLCD+2
  4569  0F9E                     u2670:	
  4570  0F9E  0829               	movf	??_configLCD,w
  4571  0F9F  0084               	movwf	4
  4572  0FA0  1383               	bcf	3,7	;select IRP bank1
  4573  0FA1  0800               	movf	0,w
  4574  0FA2  00AC               	movwf	??_configLCD+3
  4575  0FA3  0AA9               	incf	??_configLCD,f
  4576  0FA4  082A               	movf	??_configLCD+1,w
  4577  0FA5  0084               	movwf	4
  4578  0FA6  082C               	movf	??_configLCD+3,w
  4579  0FA7  0080               	movwf	0
  4580  0FA8  0AAA               	incf	??_configLCD+1,f
  4581  0FA9  0BAB               	decfsz	??_configLCD+2,f
  4582  0FAA  2F9E               	goto	u2670
  4583                           
  4584                           ;adc_main.c: 215: TRISE=0xF8;
  4585  0FAB  30F8               	movlw	248
  4586  0FAC  1683               	bsf	3,5	;RP0=1, select bank1
  4587  0FAD  1303               	bcf	3,6	;RP1=0, select bank1
  4588  0FAE  0089               	movwf	9	;volatile
  4589                           
  4590                           ;adc_main.c: 216: ANSEL=0;
  4591  0FAF  1683               	bsf	3,5	;RP0=1, select bank3
  4592  0FB0  1703               	bsf	3,6	;RP1=1, select bank3
  4593  0FB1  0188               	clrf	8	;volatile
  4594                           
  4595                           ;adc_main.c: 217: confBusLCD();
  4596  0FB2  120A  158A  2594  120A  158A  	fcall	_confBusLCD
  4597                           
  4598                           ;adc_main.c: 218: comando(0x0C);
  4599  0FB7  300C               	movlw	12
  4600  0FB8  00F0               	movwf	comando@com
  4601  0FB9  3000               	movlw	0
  4602  0FBA  00F1               	movwf	comando@com+1
  4603  0FBB  120A  158A  25FE  120A  158A  	fcall	_comando
  4604                           
  4605                           ;adc_main.c: 219: comando(0x28);
  4606  0FC0  3028               	movlw	40
  4607  0FC1  00F0               	movwf	comando@com
  4608  0FC2  3000               	movlw	0
  4609  0FC3  00F1               	movwf	comando@com+1
  4610  0FC4  120A  158A  25FE  120A  158A  	fcall	_comando
  4611                           
  4612                           ;adc_main.c: 220: comando(0x01);
  4613  0FC9  3001               	movlw	1
  4614  0FCA  00F0               	movwf	comando@com
  4615  0FCB  3000               	movlw	0
  4616  0FCC  00F1               	movwf	comando@com+1
  4617  0FCD  120A  158A  25FE  120A  158A  	fcall	_comando
  4618                           
  4619                           ;adc_main.c: 221: comando(0x82);
  4620  0FD2  3082               	movlw	130
  4621  0FD3  00F0               	movwf	comando@com
  4622  0FD4  3000               	movlw	0
  4623  0FD5  00F1               	movwf	comando@com+1
  4624  0FD6  120A  158A  25FE  120A  158A  	fcall	_comando
  4625                           
  4626                           ;adc_main.c: 222: for(i = 0; msg[i]; i++)
  4627  0FDB  1283               	bcf	3,5	;RP0=0, select bank0
  4628  0FDC  1303               	bcf	3,6	;RP1=0, select bank0
  4629  0FDD  01B9               	clrf	configLCD@i
  4630  0FDE                     l2090:	
  4631  0FDE  0839               	movf	configLCD@i,w
  4632  0FDF  3E2D               	addlw	(low (configLCD@msg| 0))& (0+255)
  4633  0FE0  0084               	movwf	4
  4634  0FE1  1383               	bcf	3,7	;select IRP bank0
  4635  0FE2  0800               	movf	0,w
  4636  0FE3  1903               	btfsc	3,2
  4637  0FE4  2FFC               	goto	l2092
  4638                           
  4639                           ;adc_main.c: 223: dato(msg[i]);
  4640  0FE5  0839               	movf	configLCD@i,w
  4641  0FE6  3E2D               	addlw	(low (configLCD@msg| 0))& (0+255)
  4642  0FE7  0084               	movwf	4
  4643  0FE8  1383               	bcf	3,7	;select IRP bank0
  4644  0FE9  0800               	movf	0,w
  4645  0FEA  00A9               	movwf	??_configLCD
  4646  0FEB  01AA               	clrf	??_configLCD+1
  4647  0FEC  0829               	movf	??_configLCD,w
  4648  0FED  00F0               	movwf	dato@dat
  4649  0FEE  082A               	movf	??_configLCD+1,w
  4650  0FEF  00F1               	movwf	dato@dat+1
  4651  0FF0  120A  158A  2643  120A  158A  	fcall	_dato
  4652  0FF5  3001               	movlw	1
  4653  0FF6  1283               	bcf	3,5	;RP0=0, select bank0
  4654  0FF7  1303               	bcf	3,6	;RP1=0, select bank0
  4655  0FF8  00A9               	movwf	??_configLCD
  4656  0FF9  0829               	movf	??_configLCD,w
  4657  0FFA  07B9               	addwf	configLCD@i,f
  4658  0FFB  2FDE               	goto	l2090
  4659  0FFC                     l2092:	
  4660                           
  4661                           ;adc_main.c: 224: defineChar();
  4662  0FFC  120A  158A  25C2   	fcall	_defineChar
  4663  0FFF  0008               	return
  4664  1000                     __end_of_configLCD:	
  4665                           
  4666                           	psect	text24
  4667  0DC2                     __ptext24:	
  4668 ;; *************** function _defineChar *****************
  4669 ;; Defined at:
  4670 ;;		line 130 in file "adc_main.c"
  4671 ;; Parameters:    Size  Location     Type
  4672 ;;		None
  4673 ;; Auto vars:     Size  Location     Type
  4674 ;;  data            8    0[BANK0 ] unsigned char [8]
  4675 ;;  i               1    8[BANK0 ] unsigned char 
  4676 ;;  t               1    0        unsigned char 
  4677 ;; Return value:  Size  Location     Type
  4678 ;;                  1    wreg      void 
  4679 ;; Registers used:
  4680 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
  4681 ;; Tracked objects:
  4682 ;;		On entry : 0/0
  4683 ;;		On exit  : 0/0
  4684 ;;		Unchanged: 0/0
  4685 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  4686 ;;      Params:         0       0       0       0       0
  4687 ;;      Locals:         0       9       0       0       0
  4688 ;;      Temps:          4       0       0       0       0
  4689 ;;      Totals:         4       9       0       0       0
  4690 ;;Total ram usage:       13 bytes
  4691 ;; Hardware stack levels used:    1
  4692 ;; Hardware stack levels required when called:    1
  4693 ;; This function calls:
  4694 ;;		_comando
  4695 ;;		_dato
  4696 ;; This function is called by:
  4697 ;;		_configLCD
  4698 ;; This function uses a non-reentrant model
  4699 ;;
  4700                           
  4701                           
  4702                           ;psect for function _defineChar
  4703  0DC2                     _defineChar:	
  4704                           
  4705                           ;adc_main.c: 132: unsigned char t, i, data[8] = {0x0F, 0x09, 0x09, 0x0F, 0x00, 0x00, 0x0
      +                          0, 0x00};
  4706                           
  4707                           ;incstack = 0
  4708                           ; Regs used in _defineChar: [wreg-fsr0h+status,2+status,0+pclath+cstack]
  4709  0DC2  3020               	movlw	defineChar@data& (0+255)
  4710  0DC3  0084               	movwf	4
  4711  0DC4  30AC               	movlw	low defineChar@F1815
  4712  0DC5  00F8               	movwf	??_defineChar
  4713  0DC6  0804               	movf	4,w
  4714  0DC7  00F9               	movwf	??_defineChar+1
  4715  0DC8  3008               	movlw	8
  4716  0DC9  00FA               	movwf	??_defineChar+2
  4717  0DCA                     u2630:	
  4718  0DCA  0878               	movf	??_defineChar,w
  4719  0DCB  0084               	movwf	4
  4720  0DCC  1383               	bcf	3,7	;select IRP bank1
  4721  0DCD  0800               	movf	0,w
  4722  0DCE  00FB               	movwf	??_defineChar+3
  4723  0DCF  0AF8               	incf	??_defineChar,f
  4724  0DD0  0879               	movf	??_defineChar+1,w
  4725  0DD1  0084               	movwf	4
  4726  0DD2  087B               	movf	??_defineChar+3,w
  4727  0DD3  0080               	movwf	0
  4728  0DD4  0AF9               	incf	??_defineChar+1,f
  4729  0DD5  0BFA               	decfsz	??_defineChar+2,f
  4730  0DD6  2DCA               	goto	u2630
  4731                           
  4732                           ;adc_main.c: 133: comando(0x40);
  4733  0DD7  3040               	movlw	64
  4734  0DD8  00F0               	movwf	comando@com
  4735  0DD9  3000               	movlw	0
  4736  0DDA  00F1               	movwf	comando@com+1
  4737  0DDB  120A  158A  25FE  120A  158A  	fcall	_comando
  4738                           
  4739                           ;adc_main.c: 134: for(i = 0; i < 8; i++)
  4740  0DE0  1283               	bcf	3,5	;RP0=0, select bank0
  4741  0DE1  1303               	bcf	3,6	;RP1=0, select bank0
  4742  0DE2  01A8               	clrf	defineChar@i
  4743  0DE3                     L3:	
  4744  0DE3  3008               	movlw	8
  4745  0DE4  0228               	subwf	defineChar@i,w
  4746  0DE5  1803               	btfsc	3,0
  4747  0DE6  0008               	return
  4748                           
  4749                           ;adc_main.c: 135: dato(data[i]);
  4750  0DE7  0828               	movf	defineChar@i,w
  4751  0DE8  3E20               	addlw	(low (defineChar@data| 0))& (0+255)
  4752  0DE9  0084               	movwf	4
  4753  0DEA  1383               	bcf	3,7	;select IRP bank0
  4754  0DEB  0800               	movf	0,w
  4755  0DEC  00F8               	movwf	??_defineChar
  4756  0DED  01F9               	clrf	??_defineChar+1
  4757  0DEE  0878               	movf	??_defineChar,w
  4758  0DEF  00F0               	movwf	dato@dat
  4759  0DF0  0879               	movf	??_defineChar+1,w
  4760  0DF1  00F1               	movwf	dato@dat+1
  4761  0DF2  120A  158A  2643  120A  158A  	fcall	_dato
  4762  0DF7  3001               	movlw	1
  4763  0DF8  00F8               	movwf	??_defineChar
  4764  0DF9  0878               	movf	??_defineChar,w
  4765  0DFA  1283               	bcf	3,5	;RP0=0, select bank0
  4766  0DFB  1303               	bcf	3,6	;RP1=0, select bank0
  4767  0DFC  07A8               	addwf	defineChar@i,f
  4768  0DFD  2DE3               	goto	L3
  4769  0DFE                     __end_of_defineChar:	
  4770                           
  4771                           	psect	text25
  4772  0E43                     __ptext25:	
  4773 ;; *************** function _dato *****************
  4774 ;; Defined at:
  4775 ;;		line 185 in file "adc_main.c"
  4776 ;; Parameters:    Size  Location     Type
  4777 ;;  dat             2    0[COMMON] unsigned int 
  4778 ;; Auto vars:     Size  Location     Type
  4779 ;;  t               2    6[COMMON] int 
  4780 ;;  estado          2    4[COMMON] int 
  4781 ;; Return value:  Size  Location     Type
  4782 ;;                  1    wreg      void 
  4783 ;; Registers used:
  4784 ;;		wreg, status,2, status,0
  4785 ;; Tracked objects:
  4786 ;;		On entry : 0/0
  4787 ;;		On exit  : 0/0
  4788 ;;		Unchanged: 0/0
  4789 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  4790 ;;      Params:         2       0       0       0       0
  4791 ;;      Locals:         4       0       0       0       0
  4792 ;;      Temps:          2       0       0       0       0
  4793 ;;      Totals:         8       0       0       0       0
  4794 ;;Total ram usage:        8 bytes
  4795 ;; Hardware stack levels used:    1
  4796 ;; This function calls:
  4797 ;;		Nothing
  4798 ;; This function is called by:
  4799 ;;		_printADC
  4800 ;;		_defineChar
  4801 ;;		_configLCD
  4802 ;; This function uses a non-reentrant model
  4803 ;;
  4804                           
  4805                           
  4806                           ;psect for function _dato
  4807  0E43                     _dato:	
  4808                           
  4809                           ;adc_main.c: 187: int t, estado;
  4810                           ;adc_main.c: 190: PORTEbits.RE0=0; t=0;
  4811                           
  4812                           ;incstack = 0
  4813                           ; Regs used in _dato: [wreg+status,2+status,0]
  4814  0E43  1283               	bcf	3,5	;RP0=0, select bank0
  4815  0E44  1303               	bcf	3,6	;RP1=0, select bank0
  4816  0E45  1009               	bcf	9,0	;volatile
  4817  0E46  01F6               	clrf	dato@t
  4818  0E47  01F7               	clrf	dato@t+1
  4819                           
  4820                           ;adc_main.c: 191: PORTEbits.RE1=1; t=0;
  4821  0E48  1489               	bsf	9,1	;volatile
  4822  0E49  01F6               	clrf	dato@t
  4823  0E4A  01F7               	clrf	dato@t+1
  4824  0E4B                     l1910:	
  4825                           ;adc_main.c: 192: do
  4826                           
  4827                           
  4828                           ;adc_main.c: 193: {
  4829                           ;adc_main.c: 194: PORTEbits.RE2=1; t=0;
  4830  0E4B  1509               	bsf	9,2	;volatile
  4831  0E4C  01F6               	clrf	dato@t
  4832  0E4D  01F7               	clrf	dato@t+1
  4833                           
  4834                           ;adc_main.c: 195: estado=(PORTD&0x80);
  4835  0E4E  0808               	movf	8,w	;volatile
  4836  0E4F  3980               	andlw	128
  4837  0E50  00F2               	movwf	??_dato
  4838  0E51  01F3               	clrf	??_dato+1
  4839  0E52  0872               	movf	??_dato,w
  4840  0E53  00F4               	movwf	dato@estado
  4841  0E54  0873               	movf	??_dato+1,w
  4842  0E55  00F5               	movwf	dato@estado+1
  4843                           
  4844                           ;adc_main.c: 196: PORTEbits.RE2=0; t=0;
  4845  0E56  1109               	bcf	9,2	;volatile
  4846  0E57  01F6               	clrf	dato@t
  4847  0E58  01F7               	clrf	dato@t+1
  4848                           
  4849                           ;adc_main.c: 197: PORTEbits.RE2=1; t=0;
  4850  0E59  1509               	bsf	9,2	;volatile
  4851  0E5A  01F6               	clrf	dato@t
  4852  0E5B  01F7               	clrf	dato@t+1
  4853                           
  4854                           ;adc_main.c: 198: PORTEbits.RE2=0; t=0;
  4855  0E5C  1109               	bcf	9,2	;volatile
  4856  0E5D  01F6               	clrf	dato@t
  4857  0E5E  01F7               	clrf	dato@t+1
  4858                           
  4859                           ;adc_main.c: 199: } while (estado!=0);
  4860  0E5F  0874               	movf	dato@estado,w
  4861  0E60  0475               	iorwf	dato@estado+1,w
  4862  0E61  1D03               	btfss	3,2
  4863  0E62  2E4B               	goto	l1910
  4864                           
  4865                           ;adc_main.c: 200: PORTEbits.RE0=1; t=0;
  4866  0E63  1409               	bsf	9,0	;volatile
  4867  0E64  01F6               	clrf	dato@t
  4868  0E65  01F7               	clrf	dato@t+1
  4869                           
  4870                           ;adc_main.c: 201: PORTEbits.RE1=0;
  4871  0E66  1089               	bcf	9,1	;volatile
  4872                           
  4873                           ;adc_main.c: 202: TRISD=0x0F;
  4874  0E67  300F               	movlw	15
  4875  0E68  1683               	bsf	3,5	;RP0=1, select bank1
  4876  0E69  1303               	bcf	3,6	;RP1=0, select bank1
  4877  0E6A  0088               	movwf	8	;volatile
  4878                           
  4879                           ;adc_main.c: 203: PORTD=dat;
  4880  0E6B  0870               	movf	dato@dat,w
  4881  0E6C  1283               	bcf	3,5	;RP0=0, select bank0
  4882  0E6D  1303               	bcf	3,6	;RP1=0, select bank0
  4883  0E6E  0088               	movwf	8	;volatile
  4884                           
  4885                           ;adc_main.c: 204: PORTEbits.RE2=1; t=0;
  4886  0E6F  1509               	bsf	9,2	;volatile
  4887  0E70  01F6               	clrf	dato@t
  4888  0E71  01F7               	clrf	dato@t+1
  4889                           
  4890                           ;adc_main.c: 205: PORTEbits.RE2=0; t=0;
  4891  0E72  1109               	bcf	9,2	;volatile
  4892  0E73  01F6               	clrf	dato@t
  4893  0E74  01F7               	clrf	dato@t+1
  4894                           
  4895                           ;adc_main.c: 206: PORTD=(dat<<4);
  4896  0E75  0870               	movf	dato@dat,w
  4897  0E76  00F2               	movwf	??_dato
  4898  0E77  3003               	movlw	3
  4899  0E78                     u2515:	
  4900  0E78  1003               	clrc
  4901  0E79  0DF2               	rlf	??_dato,f
  4902  0E7A  3EFF               	addlw	-1
  4903  0E7B  1D03               	skipz
  4904  0E7C  2E78               	goto	u2515
  4905  0E7D  1003               	clrc
  4906  0E7E  0D72               	rlf	??_dato,w
  4907  0E7F  0088               	movwf	8	;volatile
  4908                           
  4909                           ;adc_main.c: 207: PORTEbits.RE2=1; t=0;
  4910  0E80  1509               	bsf	9,2	;volatile
  4911  0E81  01F6               	clrf	dato@t
  4912  0E82  01F7               	clrf	dato@t+1
  4913                           
  4914                           ;adc_main.c: 208: PORTEbits.RE2=0; t=0;
  4915  0E83  1109               	bcf	9,2	;volatile
  4916  0E84  01F6               	clrf	dato@t
  4917  0E85  01F7               	clrf	dato@t+1
  4918                           
  4919                           ;adc_main.c: 209: TRISD=0xFF;
  4920  0E86  30FF               	movlw	255
  4921  0E87  1683               	bsf	3,5	;RP0=1, select bank1
  4922  0E88  1303               	bcf	3,6	;RP1=0, select bank1
  4923  0E89  0088               	movwf	8	;volatile
  4924  0E8A  0008               	return
  4925  0E8B                     __end_of_dato:	
  4926                           
  4927                           	psect	text26
  4928  0DFE                     __ptext26:	
  4929 ;; *************** function _comando *****************
  4930 ;; Defined at:
  4931 ;;		line 159 in file "adc_main.c"
  4932 ;; Parameters:    Size  Location     Type
  4933 ;;  com             2    0[COMMON] unsigned int 
  4934 ;; Auto vars:     Size  Location     Type
  4935 ;;  t               2    6[COMMON] int 
  4936 ;;  estado          2    4[COMMON] int 
  4937 ;; Return value:  Size  Location     Type
  4938 ;;                  1    wreg      void 
  4939 ;; Registers used:
  4940 ;;		wreg, status,2, status,0
  4941 ;; Tracked objects:
  4942 ;;		On entry : 0/0
  4943 ;;		On exit  : 0/0
  4944 ;;		Unchanged: 0/0
  4945 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  4946 ;;      Params:         2       0       0       0       0
  4947 ;;      Locals:         4       0       0       0       0
  4948 ;;      Temps:          2       0       0       0       0
  4949 ;;      Totals:         8       0       0       0       0
  4950 ;;Total ram usage:        8 bytes
  4951 ;; Hardware stack levels used:    1
  4952 ;; This function calls:
  4953 ;;		Nothing
  4954 ;; This function is called by:
  4955 ;;		_printADC
  4956 ;;		_defineChar
  4957 ;;		_configLCD
  4958 ;; This function uses a non-reentrant model
  4959 ;;
  4960                           
  4961                           
  4962                           ;psect for function _comando
  4963  0DFE                     _comando:	
  4964                           
  4965                           ;adc_main.c: 161: int t, estado;
  4966                           ;adc_main.c: 164: PORTEbits.RE0=0; t=0;
  4967                           
  4968                           ;incstack = 0
  4969                           ; Regs used in _comando: [wreg+status,2+status,0]
  4970  0DFE  1283               	bcf	3,5	;RP0=0, select bank0
  4971  0DFF  1303               	bcf	3,6	;RP1=0, select bank0
  4972  0E00  1009               	bcf	9,0	;volatile
  4973  0E01  01F6               	clrf	comando@t
  4974  0E02  01F7               	clrf	comando@t+1
  4975                           
  4976                           ;adc_main.c: 165: PORTEbits.RE1=1; t=0;
  4977  0E03  1489               	bsf	9,1	;volatile
  4978  0E04  01F6               	clrf	comando@t
  4979  0E05  01F7               	clrf	comando@t+1
  4980  0E06                     l1864:	
  4981                           ;adc_main.c: 166: do
  4982                           
  4983                           
  4984                           ;adc_main.c: 167: {
  4985                           ;adc_main.c: 168: PORTEbits.RE2=1; t=0;
  4986  0E06  1509               	bsf	9,2	;volatile
  4987  0E07  01F6               	clrf	comando@t
  4988  0E08  01F7               	clrf	comando@t+1
  4989                           
  4990                           ;adc_main.c: 169: estado=(PORTD&0x80);
  4991  0E09  0808               	movf	8,w	;volatile
  4992  0E0A  3980               	andlw	128
  4993  0E0B  00F2               	movwf	??_comando
  4994  0E0C  01F3               	clrf	??_comando+1
  4995  0E0D  0872               	movf	??_comando,w
  4996  0E0E  00F4               	movwf	comando@estado
  4997  0E0F  0873               	movf	??_comando+1,w
  4998  0E10  00F5               	movwf	comando@estado+1
  4999                           
  5000                           ;adc_main.c: 170: PORTEbits.RE2=0; t=0;
  5001  0E11  1109               	bcf	9,2	;volatile
  5002  0E12  01F6               	clrf	comando@t
  5003  0E13  01F7               	clrf	comando@t+1
  5004                           
  5005                           ;adc_main.c: 171: PORTEbits.RE2=1; t=0;
  5006  0E14  1509               	bsf	9,2	;volatile
  5007  0E15  01F6               	clrf	comando@t
  5008  0E16  01F7               	clrf	comando@t+1
  5009                           
  5010                           ;adc_main.c: 172: PORTEbits.RE2=0; t=0;
  5011  0E17  1109               	bcf	9,2	;volatile
  5012  0E18  01F6               	clrf	comando@t
  5013  0E19  01F7               	clrf	comando@t+1
  5014                           
  5015                           ;adc_main.c: 173: } while (estado!=0);
  5016  0E1A  0874               	movf	comando@estado,w
  5017  0E1B  0475               	iorwf	comando@estado+1,w
  5018  0E1C  1D03               	btfss	3,2
  5019  0E1D  2E06               	goto	l1864
  5020                           
  5021                           ;adc_main.c: 174: PORTEbits.RE1=0;
  5022  0E1E  1089               	bcf	9,1	;volatile
  5023                           
  5024                           ;adc_main.c: 175: TRISD=0x0F;
  5025  0E1F  300F               	movlw	15
  5026  0E20  1683               	bsf	3,5	;RP0=1, select bank1
  5027  0E21  1303               	bcf	3,6	;RP1=0, select bank1
  5028  0E22  0088               	movwf	8	;volatile
  5029                           
  5030                           ;adc_main.c: 176: PORTD=com;
  5031  0E23  0870               	movf	comando@com,w
  5032  0E24  1283               	bcf	3,5	;RP0=0, select bank0
  5033  0E25  1303               	bcf	3,6	;RP1=0, select bank0
  5034  0E26  0088               	movwf	8	;volatile
  5035                           
  5036                           ;adc_main.c: 177: PORTEbits.RE2=1; t=0;
  5037  0E27  1509               	bsf	9,2	;volatile
  5038  0E28  01F6               	clrf	comando@t
  5039  0E29  01F7               	clrf	comando@t+1
  5040                           
  5041                           ;adc_main.c: 178: PORTEbits.RE2=0; t=0;
  5042  0E2A  1109               	bcf	9,2	;volatile
  5043  0E2B  01F6               	clrf	comando@t
  5044  0E2C  01F7               	clrf	comando@t+1
  5045                           
  5046                           ;adc_main.c: 179: PORTD=(com<<4);
  5047  0E2D  0870               	movf	comando@com,w
  5048  0E2E  00F2               	movwf	??_comando
  5049  0E2F  3003               	movlw	3
  5050  0E30                     u2495:	
  5051  0E30  1003               	clrc
  5052  0E31  0DF2               	rlf	??_comando,f
  5053  0E32  3EFF               	addlw	-1
  5054  0E33  1D03               	skipz
  5055  0E34  2E30               	goto	u2495
  5056  0E35  1003               	clrc
  5057  0E36  0D72               	rlf	??_comando,w
  5058  0E37  0088               	movwf	8	;volatile
  5059                           
  5060                           ;adc_main.c: 180: PORTEbits.RE2=1; t=0;
  5061  0E38  1509               	bsf	9,2	;volatile
  5062  0E39  01F6               	clrf	comando@t
  5063  0E3A  01F7               	clrf	comando@t+1
  5064                           
  5065                           ;adc_main.c: 181: PORTEbits.RE2=0; t=0;
  5066  0E3B  1109               	bcf	9,2	;volatile
  5067  0E3C  01F6               	clrf	comando@t
  5068  0E3D  01F7               	clrf	comando@t+1
  5069                           
  5070                           ;adc_main.c: 182: TRISD=0xFF;
  5071  0E3E  30FF               	movlw	255
  5072  0E3F  1683               	bsf	3,5	;RP0=1, select bank1
  5073  0E40  1303               	bcf	3,6	;RP1=0, select bank1
  5074  0E41  0088               	movwf	8	;volatile
  5075  0E42  0008               	return
  5076  0E43                     __end_of_comando:	
  5077                           
  5078                           	psect	text27
  5079  0D94                     __ptext27:	
  5080 ;; *************** function _confBusLCD *****************
  5081 ;; Defined at:
  5082 ;;		line 138 in file "adc_main.c"
  5083 ;; Parameters:    Size  Location     Type
  5084 ;;		None
  5085 ;; Auto vars:     Size  Location     Type
  5086 ;;  t               2    4[COMMON] int 
  5087 ;;  estado          2    2[COMMON] int 
  5088 ;; Return value:  Size  Location     Type
  5089 ;;                  1    wreg      void 
  5090 ;; Registers used:
  5091 ;;		wreg, status,2, status,0
  5092 ;; Tracked objects:
  5093 ;;		On entry : 0/0
  5094 ;;		On exit  : 0/0
  5095 ;;		Unchanged: 0/0
  5096 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  5097 ;;      Params:         0       0       0       0       0
  5098 ;;      Locals:         4       0       0       0       0
  5099 ;;      Temps:          2       0       0       0       0
  5100 ;;      Totals:         6       0       0       0       0
  5101 ;;Total ram usage:        6 bytes
  5102 ;; Hardware stack levels used:    1
  5103 ;; This function calls:
  5104 ;;		Nothing
  5105 ;; This function is called by:
  5106 ;;		_configLCD
  5107 ;; This function uses a non-reentrant model
  5108 ;;
  5109                           
  5110                           
  5111                           ;psect for function _confBusLCD
  5112  0D94                     _confBusLCD:	
  5113                           
  5114                           ;adc_main.c: 140: int t, estado;
  5115                           ;adc_main.c: 143: PORTEbits.RE0=0; t=0;
  5116                           
  5117                           ;incstack = 0
  5118                           ; Regs used in _confBusLCD: [wreg+status,2+status,0]
  5119  0D94  1283               	bcf	3,5	;RP0=0, select bank0
  5120  0D95  1303               	bcf	3,6	;RP1=0, select bank0
  5121  0D96  1009               	bcf	9,0	;volatile
  5122  0D97  01F4               	clrf	confBusLCD@t
  5123  0D98  01F5               	clrf	confBusLCD@t+1
  5124                           
  5125                           ;adc_main.c: 144: PORTEbits.RE1=1; t=0;
  5126  0D99  1489               	bsf	9,1	;volatile
  5127  0D9A  01F4               	clrf	confBusLCD@t
  5128  0D9B  01F5               	clrf	confBusLCD@t+1
  5129  0D9C                     l2044:	
  5130                           ;adc_main.c: 145: do
  5131                           
  5132                           
  5133                           ;adc_main.c: 146: {
  5134                           ;adc_main.c: 147: PORTEbits.RE2=1; t=0;
  5135  0D9C  1509               	bsf	9,2	;volatile
  5136  0D9D  01F4               	clrf	confBusLCD@t
  5137  0D9E  01F5               	clrf	confBusLCD@t+1
  5138                           
  5139                           ;adc_main.c: 148: estado=(PORTD&0x80);
  5140  0D9F  0808               	movf	8,w	;volatile
  5141  0DA0  3980               	andlw	128
  5142  0DA1  00F0               	movwf	??_confBusLCD
  5143  0DA2  01F1               	clrf	??_confBusLCD+1
  5144  0DA3  0870               	movf	??_confBusLCD,w
  5145  0DA4  00F2               	movwf	confBusLCD@estado
  5146  0DA5  0871               	movf	??_confBusLCD+1,w
  5147  0DA6  00F3               	movwf	confBusLCD@estado+1
  5148                           
  5149                           ;adc_main.c: 149: PORTEbits.RE2=0; t=0;
  5150  0DA7  1109               	bcf	9,2	;volatile
  5151  0DA8  01F4               	clrf	confBusLCD@t
  5152  0DA9  01F5               	clrf	confBusLCD@t+1
  5153                           
  5154                           ;adc_main.c: 150: } while (estado!=0);
  5155  0DAA  0872               	movf	confBusLCD@estado,w
  5156  0DAB  0473               	iorwf	confBusLCD@estado+1,w
  5157  0DAC  1D03               	btfss	3,2
  5158  0DAD  2D9C               	goto	l2044
  5159                           
  5160                           ;adc_main.c: 151: PORTEbits.RE1=0;
  5161  0DAE  1089               	bcf	9,1	;volatile
  5162                           
  5163                           ;adc_main.c: 152: TRISD=0x0F;
  5164  0DAF  300F               	movlw	15
  5165  0DB0  1683               	bsf	3,5	;RP0=1, select bank1
  5166  0DB1  1303               	bcf	3,6	;RP1=0, select bank1
  5167  0DB2  0088               	movwf	8	;volatile
  5168                           
  5169                           ;adc_main.c: 153: PORTD=0x20;
  5170  0DB3  3020               	movlw	32
  5171  0DB4  1283               	bcf	3,5	;RP0=0, select bank0
  5172  0DB5  1303               	bcf	3,6	;RP1=0, select bank0
  5173  0DB6  0088               	movwf	8	;volatile
  5174                           
  5175                           ;adc_main.c: 154: PORTEbits.RE2=1; t=0;
  5176  0DB7  1509               	bsf	9,2	;volatile
  5177  0DB8  01F4               	clrf	confBusLCD@t
  5178  0DB9  01F5               	clrf	confBusLCD@t+1
  5179                           
  5180                           ;adc_main.c: 155: PORTEbits.RE2=0; t=0;
  5181  0DBA  1109               	bcf	9,2	;volatile
  5182  0DBB  01F4               	clrf	confBusLCD@t
  5183  0DBC  01F5               	clrf	confBusLCD@t+1
  5184                           
  5185                           ;adc_main.c: 156: TRISD=0xFF;
  5186  0DBD  30FF               	movlw	255
  5187  0DBE  1683               	bsf	3,5	;RP0=1, select bank1
  5188  0DBF  1303               	bcf	3,6	;RP1=0, select bank1
  5189  0DC0  0088               	movwf	8	;volatile
  5190  0DC1  0008               	return
  5191  0DC2                     __end_of_confBusLCD:	
  5192                           
  5193                           	psect	text28
  5194  0CC7                     __ptext28:	
  5195 ;; *************** function _configADC *****************
  5196 ;; Defined at:
  5197 ;;		line 48 in file "adc_main.c"
  5198 ;; Parameters:    Size  Location     Type
  5199 ;;		None
  5200 ;; Auto vars:     Size  Location     Type
  5201 ;;		None
  5202 ;; Return value:  Size  Location     Type
  5203 ;;                  1    wreg      void 
  5204 ;; Registers used:
  5205 ;;		wreg, status,2
  5206 ;; Tracked objects:
  5207 ;;		On entry : 0/0
  5208 ;;		On exit  : 0/0
  5209 ;;		Unchanged: 0/0
  5210 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  5211 ;;      Params:         0       0       0       0       0
  5212 ;;      Locals:         0       0       0       0       0
  5213 ;;      Temps:          0       0       0       0       0
  5214 ;;      Totals:         0       0       0       0       0
  5215 ;;Total ram usage:        0 bytes
  5216 ;; Hardware stack levels used:    1
  5217 ;; This function calls:
  5218 ;;		Nothing
  5219 ;; This function is called by:
  5220 ;;		_main
  5221 ;; This function uses a non-reentrant model
  5222 ;;
  5223                           
  5224                           
  5225                           ;psect for function _configADC
  5226  0CC7                     _configADC:	
  5227                           
  5228                           ;adc_main.c: 49: TRISB=0XFF;
  5229                           
  5230                           ;incstack = 0
  5231                           ; Regs used in _configADC: [wreg+status,2]
  5232  0CC7  30FF               	movlw	255
  5233  0CC8  1683               	bsf	3,5	;RP0=1, select bank1
  5234  0CC9  1303               	bcf	3,6	;RP1=0, select bank1
  5235  0CCA  0086               	movwf	6	;volatile
  5236                           
  5237                           ;adc_main.c: 50: ADCON0bits.ADON = 1;
  5238  0CCB  1283               	bcf	3,5	;RP0=0, select bank0
  5239  0CCC  1303               	bcf	3,6	;RP1=0, select bank0
  5240  0CCD  141F               	bsf	31,0	;volatile
  5241                           
  5242                           ;adc_main.c: 51: ADCON0bits.CHS3 = 1;
  5243  0CCE  169F               	bsf	31,5	;volatile
  5244                           
  5245                           ;adc_main.c: 52: ADCON0bits.ADCS1 = 0;
  5246  0CCF  139F               	bcf	31,7	;volatile
  5247                           
  5248                           ;adc_main.c: 53: ADCON1bits.ADFM = 0;
  5249  0CD0  1683               	bsf	3,5	;RP0=1, select bank1
  5250  0CD1  1303               	bcf	3,6	;RP1=0, select bank1
  5251  0CD2  139F               	bcf	31,7	;volatile
  5252                           
  5253                           ;adc_main.c: 54: ANSEL= 0;
  5254  0CD3  1683               	bsf	3,5	;RP0=1, select bank3
  5255  0CD4  1703               	bsf	3,6	;RP1=1, select bank3
  5256  0CD5  0188               	clrf	8	;volatile
  5257                           
  5258                           ;adc_main.c: 55: ANSELH = 0;
  5259  0CD6  0189               	clrf	9	;volatile
  5260                           
  5261                           ;adc_main.c: 56: ADRESL = 0;
  5262  0CD7  1683               	bsf	3,5	;RP0=1, select bank1
  5263  0CD8  1303               	bcf	3,6	;RP1=0, select bank1
  5264  0CD9  019E               	clrf	30	;volatile
  5265  0CDA  0008               	return
  5266  0CDB                     __end_of_configADC:	
  5267  007E                     btemp	set	126	;btemp
  5268  007E                     wtemp0	set	126


Data Sizes:
    Strings     11
    Constant    40
    Data        20
    BSS         17
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMMON           14     14      14
    BANK0            80     76      76
    BANK1            80      0      37
    BANK3            96      0       0
    BANK2            96      0       0

Pointer List with Targets:

    ftoa@status	PTR int  size(2) Largest target is 512
		 -> RAM(DATA[512]), 

    ftoa@cp	PTR unsigned char  size(1) Largest target is 17
		 -> ftoa@buf(BANK1[17]), 

    sprintf@f	PTR const unsigned char  size(1) Largest target is 11
		 -> STR_1(CODE[11]), 

    sprintf@sp	PTR unsigned char  size(1) Largest target is 17
		 -> ftoa@buf(BANK1[17]), 

    sprintf@ap	PTR void [1] size(1) Largest target is 2
		 -> ?_sprintf(BANK0[2]), 

    sp__ftoa	PTR unsigned char  size(1) Largest target is 17
		 -> ftoa@buf(BANK1[17]), 

    printADC@buf	PTR unsigned char  size(1) Largest target is 17
		 -> ftoa@buf(BANK1[17]), 


Critical Paths under _main in COMMON

    _printADC->___ftmul
    _ftoa->___ftmul
    _ftoa->___lltoft
    _sprintf->___lldiv
    ___llmod->___lldiv
    ___lltoft->___ftpack
    ___fttol->___ftmul
    ___ftsub->___ftadd
    ___ftsub->___lltoft
    ___ftadd->___ftpack
    ___ftmul->___ftpack
    ___ftdiv->___ftmul
    ___lwtoft->___ftpack
    _configLCD->_defineChar
    _defineChar->_comando
    _defineChar->_dato

Critical Paths under _main in BANK0

    _main->_sendADC
    _sendADC->_printADC
    _printADC->_ftoa
    _ftoa->_sprintf
    _sprintf->___llmod
    ___fttol->___ftmul
    ___ftsub->___ftadd
    ___ftdiv->___ftmul
    _configLCD->_defineChar

Critical Paths under _main in BANK1

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _main in BANK2

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 0     0      0   22904
                          _configADC
                          _configLCD
                        _configTimer
                         _configUART
                             _runADC
                            _sendADC
                          _waitTimer
 ---------------------------------------------------------------------------------
 (1) _waitTimer                                            0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _sendADC                                             12    12      0   21002
                                             64 BANK0     12    12      0
                            ___ftdiv
                           ___lwtoft
                             ___wmul
                           _printADC
 ---------------------------------------------------------------------------------
 (2) _printADC                                            13    10      3   16214
                                             51 BANK0     13    10      3
                            ___ftdiv
                             ___ftge
                            ___ftmul
                            _comando
                               _dato
                               _ftoa
 ---------------------------------------------------------------------------------
 (3) _ftoa                                                15    10      5   10155
                                             36 BANK0     15    10      5
                             ___ftge
                            ___ftmul
                            ___ftneg
                            ___ftsub
                            ___fttol
                           ___lltoft
                            _sprintf
 ---------------------------------------------------------------------------------
 (4) _sprintf                                             34    25      9    2002
                                             10 BANK0     26    17      9
                            ___lldiv
                            ___llmod
                             ___wmul
                            _isdigit
 ---------------------------------------------------------------------------------
 (5) _isdigit                                              2     2      0      68
                                              0 COMMON     2     2      0
 ---------------------------------------------------------------------------------
 (5) ___wmul                                               6     2      4     410
                                              0 COMMON     6     2      4
 ---------------------------------------------------------------------------------
 (5) ___llmod                                             10     2      8     265
                                              0 BANK0     10     2      8
                            ___lldiv (ARG)
 ---------------------------------------------------------------------------------
 (5) ___lldiv                                             14     6      8     268
                                              0 COMMON    14     6      8
 ---------------------------------------------------------------------------------
 (4) ___lltoft                                             6     2      4    1868
                                              8 COMMON     6     2      4
                           ___ftpack
 ---------------------------------------------------------------------------------
 (4) ___fttol                                             14    10      4     358
                                             10 BANK0     14    10      4
                            ___ftmul (ARG)
 ---------------------------------------------------------------------------------
 (4) ___ftsub                                              6     0      6    2865
                                              7 BANK0      6     0      6
                            ___ftadd
                           ___lltoft (ARG)
 ---------------------------------------------------------------------------------
 (5) ___ftadd                                             13     7      6    2692
                                              8 COMMON     6     0      6
                                              0 BANK0      7     7      0
                           ___ftpack
 ---------------------------------------------------------------------------------
 (4) ___ftneg                                              3     0      3      98
                                              0 COMMON     3     0      3
 ---------------------------------------------------------------------------------
 (4) ___ftmul                                             16    10      6    2284
                                              8 COMMON     6     0      6
                                              0 BANK0     10    10      0
                           ___ftpack
 ---------------------------------------------------------------------------------
 (4) ___ftge                                              12     6      6     348
                                              0 COMMON    12     6      6
 ---------------------------------------------------------------------------------
 (3) ___ftdiv                                             16    10      6    2238
                                             10 BANK0     16    10      6
                            ___ftmul (ARG)
                           ___ftpack
                           ___lwtoft (ARG)
                             ___wmul (ARG)
 ---------------------------------------------------------------------------------
 (2) ___lwtoft                                             4     1      3    1821
                                              8 COMMON     4     1      3
                           ___ftpack
                             ___wmul (ARG)
 ---------------------------------------------------------------------------------
 (5) ___ftpack                                             8     3      5    1746
                                              0 COMMON     8     3      5
 ---------------------------------------------------------------------------------
 (1) _runADC                                               0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _configUART                                           0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _configTimer                                          0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _configLCD                                           17    17      0    1902
                                              9 BANK0     17    17      0
                            _comando
                         _confBusLCD
                               _dato
                         _defineChar
 ---------------------------------------------------------------------------------
 (2) _defineChar                                          14    14      0     936
                                              8 COMMON     4     4      0
                                              0 BANK0      9     9      0
                            _comando
                               _dato
 ---------------------------------------------------------------------------------
 (3) _dato                                                 8     6      2     449
                                              0 COMMON     8     6      2
 ---------------------------------------------------------------------------------
 (3) _comando                                              8     6      2     395
                                              0 COMMON     8     6      2
 ---------------------------------------------------------------------------------
 (2) _confBusLCD                                           6     6      0      29
                                              0 COMMON     6     6      0
 ---------------------------------------------------------------------------------
 (1) _configADC                                            0     0      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 5
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _configADC
   _configLCD
     _comando
     _confBusLCD
     _dato
     _defineChar
       _comando
       _dato
   _configTimer
   _configUART
   _runADC
   _sendADC
     ___ftdiv
       ___ftmul (ARG)
         ___ftpack
       ___ftpack (ARG)
       ___lwtoft (ARG)
         ___ftpack
         ___wmul (ARG)
       ___wmul (ARG)
     ___lwtoft
       ___ftpack
       ___wmul (ARG)
     ___wmul
     _printADC
       ___ftdiv
         ___ftmul (ARG)
           ___ftpack
         ___ftpack (ARG)
         ___lwtoft (ARG)
           ___ftpack
           ___wmul (ARG)
         ___wmul (ARG)
       ___ftge
       ___ftmul
         ___ftpack
       _comando
       _dato
       _ftoa
         ___ftge
         ___ftmul
           ___ftpack
         ___ftneg
         ___ftsub
           ___ftadd
             ___ftpack
           ___lltoft (ARG)
             ___ftpack
         ___fttol
           ___ftmul (ARG)
             ___ftpack
         ___lltoft
           ___ftpack
         _sprintf
           ___lldiv
           ___llmod
             ___lldiv (ARG)
           ___wmul
           _isdigit
   _waitTimer

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BANK3               60      0       0       9        0.0%
BITBANK3            60      0       0       8        0.0%
SFR3                 0      0       0       4        0.0%
BITSFR3              0      0       0       4        0.0%
BANK2               60      0       0      11        0.0%
BITBANK2            60      0       0      10        0.0%
SFR2                 0      0       0       5        0.0%
BITSFR2              0      0       0       5        0.0%
BANK1               50      0      25       7       46.2%
BITBANK1            50      0       0       6        0.0%
SFR1                 0      0       0       2        0.0%
BITSFR1              0      0       0       2        0.0%
BANK0               50     4C      4C       5       95.0%
BITBANK0            50      0       0       4        0.0%
SFR0                 0      0       0       1        0.0%
BITSFR0              0      0       0       1        0.0%
COMMON               E      E       E       1      100.0%
BITCOMMON            E      0       0       0        0.0%
CODE                 0      0       0       0        0.0%
DATA                 0      0      7F      12        0.0%
ABS                  0      0      7F       3        0.0%
NULL                 0      0       0       0        0.0%
STACK                0      0       0       2        0.0%
EEDATA             100      0       0       0        0.0%


Microchip Technology PIC Macro Assembler V1.45 build -152302408 
Symbol Table                                                                                   Mon Jun 11 01:08:51 2018

            configLCD@msg 002D                         pc 0002                        l80 0C81  
                      l91 0C75                        fsr 0004       ___wmul@multiplicand 0072  
            ___ftadd@exp1 0026              ___ftadd@exp2 0025              ___ftadd@sign 0024  
                     l163 067B                       l430 003B                       l166 0699  
                     l437 0050                       l461 0555                       l269 0D2E  
                     l438 0058                       l529 00E5             comando@estado 0074  
                     fsr0 0004                       indf 0000              ___ftdiv@cntr 0034  
            ___ftdiv@sign 0039                      l2010 0448                      l2020 049D  
                    l2012 046D                      l2004 0444                      l2018 0471  
                    l2122 0D59                      l2044 0D9C                      l1430 0014  
                    l1440 0040                      l1432 0020                      l1520 0530  
                    l2090 0FDE                      l1442 004A                      l1434 0025  
                    l1426 000D                      l1514 051B                      l1602 05DB  
                    l2092 0FFC                      l1532 0567                      l1516 0527  
                    l1508 0506                      l1702 0F00                      l1526 0545  
                    l1518 052C                      l1462 0CB4                      l1630 067D  
                    l1536 0579                      l1528 0551                      l1640 06AB  
                    l1608 05F0                      l1616 062A                      l1706 0F27  
                    l1730 0338                      l1546 059C                      l1490 04DD  
                    l1810 00CD                      l1570 0F8B                      l1650 06CD  
                    l1634 0682                      l1626 063C                      l1724 0322  
                    l1556 0F46                      l1580 0E95                      l1468 0D26  
                    l1628 0676                      l1910 0E4B                      l1742 0377  
                    l1486 04D6                      l1822 00F6                      l1830 0D6D  
                    l1566 0F7E                      l1558 0F56                      l1582 0EA5  
                    l1590 0ED0                      l1670 0741                      l1662 070F  
                    l1496 04EC                      l1816 00DA                      l1808 00BD  
                    l1832 0D7F                      l1656 06D3                      l1754 039F  
                    l1746 0387                      l1818 00E8                      l1586 0EC3  
                    l1690 07D6                      l1674 0762                      l1666 0727  
                    l1780 0D0C                      l1684 077C                      l1676 0766  
                    l1692 05BB                      l1758 03AF                      l1790 008B  
                    l1694 07E3                      l1846 0289                      l1864 0E06  
                    l1964 01C6                      l1958 01B0                      l1986 022A  
                    l1978 020B                      STR_1 082E                      u2115 0787  
                    u2035 06D6                      u2045 0705                      u1415 0019  
                    u2151 0EF3                      u2215 0344                      u2152 0EF4  
                    u2153 0EF9                      u2305 03B0                      u2225 0356  
                    u2065 071E                      u2154 0EFA                      u1435 0034  
                    u2171 0F1A                      u2315 03B8                      u2075 0738  
                    u2172 0F1B                      u2173 0F20                      u2085 0752  
                    u2174 0F21                      u1455 0043                      u2255 0388  
                    u2265 0390                      u2425 00DC                      u1545 0D2F  
                    u2515 0E78                      u1555 0D36                      u1725 0531  
                    u2365 0092                      u2630 0DCA                      u1495 005F  
                    u2455 0D72                      u2545 01D8                      u1665 0507  
                    u1825 0F4A                      u2625 0480                      u2705 0122  
                    u2555 01EA                      u1755 0546                      u2395 00BE  
                    u1915 0EB3                      u2715 0133                      u2565 020C  
                    u1845 0F58                      u1925 0EC4                      u2725 0152  
                    u2670 0F9E                      u2495 0E30                      u2575 021D  
                    u1695 051C                      u1855 0F6D                      u2585 022B  
                    u1865 0F7F                      u1895 0E99                      u2695 0115  
                    _TMR0 0001                      _dato 0E43                      _main 0D45  
                    _ftoa 0250              ___ftpack@arg 0070              ___ftpack@exp 0073  
                    btemp 007E                      start 0000             __CFG_IESO$OFF 0000  
            ___ftmul@cntr 0028              ___ftmul@sign 0029              ___fttol@exp1 0037  
            ___fttol@lval 0033                     ?_dato 0070                     ?_main 0070  
                   ?_ftoa 0044           __end_of___ftadd 05B4             __CFG_WDTE$OFF 0000  
         __end_of___ftdiv 0250           __end_of___ftneg 0C81                     _ANSEL 0188  
         __end_of___lldiv 0F94           __end_of___ftmul 03DB           __end_of___llmod 0ED9  
         __end_of___ftsub 0D24           __end_of___fttol 00FF                     _PORTD 0008  
                   _TRISB 0086                     _TRISD 0088                     _TRISE 0089  
                   _TXREG 0019              ___lltoft@exp 007D            __CFG_FCMEN$OFF 0000  
         __end_of_comando 0E43           __end_of_dpowers 082E                     dato@t 0076  
         __end_of_isdigit 0CB6           __end_of_sendADC 0198             ___ftpack@sign 0074  
                   ftoa@f 0044                     ftoa@l 004E                     pclath 000A  
                   status 0003                     wtemp0 007E           __end_of_sprintf 07E8  
         __initialization 07E8              __end_of_dato 0E8B              __end_of_main 0D69  
            __end_of_ftoa 030A                    ??_dato 0072                    ??_main 007E  
                  ??_ftoa 0049             ___fttol@sign1 0032          ___llmod@dividend 0024  
                  _ADRESH 001E                    _ADRESL 009E          __end_of___ftpack 0071  
                  _ANSELH 0189          __end_of___lltoft 0D94          __end_of___lwtoft 0CEF  
                  ___ftge 0ED9      __size_of_configTimer 000B                    ___wmul 0D24  
               ??___ftadd 0020                 ??___ftdiv 0030                 ??___ftneg 0073  
               ??___lldiv 0078                 ??___ftmul 0020                 ??___llmod 0028  
               ??___ftsub 007E                 ??___fttol 002E                    _runADC 0C72  
               ??_comando 0072                    ftoa@cp 0052     ___ftmul@f3_as_product 0025  
               ??_isdigit 0070                 ??_sendADC 0060          __end_of_printADC 04AD  
               ??_sprintf 0033   __end_of__initialization 07FC                ___ftadd@f1 0078  
              ___ftadd@f2 007B                ___ftge@ff1 0070                ___ftge@ff2 0073  
              ___ftdiv@f1 002D                ___ftdiv@f2 002A                ___ftdiv@f3 0035  
              ___ftneg@f1 0070                ___ftmul@f1 0078                ___ftmul@f2 007B  
              ___ftsub@f1 002A                ___ftsub@f2 0027                ___fttol@f1 002A  
          __pcstackCOMMON 0070              __pidataBANK1 0CEF                ___lltoft@c 0078  
         defineChar@F1815 00AC                ___lwtoft@c 0078            _OPTION_REGbits 0081  
      __size_of_configADC 0014        __size_of_configLCD 006C              sprintf@width 003F  
              __pbssBANK1 00B4                _defineChar 0DC2                __pmaintext 0D45  
                 ?___ftge 0070                   ?___wmul 0070                _confBusLCD 0D94  
                 ?_runADC 0070                 ?___ftpack 0070                 ?___lltoft 0078  
      __size_of_waitTimer 0008                 ?___lwtoft 0078                _configUART 0C9C  
              __stringtab 0800         __end_of_configADC 0CDB         __end_of_configLCD 1000  
               ?_printADC 0053           __size_of___ftge 005D                   ___ftadd 04AD  
                 ___ftdiv 0198                   ___ftneg 0C79                   ___lldiv 0F36  
         __size_of___wmul 0021                   ___ftmul 030A                   ___llmod 0E8B  
                 ___ftsub 0D03                   ___fttol 0071                ??___ftpack 0075  
         __size_of_runADC 0007                ??___lltoft 007C                   __ptext1 0C81  
                 __ptext2 00FF                   __ptext3 03DB                   __ptext4 0250  
                 __ptext5 05B4                   __ptext6 0CA8                   __ptext7 0D24  
                 __ptext8 0E8B                   __ptext9 0F36                dato@estado 0074  
                 _comando 0DFE                ??___lwtoft 007B                   _dpowers 0806  
                 dato@dat 0070                   _isdigit 0CA8                   _sendADC 00FF  
                 _sprintf 05B4                   clrloop0 0C8A      end_of_initialization 07FC  
                 ftoa@buf 00B4                   ftoa@rem 004A               ?_defineChar 0070  
       __end_of_waitTimer 0C89           ___lldiv@divisor 0070           ___lldiv@counter 007D  
             printADC@buf 005D                ??_printADC 0056                 _RCSTAbits 0018  
     printADC@temperature 0059               ?_confBusLCD 0070                 _PORTEbits 0009  
             ?_configUART 0070                configLCD@i 0039                comando@com 0070  
             ___ftdiv@exp 0038                 _TXSTAbits 0098             ??_configTimer 0070  
             ___ftmul@exp 0024            __end_of___ftge 0F36            __end_of___wmul 0D45  
     __size_of_defineChar 003C            __end_of_runADC 0C79       start_initialization 07E8  
              ftoa@status 0047       __size_of_confBusLCD 002E           ___llmod@divisor 0020  
         ___llmod@counter 0029  __CFG_FOSC$INTRC_NOCLKOUT 0000       __size_of_configUART 000C  
                ??___ftge 0076                  ??___wmul 0074                init_fetch0 0CB6  
             __pdataBANK1 00A0       __end_of_configTimer 0C9C          confBusLCD@estado 0072  
                ??_runADC 0070                sendADC@aux 0069         __size_of___ftpack 006C  
       __size_of___lltoft 002B                 ___latbits 0002         __size_of___lwtoft 0014  
           __pcstackBANK0 0020            defineChar@data 0020               sprintf@flag 0038  
             sprintf@prec 0041                  ?___ftadd 0078                  ?___ftdiv 002A  
                ?___ftneg 0070                  ?___lldiv 0070                  ?___ftmul 0078  
                ?___llmod 0020                  ?___ftsub 0027                  ?___fttol 002A  
       __size_of_printADC 00D2                 _configADC 0CC7                 _configLCD 0F94  
               __pstrings 0800                  ?_comando 0070                  ?_isdigit 0070  
                ?_sendADC 0070                  ?_sprintf 002A              ??_defineChar 0078  
          ___wmul@product 0074                 clear_ram0 0C89               _configTimer 0C91  
                _PIR1bits 000C                 _waitTimer 0C81                ?_configADC 0070  
              ?_configLCD 0070              ??_confBusLCD 0070                _ADCON0bits 001F  
             __stringbase 0805                _ADCON1bits 009F         ___wmul@multiplier 0070  
      __end_of_defineChar 0DFE              ??_configUART 0070        __end_of_confBusLCD 0DC2  
      __end_of_configUART 0CA8                ?_waitTimer 0070          __size_of___ftadd 0107  
        __size_of___ftdiv 00B8          __size_of___ftneg 0008          __size_of___lldiv 005E  
        __size_of___ftmul 00D1          __size_of___llmod 004E          __size_of___ftsub 0021  
        __size_of___fttol 008E                  ___ftpack 0005        __end_of__stringtab 0806  
                ___lltoft 0D69               _isdigit$674 0070                  ___lwtoft 0CDB  
        __size_of_comando 0045                sprintf@val 003A               defineChar@i 0028  
        __size_of_isdigit 000E          __size_of_sendADC 0099                  __ptext10 0D69  
                __ptext11 0071                  __ptext20 0C72                  __ptext12 0D03  
                __ptext21 0C9C                  __ptext13 04AD                  __ptext22 0C91  
                __ptext14 0C79                  __ptext23 0F94                  __ptext15 030A  
                __ptext24 0DC2                  __ptext16 0ED9                  __ptext25 0E43  
                __ptext17 0198                  __ptext26 0DFE                  __ptext18 0CDB  
                __ptext27 0D94                  __ptext19 0005                  __ptext28 0CC7  
        __size_of_sprintf 0234             __size_of_dato 0048             __size_of_main 0024  
           __size_of_ftoa 00BA                 printADC@i 005E                 printADC@j 005C  
           printADC@value 0053                  _printADC 03DB                  comando@t 0076  
             ??_configADC 0070               ??_configLCD 0029                _INTCONbits 000B  
        sendADC@converted 0064                  init_ram0 0CBA                  isdigit@c 0071  
               sprintf@ap 0039                 sprintf@sp 003E          ___lldiv@dividend 0074  
               stringcode 0800                _OSCCONbits 008F               ??_waitTimer 0070  
         sendADC@medicion 0067                  sprintf@c 0043                  sprintf@f 002A  
             confBusLCD@t 0074          ___lldiv@quotient 0079                  stringdir 0800  
                stringtab 0800             sendADC@parteA 006B             sendADC@parteB 006A  
            ?_configTimer 0070            configLCD@F1828 00A0  
