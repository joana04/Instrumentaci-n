

Microchip Technology PIC LITE Macro Assembler V1.45 build -152302408 
                                                                                               Tue Apr 10 17:48:34 2018

Microchip Technology Omniscient Code Generator v1.45 (Free mode) build 201711160504
     1                           	processor	16F887
     2                           	opt	pw 120
     3                           	opt	lm
     4                           	psect	strings,global,class=STRING,delta=2
     5                           	psect	cinit,global,class=CODE,merge=1,delta=2
     6                           	psect	bssCOMMON,global,class=COMMON,space=1,delta=1
     7                           	psect	cstackCOMMON,global,class=COMMON,space=1,delta=1
     8                           	psect	maintext,global,class=CODE,split=1,delta=2
     9                           	dabs	1,0x7E,2
    10  0000                     
    11                           ; Version 1.45
    12                           ; Generated 16/11/2017 GMT
    13                           ; 
    14                           ; Copyright Â© 2017, Microchip Technology Inc. and its subsidiaries ("Microchip")
    15                           ; All rights reserved.
    16                           ; 
    17                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    18                           ; 
    19                           ; Redistribution and use in source and binary forms, with or without modification, are
    20                           ; permitted provided that the following conditions are met:
    21                           ; 
    22                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    23                           ;        conditions and the following disclaimer.
    24                           ; 
    25                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    26                           ;        of conditions and the following disclaimer in the documentation and/or other
    27                           ;        materials provided with the distribution.
    28                           ; 
    29                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    30                           ;        software without specific prior written permission.
    31                           ; 
    32                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    33                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    34                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    35                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    36                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
    37                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
    38                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
    39                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    40                           ; 
    41                           ; 
    42                           ; Code-generator required, PIC16F887 Definitions
    43                           ; 
    44                           ; SFR Addresses
    45  0000                     	;# 
    46  0001                     	;# 
    47  0002                     	;# 
    48  0003                     	;# 
    49  0004                     	;# 
    50  0005                     	;# 
    51  0006                     	;# 
    52  0007                     	;# 
    53  0008                     	;# 
    54  0009                     	;# 
    55  000A                     	;# 
    56  000B                     	;# 
    57  000C                     	;# 
    58  000D                     	;# 
    59  000E                     	;# 
    60  000E                     	;# 
    61  000F                     	;# 
    62  0010                     	;# 
    63  0011                     	;# 
    64  0012                     	;# 
    65  0013                     	;# 
    66  0014                     	;# 
    67  0015                     	;# 
    68  0015                     	;# 
    69  0016                     	;# 
    70  0017                     	;# 
    71  0018                     	;# 
    72  0019                     	;# 
    73  001A                     	;# 
    74  001B                     	;# 
    75  001B                     	;# 
    76  001C                     	;# 
    77  001D                     	;# 
    78  001E                     	;# 
    79  001F                     	;# 
    80  0081                     	;# 
    81  0085                     	;# 
    82  0086                     	;# 
    83  0087                     	;# 
    84  0088                     	;# 
    85  0089                     	;# 
    86  008C                     	;# 
    87  008D                     	;# 
    88  008E                     	;# 
    89  008F                     	;# 
    90  0090                     	;# 
    91  0091                     	;# 
    92  0092                     	;# 
    93  0093                     	;# 
    94  0093                     	;# 
    95  0093                     	;# 
    96  0094                     	;# 
    97  0095                     	;# 
    98  0096                     	;# 
    99  0097                     	;# 
   100  0098                     	;# 
   101  0099                     	;# 
   102  009A                     	;# 
   103  009B                     	;# 
   104  009C                     	;# 
   105  009D                     	;# 
   106  009E                     	;# 
   107  009F                     	;# 
   108  0105                     	;# 
   109  0107                     	;# 
   110  0108                     	;# 
   111  0109                     	;# 
   112  010C                     	;# 
   113  010C                     	;# 
   114  010D                     	;# 
   115  010E                     	;# 
   116  010F                     	;# 
   117  0185                     	;# 
   118  0187                     	;# 
   119  0188                     	;# 
   120  0189                     	;# 
   121  018C                     	;# 
   122  018D                     	;# 
   123                           
   124                           	psect	strings
   125  0003                     __pstrings:	
   126  0003                     stringtab:	
   127  0003                     __stringtab:	
   128  0003                     stringcode:	
   129                           ;	String table - string pointers are 1 byte each
   130                           
   131  0003                     stringdir:	
   132  0003  3000               	movlw	high stringdir
   133  0004  008A               	movwf	10
   134  0005  0804               	movf	4,w
   135  0006  0A84               	incf	4,f
   136  0007  0782               	addwf	2,f
   137  0008                     __stringbase:	
   138  0008  3400               	retlw	0
   139  0009                     __end_of__stringtab:	
   140  0009                     main@digits:	
   141  0009  343F               	retlw	63
   142  000A  3406               	retlw	6
   143  000B  345B               	retlw	91
   144  000C  344F               	retlw	79
   145  000D  3466               	retlw	102
   146  000E  346D               	retlw	109
   147  000F  347D               	retlw	125
   148  0010  344B               	retlw	75
   149  0011  347F               	retlw	127
   150  0012  346F               	retlw	111
   151  0013                     __end_ofmain@digits:	
   152  0013                     main@dispSel:	
   153  0013  340E               	retlw	14
   154  0014  340D               	retlw	13
   155  0015  340B               	retlw	11
   156  0016                     __end_ofmain@dispSel:	
   157  0001                     _TMR0	set	1
   158  000B                     _INTCONbits	set	11
   159  0006                     _PORTB	set	6
   160  0008                     _PORTD	set	8
   161  0086                     _TRISB	set	134
   162  0088                     _TRISD	set	136
   163  0081                     _OPTION_REGbits	set	129
   164  008F                     _OSCCONbits	set	143
   165  0189                     _ANSELH	set	393
   166                           
   167                           	psect	cinit
   168  07F9                     start_initialization:	
   169                           ; #config settings
   170                           
   171  07F9                     __initialization:	
   172                           
   173                           ; Clear objects allocated to COMMON
   174  07F9  01F6               	clrf	__pbssCOMMON& (0+127)
   175  07FA  01F7               	clrf	(__pbssCOMMON+1)& (0+127)
   176  07FB  01F8               	clrf	(__pbssCOMMON+2)& (0+127)
   177  07FC                     end_of_initialization:	
   178                           ;End of C runtime variable initialization code
   179                           
   180  07FC                     __end_of__initialization:	
   181  07FC  0183               	clrf	3
   182  07FD  120A  118A  2F98   	ljmp	_main	;jump to C main() function
   183                           
   184                           	psect	bssCOMMON
   185  0076                     __pbssCOMMON:	
   186  0076                     main@F1648:	
   187  0076                     	ds	3
   188                           
   189                           	psect	cstackCOMMON
   190  0070                     __pcstackCOMMON:	
   191  0070                     ?_main:	
   192  0070                     ??_main:	
   193                           ; 1 bytes @ 0x0
   194                           
   195                           
   196                           ; 1 bytes @ 0x0
   197  0070                     	ds	1
   198  0071                     main@count:	
   199                           
   200                           ; 1 bytes @ 0x1
   201  0071                     	ds	1
   202  0072                     main@data:	
   203                           
   204                           ; 3 bytes @ 0x2
   205  0072                     	ds	3
   206  0075                     main@index:	
   207                           
   208                           ; 1 bytes @ 0x5
   209  0075                     	ds	1
   210                           
   211                           	psect	maintext
   212  0798                     __pmaintext:	
   213 ;;
   214 ;;Main: autosize = 0, tempsize = 1, incstack = 0, save=0
   215 ;;
   216 ;; *************** function _main *****************
   217 ;; Defined at:
   218 ;;		line 3 in file "main.c"
   219 ;; Parameters:    Size  Location     Type
   220 ;;		None
   221 ;; Auto vars:     Size  Location     Type
   222 ;;  data            3    2[COMMON] unsigned char [3]
   223 ;;  index           1    5[COMMON] unsigned char 
   224 ;;  count           1    1[COMMON] unsigned char 
   225 ;; Return value:  Size  Location     Type
   226 ;;                  1    wreg      void 
   227 ;; Registers used:
   228 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath
   229 ;; Tracked objects:
   230 ;;		On entry : B00/0
   231 ;;		On exit  : 0/0
   232 ;;		Unchanged: 0/0
   233 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   234 ;;      Params:         0       0       0       0       0
   235 ;;      Locals:         5       0       0       0       0
   236 ;;      Temps:          1       0       0       0       0
   237 ;;      Totals:         6       0       0       0       0
   238 ;;Total ram usage:        6 bytes
   239 ;; Hardware stack levels used:    1
   240 ;; This function calls:
   241 ;;		Nothing
   242 ;; This function is called by:
   243 ;;		Startup code after reset
   244 ;; This function uses a non-reentrant model
   245 ;;
   246                           
   247                           
   248                           ;psect for function _main
   249  0798                     _main:	
   250                           
   251                           ;main.c: 4: OSCCONbits.IRCF2 = 0;
   252                           
   253                           ;incstack = 0
   254                           ; Regs used in _main: [wreg-fsr0h+status,2+status,0+pclath]
   255  0798  1683               	bsf	3,5	;RP0=1, select bank1
   256  0799  1303               	bcf	3,6	;RP1=0, select bank1
   257  079A  130F               	bcf	15,6	;volatile
   258                           
   259                           ;main.c: 5: OPTION_REGbits.PS1 = 0;
   260  079B  1081               	bcf	1,1	;volatile
   261                           
   262                           ;main.c: 6: OPTION_REGbits.PSA = 0;
   263  079C  1181               	bcf	1,3	;volatile
   264                           
   265                           ;main.c: 7: OPTION_REGbits.T0CS = 0;
   266  079D  1281               	bcf	1,5	;volatile
   267                           
   268                           ;main.c: 9: TRISD = 0x00;
   269  079E  0188               	clrf	8	;volatile
   270                           
   271                           ;main.c: 10: TRISB = 0xf0;
   272  079F  30F0               	movlw	240
   273  07A0  0086               	movwf	6	;volatile
   274                           
   275                           ;main.c: 11: ANSELH = 0;
   276  07A1  1683               	bsf	3,5	;RP0=1, select bank3
   277  07A2  1703               	bsf	3,6	;RP1=1, select bank3
   278  07A3  0189               	clrf	9	;volatile
   279                           
   280                           ;main.c: 12: unsigned char index = 0, data[3] = {0, 0, 0}, count = 0;
   281  07A4  01F5               	clrf	main@index
   282  07A5  0876               	movf	main@F1648,w
   283  07A6  00F2               	movwf	main@data
   284  07A7  0877               	movf	main@F1648+1,w
   285  07A8  00F3               	movwf	main@data+1
   286  07A9  0878               	movf	main@F1648+2,w
   287  07AA  00F4               	movwf	main@data+2
   288  07AB  01F1               	clrf	main@count
   289  07AC                     l553:	
   290                           ;main.c: 13: static unsigned char const digits[10] = {0x3f, 0x06, 0x5b, 0x4f, 0x66, 0x6d
      +                          , 0x7d, 0x4b, 0x7f, 0x6f};
   291                           ;main.c: 14: static unsigned char const dispSel[3] = {0xE, 0xD, 0xB};
   292                           ;main.c: 16: while(1) {
   293                           
   294                           
   295                           ;main.c: 17: PORTD = digits[data[index]];
   296  07AC  0875               	movf	main@index,w
   297  07AD  3E72               	addlw	(low (main@data| 0))& (0+255)
   298  07AE  0084               	movwf	4
   299  07AF  0800               	movf	0,w
   300  07B0  3E01               	addlw	low ((main@digits-__stringbase)| (0+32768))
   301  07B1  0084               	movwf	4
   302  07B2  120A  118A  2003  120A  118A  	fcall	stringdir
   303  07B7  1283               	bcf	3,5	;RP0=0, select bank0
   304  07B8  1303               	bcf	3,6	;RP1=0, select bank0
   305  07B9  0088               	movwf	8	;volatile
   306                           
   307                           ;main.c: 18: PORTB = dispSel[index];
   308  07BA  0875               	movf	main@index,w
   309  07BB  3E0B               	addlw	low ((main@dispSel-__stringbase)| (0+32768))
   310  07BC  0084               	movwf	4
   311  07BD  120A  118A  2003  120A  118A  	fcall	stringdir
   312  07C2  0086               	movwf	6	;volatile
   313  07C3                     l30:	
   314                           ;main.c: 21: ;
   315                           
   316                           ;main.c: 20: while(INTCONbits.T0IF != 1)
   317                           
   318  07C3  1D0B               	btfss	11,2	;volatile
   319  07C4  2FC3               	goto	l30
   320                           
   321                           ;main.c: 22: TMR0 = 12;
   322  07C5  300C               	movlw	12
   323  07C6  1283               	bcf	3,5	;RP0=0, select bank0
   324  07C7  1303               	bcf	3,6	;RP1=0, select bank0
   325  07C8  0081               	movwf	1	;volatile
   326                           
   327                           ;main.c: 23: INTCONbits.T0IF = 0;
   328  07C9  110B               	bcf	11,2	;volatile
   329                           
   330                           ;main.c: 25: if(index < 2)
   331  07CA  3002               	movlw	2
   332  07CB  0275               	subwf	main@index,w
   333  07CC  1803               	skipnc
   334  07CD  2FD3               	goto	l563
   335                           
   336                           ;main.c: 26: index++;
   337  07CE  3001               	movlw	1
   338  07CF  00F0               	movwf	??_main
   339  07D0  0870               	movf	??_main,w
   340  07D1  07F5               	addwf	main@index,f
   341  07D2  2FD4               	goto	l565
   342  07D3                     l563:	
   343                           
   344                           ;main.c: 27: else
   345                           ;main.c: 28: index = 0;
   346  07D3  01F5               	clrf	main@index
   347  07D4                     l565:	
   348                           
   349                           ;main.c: 29: if(++count == 3) {
   350  07D4  3001               	movlw	1
   351  07D5  00F0               	movwf	??_main
   352  07D6  0870               	movf	??_main,w
   353  07D7  07F1               	addwf	main@count,f
   354  07D8  3003               	movlw	3
   355  07D9  0671               	xorwf	main@count,w
   356  07DA  1D03               	btfss	3,2
   357  07DB  2FAC               	goto	l553
   358                           
   359                           ;main.c: 30: count = 0;
   360  07DC  01F1               	clrf	main@count
   361                           
   362                           ;main.c: 31: if(++data[2] == 10) {
   363  07DD  3001               	movlw	1
   364  07DE  00F0               	movwf	??_main
   365  07DF  0870               	movf	??_main,w
   366  07E0  07F4               	addwf	main@data+2,f
   367  07E1  300A               	movlw	10
   368  07E2  0674               	xorwf	main@data+2,w
   369  07E3  1D03               	btfss	3,2
   370  07E4  2FAC               	goto	l553
   371                           
   372                           ;main.c: 32: data[2] = 0;
   373  07E5  01F4               	clrf	main@data+2
   374                           
   375                           ;main.c: 33: if(++data[1] == 10) {
   376  07E6  3001               	movlw	1
   377  07E7  00F0               	movwf	??_main
   378  07E8  0870               	movf	??_main,w
   379  07E9  07F3               	addwf	main@data+1,f
   380  07EA  300A               	movlw	10
   381  07EB  0673               	xorwf	main@data+1,w
   382  07EC  1D03               	btfss	3,2
   383  07ED  2FAC               	goto	l553
   384                           
   385                           ;main.c: 34: data[1] = 0;
   386  07EE  01F3               	clrf	main@data+1
   387                           
   388                           ;main.c: 35: if(++data[0] == 10)
   389  07EF  3001               	movlw	1
   390  07F0  00F0               	movwf	??_main
   391  07F1  0870               	movf	??_main,w
   392  07F2  07F2               	addwf	main@data,f
   393  07F3  300A               	movlw	10
   394  07F4  0672               	xorwf	main@data,w
   395  07F5  1D03               	btfss	3,2
   396  07F6  2FAC               	goto	l553
   397                           
   398                           ;main.c: 36: data[0] = 0;
   399  07F7  01F2               	clrf	main@data
   400  07F8  2FAC               	goto	l553
   401  07F9                     __end_of_main:	
   402  007E                     btemp	set	126	;btemp
   403  007E                     wtemp0	set	126


Data Sizes:
    Strings     0
    Constant    13
    Data        0
    BSS         3
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMMON           14      6       9
    BANK0            80      0       0
    BANK1            80      0       0
    BANK3            96      0       0
    BANK2            96      0       0

Pointer List with Targets:

    None.

Critical Paths under _main in COMMON

    None.

Critical Paths under _main in BANK0

    None.

Critical Paths under _main in BANK1

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _main in BANK2

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (1) _main                                                 6     6      0     236
                                              0 COMMON     6     6      0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 1
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BITCOMMON            E      0       0       0        0.0%
EEDATA             100      0       0       0        0.0%
NULL                 0      0       0       0        0.0%
CODE                 0      0       0       0        0.0%
COMMON               E      6       9       1       64.3%
BITSFR0              0      0       0       1        0.0%
SFR0                 0      0       0       1        0.0%
BITSFR1              0      0       0       2        0.0%
SFR1                 0      0       0       2        0.0%
STACK                0      0       0       2        0.0%
ABS                  0      0       9       3        0.0%
BITBANK0            50      0       0       4        0.0%
BITSFR3              0      0       0       4        0.0%
SFR3                 0      0       0       4        0.0%
BANK0               50      0       0       5        0.0%
BITSFR2              0      0       0       5        0.0%
SFR2                 0      0       0       5        0.0%
BITBANK1            50      0       0       6        0.0%
BANK1               50      0       0       7        0.0%
BITBANK3            60      0       0       8        0.0%
BANK3               60      0       0       9        0.0%
BITBANK2            60      0       0      10        0.0%
BANK2               60      0       0      11        0.0%
DATA                 0      0       9      12        0.0%


Microchip Technology PIC Macro Assembler V1.45 build -152302408 
Symbol Table                                                                                   Tue Apr 10 17:48:34 2018

                      pc 0002                       l30 07C3                       fsr 0004  
                    l553 07AC                      l563 07D3                      l565 07D4  
                    fsr0 0004                      indf 0000              main@dispSel 0013  
                   _TMR0 0001                     _main 0798                     btemp 007E  
                   start 0000                    ?_main 0070                    _PORTB 0006  
                  _PORTD 0008                    _TRISB 0086                    _TRISD 0088  
                  pclath 000A                    status 0003                    wtemp0 007E  
        __initialization 07F9             __end_of_main 07F9                   ??_main 0070  
                 _ANSELH 0189  __end_of__initialization 07FC           __pcstackCOMMON 0070  
         _OPTION_REGbits 0081               __pmaintext 0798               __stringtab 0003  
   end_of_initialization 07FC               main@digits 0009      start_initialization 07F9  
            __pbssCOMMON 0076                ___latbits 0002                __pstrings 0003  
              main@F1648 0076              __stringbase 0008                main@count 0071  
              main@index 0075       __end_of__stringtab 0009            __size_of_main 0061  
               main@data 0072               _INTCONbits 000B      __end_ofmain@dispSel 0016  
              stringcode 0003               _OSCCONbits 008F       __end_ofmain@digits 0013  
               stringdir 0003                 stringtab 0003  
